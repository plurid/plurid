/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = transform;
function transform(element) {
    element.addEventListener('wheel', event => {
        // console.log(event)
        // console.log(event.path);
        // console.log(searchForRootId(event.path));

        let pluridToTransform = getPluridToTransform(event.path)

        if(event.shiftKey) {
            console.log(`Rotate ${pluridToTransform}`);
        }

        if(event.altKey) {
            console.log(`Translate ${pluridToTransform}`);
        }

        if(event.metaKey) {
            console.log(`Scale ${pluridToTransform}`);
        }
    });
}


function getPluridToTransform(path) {
    let pluridToTransform = path[0].localName;

    if (pluridToTransform === "plurid-options") {
        // do nothing
    }

    if (pluridToTransform === "plurid-roots" || pluridToTransform === "plurid-container") {
        pluridToTransform = "plurid-roots";
    } else {
        // console.log(searchForRootId(path));
        pluridToTransform = searchForRootId(path);
    }

    return pluridToTransform;
}



function searchForRootId(path) {
    // console.log(path.length);
    for (var i = 0; i < path.length; i++) {
        // console.log(path[i]);
        if (path[i].localName === "plurid-root") {
            return path[i].id;
        }
    }
}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(2);

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

// require JS files
// require('./source/legacy/plurid');
// require('./source/legacy/container-options');


// require Elements
__webpack_require__(3);
__webpack_require__(4);
__webpack_require__(5);
__webpack_require__(6);
__webpack_require__(7);
__webpack_require__(8);


// require Logic
__webpack_require__(9);


// require Sass main file
__webpack_require__(10);


/***/ }),
/* 3 */
/***/ (function(module, exports) {

/////////
// BRANCH
var pluridBranch = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridBranch works");
        }
    }
});

document.registerElement( "plurid-branch", {
    prototype: pluridBranch
});



var pluridInsertion = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridInsertion works");
        }
    }
});

document.registerElement( "plurid-insertion", {
    prototype: pluridInsertion
});



var pluridBridge = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridBridge works");
        }
    }
});

document.registerElement( "plurid-bridge", {
    prototype: pluridBridge
});



var pluridScion = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridScion works");
        }
    }
});

document.registerElement( "plurid-scion", {
    prototype: pluridScion
});

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__commands_js__ = __webpack_require__(0);



////////////
// CONTAINER
var pluridContainer = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            __WEBPACK_IMPORTED_MODULE_0__commands_js__["a" /* transform */](this);
        }
    }
});

document.registerElement( "plurid-container", {
    prototype: pluridContainer
});


var pluridContainerOptions = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridContainerOptions works");
        }
    }
});

document.registerElement( "plurid-options", {
    prototype: pluridContainerOptions
});



/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__commands_js__ = __webpack_require__(0);



var pluridContent = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridContent works");
        }
    }
});

document.registerElement( "plurid-content", {
    prototype: pluridContent
});


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__commands_js__ = __webpack_require__(0);



////////
// ROOTS
var pluridRoots = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridRoots works");
        }
    }
});

document.registerElement( "plurid-roots", {
    prototype: pluridRoots
});



var rootId = 1;

var pluridRoot = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridRoot works");
            this.id=`plurid-root-${rootId}`;
            // console.log(this.id);
            rootId++;
        }
    }
});

document.registerElement( "plurid-root", {
    prototype: pluridRoot
});

/***/ }),
/* 7 */
/***/ (function(module, exports) {

var sheetId = 1;

var pluridSheet = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheet works");
            this.id=`plurid-sheet-${sheetId}`;
            // console.log(this.id);
            sheetId++;
        }
    }
});

document.registerElement( "plurid-sheet", {
    prototype: pluridSheet
});



var pluridSheetDouble = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetDouble works");
        }
    }
});

document.registerElement( "plurid-sheet-double", {
    prototype: pluridSheetDouble
});



var pluridSheetDoubleFront = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetDoubleFront works");
        }
    }
});

document.registerElement( "plurid-sheet-double-front", {
    prototype: pluridSheetDoubleFront
});



var pluridSheetDoubleBack = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetDoubleBack works");
        }
    }
});

document.registerElement( "plurid-sheet-double-back", {
    prototype: pluridSheetDoubleBack
});



var pluridSheetControls = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetControls works");
        }
    }
});

document.registerElement( "plurid-controls", {
    prototype: pluridSheetControls
});


/***/ }),
/* 8 */
/***/ (function(module, exports) {

// PLURID SOLID
var pluridSolid = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolid works");
        }
    }
});

document.registerElement( "plurid-solid", {
    prototype: pluridSolid
});



var pluridSolidFront = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidFront works");
        }
    }
});

document.registerElement( "plurid-solid-front", {
    prototype: pluridSolidFront
});



var pluridSolidBack = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidBack works");
        }
    }
});

document.registerElement( "plurid-solid-back", {
    prototype: pluridSolidBack
});



var pluridSolidTop = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidTop works");
        }
    }
});

document.registerElement( "plurid-solid-top", {
    prototype: pluridSolidTop
});



var pluridSolidBottom = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidBottom works");
        }
    }
});

document.registerElement( "plurid-solid-bottom", {
    prototype: pluridSolidBottom
});



var pluridSolidRight = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidRight works");
        }
    }
});

document.registerElement( "plurid-solid-right", {
    prototype: pluridSolidRight
});



var pluridSolidLeft = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidLeft works");
        }
    }
});

document.registerElement( "plurid-solid-left", {
    prototype: pluridSolidLeft
});


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["getMouseWheelDirection"] = getMouseWheelDirection;
let direction = "";
let threshold = 0;
let absThreshold = 10;

function getMouseWheelDirection(event) {
    const wheelDeltaX = event.wheelDeltaX;
    const wheelDeltaY = event.wheelDeltaY;
    const absWheelDeltaX = Math.abs(wheelDeltaX)
    const absWheelDeltaY = Math.abs(wheelDeltaY)

    if (wheelDeltaX > threshold
        && absWheelDeltaY < absThreshold
        && absWheelDeltaX > absWheelDeltaY) {
        direction = "Left";
    }

    if (wheelDeltaX < threshold
        && absWheelDeltaY < absThreshold
        && absWheelDeltaX > absWheelDeltaY) {
        direction = "Right";
    }

    if (wheelDeltaY > threshold
        && absWheelDeltaX < absThreshold
        && absWheelDeltaY > absWheelDeltaX) {
        direction = "Up";
    }

    if (wheelDeltaY < threshold
        && absWheelDeltaX < absThreshold
        && absWheelDeltaY > absWheelDeltaX) {
        direction = "Down";
    }

    // if (positionX < threshold && positionY < threshold) {
    //     direction = "upleft";
    // }

    // if (positionX < threshold && positionY > threshold ) {
    //     direction = "downleft";
    // }

    // if (positionX > threshold && positionY > threshold ) {
    //     direction = "downright";
    // }

    // if (positionX > threshold && positionY < threshold ) {
    //     direction = "upright";
    // }

    // console.log('----- direction: ', direction);
    // console.log('movementX: ', event.movementX);
    // console.log('movementY: ', event.movementY);
    return direction;
}


var pluridContainer = document.getElementsByTagName("plurid-container");

pluridContainer[0].addEventListener("wheel", function(event) {
    event.preventDefault();

    var deltaX = event.deltaX;
    var deltaY = event.deltaY;
    var wheelDeltaX = event.wheelDeltaX;
    var wheelDeltaY = event.wheelDeltaY;

    // console.log(`Delta X ${deltaX}`, `Delta Y ${deltaY}`);
    // console.log(`Wheel Delta X: ${wheelDeltaX}`, `Wheel Delta Y: ${wheelDeltaY}`);

    // console.log(event);
    console.log(getMouseWheelDirection(event));
});

// console.log(pluridContainer[0]);


/***/ }),
/* 10 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);