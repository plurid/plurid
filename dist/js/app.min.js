/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = transform;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__logic_get_plurid_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__logic_style_plurid_js__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__logic_transforms_js__ = __webpack_require__(8);




let pluridStack = new Set();

function transform(element) {
    let plurid = document.querySelector("plurid-roots");

    element.addEventListener("click", event => {
        plurid = Object(__WEBPACK_IMPORTED_MODULE_0__logic_get_plurid_js__["a" /* getPlurid */])(event);
        pluridStack.add(plurid);
        Object(__WEBPACK_IMPORTED_MODULE_1__logic_style_plurid_js__["a" /* stylePlurid */])(plurid, pluridStack);
    });

    element.addEventListener('wheel', event => {
        event.preventDefault();

        if(event.shiftKey) {
            Object(__WEBPACK_IMPORTED_MODULE_2__logic_transforms_js__["a" /* rotatePlurid */])(event, plurid);
        }

        if(event.altKey) {
            Object(__WEBPACK_IMPORTED_MODULE_2__logic_transforms_js__["c" /* translatePlurid */])(event, plurid);
        }

        if(event.metaKey) {
            Object(__WEBPACK_IMPORTED_MODULE_2__logic_transforms_js__["b" /* scalePlurid */])(event, plurid);
        }
    });
}


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getPlurid;
function getPlurid(event) {
    let pluridToTransformId = getPluridToTransformId(event.path);
    let pluridToTransformElement = document.querySelector(`#${pluridToTransformId}`);

    return pluridToTransformElement;
}


function getPluridToTransformId(path) {
    let pluridToTransformId = path[0].localName;

    if (pluridToTransformId === "plurid-options") {
        // no transforms are performable while cursor is over <plurid-options>
        return null;
    }

    if (pluridToTransformId === "plurid-roots"
        || pluridToTransformId === "plurid-container") {
        pluridToTransformId = "plurid-roots";
    } else {
        pluridToTransformId = searchForPluridRootId(path);
    }

    return pluridToTransformId;
}


function searchForPluridRootId(path) {
    for (let i = 0; i < path.length; i++) {
        if (path[i].localName === "plurid-root") {
            return path[i].id;
        }
    }
}


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["getDirection"] = getDirection;
let direction = "";
let threshold = 0;
let absThreshold = 10;

function getDirection(event) {
    const wheelDeltaX = event.wheelDeltaX;
    const wheelDeltaY = event.wheelDeltaY;
    const absWheelDeltaX = Math.abs(wheelDeltaX)
    const absWheelDeltaY = Math.abs(wheelDeltaY)

    if (wheelDeltaX > threshold
        && absWheelDeltaY < absThreshold
        && absWheelDeltaX > absWheelDeltaY) {
        direction = "left";
    }

    if (wheelDeltaX < threshold
        && absWheelDeltaY < absThreshold
        && absWheelDeltaX > absWheelDeltaY) {
        direction = "right";
    }

    if (wheelDeltaY > threshold
        && absWheelDeltaX < absThreshold
        && absWheelDeltaY > absWheelDeltaX) {
        direction = "up";
    }

    if (wheelDeltaY < threshold
        && absWheelDeltaX < absThreshold
        && absWheelDeltaY > absWheelDeltaX) {
        direction = "down";
    }

    // if (positionX < threshold && positionY < threshold) {
    //     direction = "upleft";
    // }

    // if (positionX < threshold && positionY > threshold ) {
    //     direction = "downleft";
    // }

    // if (positionX > threshold && positionY > threshold ) {
    //     direction = "downright";
    // }

    // if (positionX > threshold && positionY < threshold ) {
    //     direction = "upright";
    // }

    // console.log('----- direction: ', direction);
    // console.log('movementX: ', event.movementX);
    // console.log('movementY: ', event.movementY);
    return direction;
}


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["c"] = rotateXMatrix;
/* harmony export (immutable) */ __webpack_exports__["d"] = rotateYMatrix;
/* unused harmony export rotateZMatrix */
/* harmony export (immutable) */ __webpack_exports__["f"] = translateMatrix;
/* harmony export (immutable) */ __webpack_exports__["e"] = scaleMatrix;
/* unused harmony export multiplyMatrices */
/* harmony export (immutable) */ __webpack_exports__["b"] = multiplyArrayOfMatrices;
/* harmony export (immutable) */ __webpack_exports__["a"] = matrixArrayToCssMatrix;
// Matrix Operations for Single Value (De-)Composition
// Sourced from https://github.com/gregtatum/mdn-webgl/blob/master/library/matrices.js
function rotateXMatrix(a) {
    var cos = Math.cos;
    var sin = Math.sin;

    return [
         1,       0,        0,     0,
         0,  cos(a),  -sin(a),     0,
         0,  sin(a),   cos(a),     0,
         0,       0,        0,     1
    ];
}


function rotateYMatrix(a) {
    var cos = Math.cos;
    var sin = Math.sin;

    return [
         cos(a),   0, sin(a),   0,
              0,   1,      0,   0,
        -sin(a),   0, cos(a),   0,
              0,   0,      0,   1
    ];
}


function rotateZMatrix(a) {
    var cos = Math.cos;
    var sin = Math.sin;

    return [
        cos(a), -sin(a),    0,    0,
        sin(a),  cos(a),    0,    0,
             0,       0,    1,    0,
             0,       0,    0,    1
    ];
}


function translateMatrix(x, y, z) {
	return [
	    1,    0,    0,   0,
	    0,    1,    0,   0,
	    0,    0,    1,   0,
	    x,    y,    z,   1
	];
}


function scaleMatrix(s) {
	return [
	    s,    0,    0,   0,
	    0,    s,    0,   0,
	    0,    0,    s,   0,
	    0,    0,    0,   1
	];
}


function multiplyMatrices(a, b) {
    // https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js#L306-L337

    var result = [];

    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];

    // Cache only the current line of the second matrix
    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    result[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    result[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    result[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    result[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];
    result[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    result[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    result[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    result[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];
    result[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    result[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    result[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    result[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];
    result[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
    result[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
    result[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
    result[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;

    return result;
}


function multiplyArrayOfMatrices(matrices) {
    var inputMatrix = matrices[0];

    for(var i=1; i < matrices.length; i++) {
      inputMatrix = multiplyMatrices(inputMatrix, matrices[i]);
    }

    return inputMatrix;
}


// Create the matrix3d style property from a matrix array
function matrixArrayToCssMatrix(array) {
    return 'matrix3d(' + array.join(',') + ')';
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(5);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

// require JS files
// require('./source/legacy/plurid');
// require('./source/legacy/container-options');


// require Elements
__webpack_require__(6);
__webpack_require__(7);
__webpack_require__(10);
__webpack_require__(11);
__webpack_require__(12);
__webpack_require__(13);


// require Logic
__webpack_require__(2);


// require Sass main file
__webpack_require__(14);


/***/ }),
/* 6 */
/***/ (function(module, exports) {

/////////
// BRANCH
var pluridBranch = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridBranch works");
        }
    }
});

document.registerElement( "plurid-branch", {
    prototype: pluridBranch
});



var pluridInsertion = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridInsertion works");
        }
    }
});

document.registerElement( "plurid-insertion", {
    prototype: pluridInsertion
});



var pluridBridge = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridBridge works");
        }
    }
});

document.registerElement( "plurid-bridge", {
    prototype: pluridBridge
});



var pluridScion = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridScion works");
        }
    }
});

document.registerElement( "plurid-scion", {
    prototype: pluridScion
});

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__commands_js__ = __webpack_require__(0);



////////////
// CONTAINER
var pluridContainer = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            Object(__WEBPACK_IMPORTED_MODULE_0__commands_js__["a" /* transform */])(this);
        }
    }
});

document.registerElement( "plurid-container", {
    prototype: pluridContainer
});


var pluridContainerOptions = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridContainerOptions works");
        }
    }
});

document.registerElement( "plurid-options", {
    prototype: pluridContainerOptions
});


/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = rotatePlurid;
/* harmony export (immutable) */ __webpack_exports__["c"] = translatePlurid;
/* harmony export (immutable) */ __webpack_exports__["b"] = scalePlurid;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__get_plurid_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directions_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__matrix_js__ = __webpack_require__(3);






function rotatePlurid(event, plurid) {
    console.log("ROTATE");
    console.log("Event", event);

    // let plurid = getPlurid(event);
    console.log("Plurid", plurid);

    let direction = Object(__WEBPACK_IMPORTED_MODULE_1__directions_js__["getDirection"])(event);
    console.log("Direction", direction);


    var rotateX = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["a" /* getTransformRotate */](plurid).rotateX;
    var rotateY = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["a" /* getTransformRotate */](plurid).rotateY;
    var translateX = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["c" /* getTransformTranslate */](plurid).translateX;
    var translateY = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["c" /* getTransformTranslate */](plurid).translateY;
    var translateZ = 0;
    var scale = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["b" /* getTransformScale */](plurid).scale;

    var valrotationXMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["c" /* rotateXMatrix */](-1 * rotateX);
    var valrotationYMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["d" /* rotateYMatrix */](-1 * rotateY);
    var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, 0);
    var valscaleMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["e" /* scaleMatrix */](scale);

    var yPos = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["d" /* getyPos */](event, plurid);

    if (scale < 0.5) {
        var angleIncrement = 0.12;
    } else {
        var angleIncrement = 0.07;
    }

    // console.log("----------------------------------")
    // console.log("Rotate X", rotateX);
    // console.log("Rotate X in Degrees", rotateX*180/Math.PI);
    // console.log("Rotate Y",rotateY);
    // console.log("Rotate Y in Degrees",rotateY*180/Math.PI);
    // console.log("Rotate Y",rotateY);
    // console.log("Translate X", translateX);
    // console.log("Translate Y", translateY);
    // console.log("Scale", scale);

    // ISSUE
    // issue with the angle jumping over 2*pi when having both X and Y movement

    plurid.style.transition = "0ms ease-in-out";

    if (direction === "left") {
        rotateY -= angleIncrement;
        valrotationYMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["d" /* rotateYMatrix */](-1 * rotateY);

        // console.log("valrotationXMatrix", valrotationXMatrix);
        // console.log("valrotationYMatrix", valrotationYMatrix);
        // console.log("valtranslationMatrix", valtranslationMatrix);
        // console.log("valscaleMatrix", valscaleMatrix);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "right") {
        rotateY += angleIncrement;
        valrotationYMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["d" /* rotateYMatrix */](-1 * rotateY);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "up") {
        rotateX += angleIncrement;
        valrotationXMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["c" /* rotateXMatrix */](-1 * rotateX);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "down") {
        rotateX -= angleIncrement;

        valrotationXMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["c" /* rotateXMatrix */](-1 * rotateX);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }
}


function translatePlurid(event, plurid) {
    console.log("TRANSLATE");
    console.log("Event", event);

    // let plurid = getPlurid(event);
    console.log("Plurid", plurid);

    let direction = Object(__WEBPACK_IMPORTED_MODULE_1__directions_js__["getDirection"])(event);
    console.log("Direction", direction);


    var rotateX = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["a" /* getTransformRotate */](plurid).rotateX;
    var rotateY = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["a" /* getTransformRotate */](plurid).rotateY;
    var translateX = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["c" /* getTransformTranslate */](plurid).translateX;
    var translateY = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["c" /* getTransformTranslate */](plurid).translateY;
    var translateZ = 0;
    var scale = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["b" /* getTransformScale */](plurid).scale;

    var valrotationXMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["c" /* rotateXMatrix */](-1 * rotateX);
    var valrotationYMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["d" /* rotateYMatrix */](-1 * rotateY);
    var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, 0);
    var valscaleMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["e" /* scaleMatrix */](scale);

    var yPos = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["d" /* getyPos */](event, plurid);

    if (scale < 0.5) {
        var linearIncrement = 50;
    } else {
        var linearIncrement = 10;
    }

    // console.log("----------------------------------")
    // console.log("Rotate X", rotateX);
    // console.log("Rotate Y",rotateY);
    // console.log("Translate X", translateX);
    // console.log("Translate Y", translateY);
    // console.log("Scale", scale);
    // console.log("getRotateXMatrix", getRotateXMatrix);
    // console.log("getRotateYMatrix", getRotateYMatrix);
    // console.log("getTranslateMatrix", getTranslateMatrix);
    // console.log("getScaleMatrix", getScaleMatrix);

    plurid.style.transition = "20ms ease-in-out";

    if (direction === "left") {
        translateX -= linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "right") {
        translateX += linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "up") {
        translateY -= linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "down") {
        translateY += linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "upleft") {
        translateY -= linearIncrement;
        translateX -= linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "downleft") {
        translateY += linearIncrement;
        translateX -= linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "downright") {
        translateY += linearIncrement;
        translateX += linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "upright") {
        translateY -= linearIncrement;
        translateX += linearIncrement;
        var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, translateZ);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }
}


function scalePlurid(event, plurid) {
    console.log("SCALE");
    console.log("Event", event);

    // let plurid = getPlurid(event);
    console.log("Plurid", plurid);

    let direction = Object(__WEBPACK_IMPORTED_MODULE_1__directions_js__["getDirection"])(event);
    console.log("Direction", direction);

    var rotateX = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["a" /* getTransformRotate */](plurid).rotateX;
    var rotateY = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["a" /* getTransformRotate */](plurid).rotateY;
    var translateX = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["c" /* getTransformTranslate */](plurid).translateX;
    var translateY = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["c" /* getTransformTranslate */](plurid).translateY;
    var translateZ = 0;
    var scale = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["b" /* getTransformScale */](plurid).scale;

    var valrotationXMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["c" /* rotateXMatrix */](-1 * rotateX);
    var valrotationYMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["d" /* rotateYMatrix */](-1 * rotateY);
    var valtranslationMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["f" /* translateMatrix */](translateX, translateY, 0);
    var valscaleMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["e" /* scaleMatrix */](scale);

    var yPos = __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["d" /* getyPos */](event, plurid);

    var scaleIncrement = 0.05;

    // console.log("----------------------------------")
    // console.log("Rotate X", rotateX);
    // console.log("Rotate Y",rotateY);
    // console.log("Translate X", translateX);
    // console.log("Translate Y", translateY);
    // console.log("Scale", scale);
    // console.log("getRotateXMatrix", getRotateXMatrix);
    // console.log("getRotateYMatrix", getRotateYMatrix);
    // console.log("getTranslateMatrix", getTranslateMatrix);
    // console.log("getScaleMatrix", getScaleMatrix);

    plurid.style.transition = "20ms ease-in-out";

    if (direction === "up" || direction === "upright" || direction === "upleft") {
        scale += scaleIncrement;

        if (scale > 4) {
            scale = 4
        }

        var valscaleMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["e" /* scaleMatrix */](scale);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }

    if (direction === "down" || direction === "downleft" || direction === "downright") {
        scale -= scaleIncrement;

        if (scale < 0.1) {
            scale = 0.1
        }

        var valscaleMatrix = __WEBPACK_IMPORTED_MODULE_3__matrix_js__["e" /* scaleMatrix */](scale);

        __WEBPACK_IMPORTED_MODULE_2__transforms_setup_js__["e" /* setTransform */](plurid, valrotationXMatrix, valrotationYMatrix, valtranslationMatrix, valscaleMatrix, yPos);
    }
}


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getTransformRotate;
/* harmony export (immutable) */ __webpack_exports__["c"] = getTransformTranslate;
/* harmony export (immutable) */ __webpack_exports__["b"] = getTransformScale;
/* unused harmony export getMatrixValues */
/* unused harmony export getRotationMatrix */
/* unused harmony export getTranslationMatrix */
/* unused harmony export getScaleMatrix */
/* harmony export (immutable) */ __webpack_exports__["e"] = setTransform;
/* unused harmony export setCursor */
/* harmony export (immutable) */ __webpack_exports__["d"] = getyPos;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__matrix_js__ = __webpack_require__(3);



function getTransformRotate(element) {
    var values = getRotationMatrix(element);
    // console.log("getTransformRotate Matrix", values);

    var rotateX,
        rotateY;

    var pi = Math.PI;

    if (values.length == 6) {
        var cosa = parseFloat(values[0]);
        var sina = parseFloat(values[1]);
        // console.log("cos A", cosa);
        // console.log("sin A", sina);

        if (cosa == 1 && sina == 0) {
            rotateX = Math.asin(sina);
            rotateY = Math.acos(cosa);
        }
    }

    if (values.length == 16) {
        var cosaX = parseFloat(values[5]);
        var sinaX = parseFloat(values[9]);
        // console.log("cos A X", cosaX);
        // console.log("sin A X", sinaX);

        // 0-180
        if (sinaX <= 0) {
            rotateX = Math.acos(cosaX);
        }

        // 181-360
        if (sinaX > 0) {
            rotateX = 2*pi - Math.acos(cosaX);
        }

        // console.log("rotateX in Radians", rotateX);
        // console.log("rotateX in Degrees", rotateX*180/pi);


        var cosaY = parseFloat(values[0]);
        var sinaY = parseFloat(values[2]);
        // console.log("cos A Y", cosaY);
        // console.log("sin A Y", sinaY);

        // 0-180
        if (sinaY <= 0) {
            rotateY = Math.acos(cosaY);
        }

        // 181-360
        if (sinaY > 0) {
            rotateY = 2*pi - Math.acos(cosaY);
        }

        // console.log("rotateY in Radians", rotateY);
        // console.log("rotateY in Degrees", rotateY*180/pi);
    }

    return {
        rotateX: rotateX,
        rotateY: rotateY
    };
}


function getTransformTranslate(element) {
    var values = getTranslationMatrix(element);

    var translateX,
        translateY;

    translateX = parseFloat(values[0]);
    translateY = parseFloat(values[1]);

    return {
        translateX: translateX,
        translateY: translateY
    };
}


function getTransformScale(element) {
    var scale = getScaleMatrix(element);
    // console.log(scale);

    return {
        scale: scale
    }
}


function getMatrixValues(element) {
    var transformValues = window.getComputedStyle(element, null).getPropertyValue("transform");
    var matrixValues = transformValues.split('(')[1].split(')')[0].split(',');

    for (var i = 0; i < matrixValues.length; i++) {
        matrixValues[i] = parseFloat(matrixValues[i]);
    }

    return matrixValues;
}


function getRotationMatrix(element) {
    var valuesMatrix = getMatrixValues(element);
    var scale = getScaleMatrix(element);

    if (valuesMatrix.length == 16) {
        for (var i=0; i < 11; i++) {
            valuesMatrix[i] /= scale;
        }
    } else if(valuesMatrix.length == 6) {
        for (var i=0; i < 4; i++) {
            valuesMatrix[i] /= scale;
        }
    }

    var rotationMatrix = valuesMatrix;

    return rotationMatrix;
}


function getTranslationMatrix(element) {
    var valuesMatrix = getMatrixValues(element);

    if (valuesMatrix.length == 16) {
        var translationMatrix = getMatrixValues(element).slice(12, 15);

    } else if (valuesMatrix.length == 6) {
        var translationMatrix = getMatrixValues(element).slice(4);
    }

    return translationMatrix;
}


function getScaleMatrix(element) {
    var valuesMatrix = getMatrixValues(element);
    var temp = 0;

    if (valuesMatrix.length == 16) {
        var scaleMatrix = getMatrixValues(element).slice(0, 4);
        var scale = 0;

        for (var i = 0; i < scaleMatrix.length; i++) {
            scale += parseFloat(scaleMatrix[i]) * parseFloat(scaleMatrix[i]);
        }

        scale = parseFloat(Math.sqrt(scale).toPrecision(4));
    } else if (valuesMatrix.length == 6) {
        temp = valuesMatrix[0]*valuesMatrix[0] + valuesMatrix[1]*valuesMatrix[1];
        var scale = parseFloat(Math.sqrt(temp).toPrecision(4));
    }

    return scale;
}


// console.log("Direct Matrix", getMatrixValues(pluridContainer[0].children[0]));
// console.log("Rotation Matrix", getRotationMatrix(pluridContainer[0].children[0]));
// console.log("Translation Matrix", getTranslationMatrix(pluridContainer[0].children[0]));
// console.log("Scale Matrix", getScaleMatrix(pluridContainer[0].children[0]));


function setTransform(element, rotateXMatrix, rotateYMatrix, translateMatrix, scaleMatrix, yPos = 0) {
    var transformMatrix = __WEBPACK_IMPORTED_MODULE_0__matrix_js__["b" /* multiplyArrayOfMatrices */]([
        translateMatrix,
        rotateXMatrix,
        rotateYMatrix,
        scaleMatrix
    ]);
    // console.log("Transform Matrix", transformMatrix);

    // Set the transform
    var transformOriginRule = "50% " + yPos + "px";
    element.style.transformOrigin = transformOriginRule;

    // Returns a a matrix3d() CSS string
    var matrix3dRule = __WEBPACK_IMPORTED_MODULE_0__matrix_js__["a" /* matrixArrayToCssMatrix */](transformMatrix);
    // console.log("CSS Rule", matrix3dRule);
    element.style.transform = matrix3dRule;
}


function setCursor(mode) {
    switch(mode) {
            case "rotate":
            document.body.style.cursor = "ew-resize";
            break;
        case "translate":
            document.body.style.cursor = "move";
            break;
        case "scale":
            document.body.style.cursor = "nesw-resize";
            break;
        default:
            document.body.style.cursor = "default";
    }
}


function getyPos(event, plurid) {
    var yCenter = window.innerHeight / 2;
    var translateY = getTransformTranslate(plurid).translateY;

    var yPos = translateY * -1 + yCenter;

    return yPos;
}


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__commands_js__ = __webpack_require__(0);



var pluridContent = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridContent works");
        }
    }
});

document.registerElement( "plurid-content", {
    prototype: pluridContent
});


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__commands_js__ = __webpack_require__(0);



////////
// ROOTS
var pluridRoots = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridRoots works");
            this.id=`plurid-roots`;
        }
    }
});

document.registerElement( "plurid-roots", {
    prototype: pluridRoots
});



var rootId = 1;

var pluridRoot = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridRoot works");
            this.id=`plurid-root-${rootId}`;
            // console.log(this.id);
            rootId++;
        }
    }
});

document.registerElement( "plurid-root", {
    prototype: pluridRoot
});

/***/ }),
/* 12 */
/***/ (function(module, exports) {

var sheetId = 1;

var pluridSheet = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheet works");
            this.id=`plurid-sheet-${sheetId}`;
            // console.log(this.id);
            sheetId++;
        }
    }
});

document.registerElement( "plurid-sheet", {
    prototype: pluridSheet
});



var pluridSheetDouble = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetDouble works");
        }
    }
});

document.registerElement( "plurid-sheet-double", {
    prototype: pluridSheetDouble
});



var pluridSheetDoubleFront = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetDoubleFront works");
        }
    }
});

document.registerElement( "plurid-sheet-double-front", {
    prototype: pluridSheetDoubleFront
});



var pluridSheetDoubleBack = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetDoubleBack works");
        }
    }
});

document.registerElement( "plurid-sheet-double-back", {
    prototype: pluridSheetDoubleBack
});



var pluridSheetControls = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSheetControls works");
        }
    }
});

document.registerElement( "plurid-controls", {
    prototype: pluridSheetControls
});


/***/ }),
/* 13 */
/***/ (function(module, exports) {

// PLURID SOLID
var pluridSolid = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolid works");
        }
    }
});

document.registerElement( "plurid-solid", {
    prototype: pluridSolid
});



var pluridSolidFront = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidFront works");
        }
    }
});

document.registerElement( "plurid-solid-front", {
    prototype: pluridSolidFront
});



var pluridSolidBack = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidBack works");
        }
    }
});

document.registerElement( "plurid-solid-back", {
    prototype: pluridSolidBack
});



var pluridSolidTop = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidTop works");
        }
    }
});

document.registerElement( "plurid-solid-top", {
    prototype: pluridSolidTop
});



var pluridSolidBottom = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidBottom works");
        }
    }
});

document.registerElement( "plurid-solid-bottom", {
    prototype: pluridSolidBottom
});



var pluridSolidRight = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidRight works");
        }
    }
});

document.registerElement( "plurid-solid-right", {
    prototype: pluridSolidRight
});



var pluridSolidLeft = Object.create(HTMLElement.prototype, {
    createdCallback: {
        value: function() {
            console.log("pluridSolidLeft works");
        }
    }
});

document.registerElement( "plurid-solid-left", {
    prototype: pluridSolidLeft
});


/***/ }),
/* 14 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 15 */,
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = stylePlurid;
let styleString = "0px 0px 6px 3px rgba(194,194,194,0.7)";

function stylePlurid(plurid, stack) {
    function style(stackItem) {
        if (stackItem.id === plurid.id) {
            stackItem.style.boxShadow = styleString;
        }

        if (stackItem.id === "plurid-roots" || stackItem.id != plurid.id) {
            stackItem.style.boxShadow = "";
        }
    }

    stack.forEach(style);
}

/***/ })
/******/ ]);