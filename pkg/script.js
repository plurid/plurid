/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app.ts":
/*!****************!*\
  !*** ./app.ts ***!
  \****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ./src/ts/app.ts */ \"./src/ts/app.ts\");\n__webpack_require__(/*! ./src/sass/app.scss */ \"./src/sass/app.scss\");\n\n\n//# sourceURL=webpack:///./app.ts?");

/***/ }),

/***/ "./src/sass/app.scss":
/*!***************************!*\
  !*** ./src/sass/app.scss ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/sass/app.scss?");

/***/ }),

/***/ "./src/ts/app.ts":
/*!***********************!*\
  !*** ./src/ts/app.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ./source/main/state */ \"./src/ts/source/main/state.ts\");\n__webpack_require__(/*! ./source/main/themes */ \"./src/ts/source/main/themes.ts\");\n// Elements\n__webpack_require__(/*! ./source/main/branch */ \"./src/ts/source/main/branch.ts\");\n__webpack_require__(/*! ./source/main/bridge */ \"./src/ts/source/main/bridge.ts\");\n__webpack_require__(/*! ./source/main/container */ \"./src/ts/source/main/container.ts\");\n__webpack_require__(/*! ./source/main/content */ \"./src/ts/source/main/content.ts\");\n__webpack_require__(/*! ./source/main/link */ \"./src/ts/source/main/link.ts\");\n__webpack_require__(/*! ./source/main/options */ \"./src/ts/source/main/options.ts\");\n__webpack_require__(/*! ./source/main/page */ \"./src/ts/source/main/page.ts\");\n__webpack_require__(/*! ./source/main/root */ \"./src/ts/source/main/root.ts\");\n__webpack_require__(/*! ./source/main/scion */ \"./src/ts/source/main/scion.ts\");\n__webpack_require__(/*! ./source/main/shadow */ \"./src/ts/source/main/shadow.ts\");\n__webpack_require__(/*! ./source/main/sheet */ \"./src/ts/source/main/sheet.ts\");\n__webpack_require__(/*! ./source/main/solid */ \"./src/ts/source/main/solid.ts\");\n__webpack_require__(/*! ./source/main/space */ \"./src/ts/source/main/space.ts\");\n// Logic\n__webpack_require__(/*! ./source/main/logic */ \"./src/ts/source/main/logic.ts\");\n__webpack_require__(/*! ./source/dev */ \"./src/ts/source/dev.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/app.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/directions.ts":
/*!************************************************!*\
  !*** ./src/ts/source/core/logic/directions.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet direction = \"\";\nconst threshold = 0;\nconst absThreshold = 10;\nfunction getDirection(event) {\n    const wheelDeltaX = event.wheelDeltaX;\n    const wheelDeltaY = event.wheelDeltaY;\n    // console.log(wheelDeltaX);\n    // console.log(wheelDeltaY);\n    const absWheelDeltaX = Math.abs(wheelDeltaX);\n    const absWheelDeltaY = Math.abs(wheelDeltaY);\n    if (wheelDeltaX > threshold\n        && absWheelDeltaY < absThreshold\n        && absWheelDeltaX > absWheelDeltaY) {\n        direction = \"left\";\n    }\n    if (wheelDeltaX < threshold\n        && absWheelDeltaY < absThreshold\n        && absWheelDeltaX > absWheelDeltaY) {\n        direction = \"right\";\n    }\n    if (wheelDeltaY > threshold\n        && absWheelDeltaX < absThreshold\n        && absWheelDeltaY > absWheelDeltaX) {\n        direction = \"up\";\n    }\n    if (wheelDeltaY < threshold\n        && absWheelDeltaX < absThreshold\n        && absWheelDeltaY > absWheelDeltaX) {\n        direction = \"down\";\n    }\n    // if (positionX < threshold && positionY < threshold) {\n    //     direction = \"upleft\";\n    // }\n    // if (positionX < threshold && positionY > threshold ) {\n    //     direction = \"downleft\";\n    // }\n    // if (positionX > threshold && positionY > threshold ) {\n    //     direction = \"downright\";\n    // }\n    // if (positionX > threshold && positionY < threshold ) {\n    //     direction = \"upright\";\n    // }\n    // console.log('----- direction: ', direction);\n    // console.log('movementX: ', event.movementX);\n    // console.log('movementY: ', event.movementY);\n    return direction;\n}\nexports.getDirection = getDirection;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/directions.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/get-plurid.ts":
/*!************************************************!*\
  !*** ./src/ts/source/core/logic/get-plurid.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getPlurid(event = null) {\n    const root = document.getElementById(window.pluridScene.meta.activePlurid);\n    const sheet = document.getElementById(window.pluridScene.meta.activeSheet);\n    return {\n        root,\n        sheet,\n    };\n}\nexports.getPlurid = getPlurid;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/get-plurid.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/gyroscope.ts":
/*!***********************************************!*\
  !*** ./src/ts/source/core/logic/gyroscope.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst matrix_1 = __webpack_require__(/*! ./matrix */ \"./src/ts/source/core/logic/matrix.ts\");\nconst transforms_core_1 = __webpack_require__(/*! ./transforms-core */ \"./src/ts/source/core/logic/transforms-core.ts\");\n// import { computeQuaternionFromEulers,\n//          quaternionFromAxisAngle } from './quaternion';\n// Z - X - Y\n// processGyro(0, 0, 30);\n// var gyro = quaternionFromAxisAngle(0, 0, 0, 0);\n// get orientation info\nif (window.DeviceOrientationEvent) {\n    window.addEventListener(\"deviceorientation\", (event) => {\n        const plurid = document.getElementById(window.pluridScene.meta.activePlurid);\n        processGyro(event.alpha, event.beta, event.gamma, plurid);\n    }, true);\n}\nfunction processGyro(alpha, beta, gamma, plurid) {\n    document.getElementById(\"alpha\").innerHTML = alpha.toFixed(5);\n    document.getElementById(\"beta\").innerHTML = beta.toFixed(5);\n    document.getElementById(\"gamma\").innerHTML = gamma.toFixed(5);\n    // X\n    beta = -beta;\n    // beta = 0;\n    // Y\n    gamma = -gamma;\n    // gamma = 0;\n    // Z\n    alpha = 0;\n    const valRotationMatrix = matrix_1.rotateMatrix(beta, gamma, alpha);\n    const translateX = transforms_core_1.getTransformTranslate(plurid).translateX;\n    const translateY = transforms_core_1.getTransformTranslate(plurid).translateY;\n    const translateZ = 0;\n    const scale = transforms_core_1.getTransformScale(plurid).scale;\n    const valTranslationMatrix = matrix_1.translateMatrix(translateX, translateY, translateZ);\n    const valScaleMatrix = matrix_1.scaleMatrix(scale);\n    const yPos = transforms_core_1.getyPos(event, plurid);\n    transforms_core_1.setTransform(plurid, valRotationMatrix, valTranslationMatrix, valScaleMatrix, yPos);\n    // gyro = computeQuaternionFromEulers(alpha, beta, gamma);\n    // document.getElementById(\"x\").innerHTML=gyro.x.toFixed(5);\n    // document.getElementById(\"y\").innerHTML=gyro.y.toFixed(5);\n    // document.getElementById(\"z\").innerHTML=gyro.z.toFixed(5);\n    // document.getElementById(\"w\").innerHTML=gyro.w.toFixed(5);\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/gyroscope.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/matrix.ts":
/*!********************************************!*\
  !*** ./src/ts/source/core/logic/matrix.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst quaternion_1 = __webpack_require__(/*! ./quaternion */ \"./src/ts/source/core/logic/quaternion.ts\");\nfunction rotateMatrix(xAngle, yAngle, zAngle = 0) {\n    // document.getElementById(\"alpha\").innerHTML= zAngle.toFixed(5);\n    // document.getElementById(\"beta\").innerHTML= xAngle.toFixed(5);\n    // document.getElementById(\"gamma\").innerHTML = yAngle.toFixed(5);\n    const xQuaternion = quaternion_1.computeQuaternionFromEulers(0, xAngle, 0);\n    const yQuaternion = quaternion_1.computeQuaternionFromEulers(0, 0, yAngle);\n    const zQuaternion = quaternion_1.computeQuaternionFromEulers(zAngle, 0, 0);\n    const quartenionMultiplication = quaternion_1.quaternionMultiply([yQuaternion, xQuaternion, zQuaternion]);\n    // document.getElementById(\"x\").innerHTML=quartenionMultiplication.x.toFixed(5);\n    // document.getElementById(\"y\").innerHTML=quartenionMultiplication.y.toFixed(5);\n    // document.getElementById(\"z\").innerHTML=quartenionMultiplication.z.toFixed(5);\n    // document.getElementById(\"w\").innerHTML=quartenionMultiplication.w.toFixed(5);\n    const rotationMatrix = quaternion_1.makeRotationMatrixFromQuaternion(quartenionMultiplication);\n    return rotationMatrix;\n}\nexports.rotateMatrix = rotateMatrix;\n// Matrix Operations for Single Value (De-)Composition\n// Sourced from https://github.com/gregtatum/mdn-webgl/blob/master/library/matrices.js\n// export function rotateXMatrix(a) {\n//     var cos = Math.cos;\n//     var sin = Math.sin;\n//     return [\n//          1,       0,        0,     0,\n//          0,  cos(a),  -sin(a),     0,\n//          0,  sin(a),   cos(a),     0,\n//          0,       0,        0,     1\n//     ];\n// }\n// export function rotateYMatrix(a) {\n//     var cos = Math.cos;\n//     var sin = Math.sin;\n//     return [\n//          cos(a),   0, sin(a),   0,\n//               0,   1,      0,   0,\n//         -sin(a),   0, cos(a),   0,\n//               0,   0,      0,   1\n//     ];\n// }\n// export function rotateZMatrix(a) {\n//     var cos = Math.cos;\n//     var sin = Math.sin;\n//     return [\n//         cos(a), -sin(a),    0,    0,\n//         sin(a),  cos(a),    0,    0,\n//              0,       0,    1,    0,\n//              0,       0,    0,    1\n//     ];\n// }\nfunction translateMatrix(x, y, z) {\n    return [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        x, y, z, 1,\n    ];\n}\nexports.translateMatrix = translateMatrix;\nfunction scaleMatrix(s) {\n    return [\n        s, 0, 0, 0,\n        0, s, 0, 0,\n        0, 0, s, 0,\n        0, 0, 0, 1,\n    ];\n}\nexports.scaleMatrix = scaleMatrix;\nfunction multiplyMatrices(a, b) {\n    // https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js#L306-L337\n    const result = [];\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    // Cache only the current line of the second matrix\n    let b0 = b[0];\n    let b1 = b[1];\n    let b2 = b[2];\n    let b3 = b[3];\n    result[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    result[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    result[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    result[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    result[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    result[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    result[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    result[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    result[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    result[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    result[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    result[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    result[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    result[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    result[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    result[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return result;\n}\nexports.multiplyMatrices = multiplyMatrices;\nfunction multiplyArrayOfMatrices(matrices) {\n    let inputMatrix = matrices[0];\n    for (let i = 1; i < matrices.length; i++) {\n        inputMatrix = multiplyMatrices(inputMatrix, matrices[i]);\n    }\n    return inputMatrix;\n}\nexports.multiplyArrayOfMatrices = multiplyArrayOfMatrices;\n// Create the matrix3d style property from a matrix array\nfunction matrixArrayToCssMatrix(array) {\n    return 'matrix3d(' + array.join(',') + ')';\n}\nexports.matrixArrayToCssMatrix = matrixArrayToCssMatrix;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/matrix.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/quaternion.ts":
/*!************************************************!*\
  !*** ./src/ts/source/core/logic/quaternion.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// // testing quaternions\n// let quaternionX0_Y45_Z0 = {\n//     x: 0,\n//     y: 0.38268,\n//     z: 0,\n//     w: 0.92388\n// }\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// let quaternionX45_Y0_Z0 = {\n//     x: 0.38268,\n//     y: 0,\n//     z: 0,\n//     w: 0.92388\n// }\n// let result = quaternionMultiply([ quaternionX0_Y45_Z0, quaternionX45_Y0_Z0]);\n// let a = makeRotationMatrixFromQuaternion(result);\n// let b = '';\n// for (let c of a) {\n//     b = b + c + ', '\n// }\n// console.log(b);\n// let y_45_quat = computeQuaternionFromEulers(0, 0, 45);\n// let rot_mat_y_45 = makeRotationMatrixFromQuaternion(y_45_quat);\n// console.log(rot_mat_y_45);\n// let rot_mat_y_45_css = '';\n// for (let el of rot_mat_y_45) {\n//     rot_mat_y_45_css = rot_mat_y_45_css + el + ', '\n// }\n// console.log(rot_mat_y_45_css);\n// let x_45_quat = computeQuaternionFromEulers(0, 45, 0);\n// let rot_mat_x_45 = makeRotationMatrixFromQuaternion(x_45_quat);\n// console.log(rot_mat_x_45);\n// let rot_mat_x_45_css = '';\n// for (let el of rot_mat_x_45) {\n//     rot_mat_x_45_css = rot_mat_x_45_css + el + ', '\n// }\n// console.log(rot_mat_x_45_css);\n// let quat_mul = quaternionMultiply([y_45_quat, x_45_quat]);\n// console.log(quat_mul);\n// let rot_mat_x_y_45 = makeRotationMatrixFromQuaternion(quat_mul);\n// console.log(rot_mat_x_y_45);\n// let rot_mat_x_y_45_css = '';\n// for (let el of rot_mat_x_y_45) {\n//     rot_mat_x_y_45_css = rot_mat_x_y_45_css + el + ', '\n// }\n// console.log(rot_mat_x_y_45_css);\nfunction makeQuaternion(x, y, z, w) {\n    return {\n        x,\n        y,\n        z,\n        w,\n    };\n}\n// alpha around Z axis, beta around X axis, and gamma around Y axis\nfunction computeQuaternionFromEulers(alpha, beta, gamma) {\n    let x = degToRad(beta); // beta value\n    let y = degToRad(gamma); // gamma value\n    let z = degToRad(alpha); // alpha value\n    const cX = Math.cos(x / 2);\n    const cY = Math.cos(y / 2);\n    const cZ = Math.cos(z / 2);\n    const sX = Math.sin(x / 2);\n    const sY = Math.sin(y / 2);\n    const sZ = Math.sin(z / 2);\n    const w = cX * cY * cZ - sX * sY * sZ;\n    x = sX * cY * cZ - cX * sY * sZ;\n    y = cX * sY * cZ + sX * cY * sZ;\n    z = cX * cY * sZ + sX * sY * cZ;\n    return makeQuaternion(x, y, z, w);\n}\nexports.computeQuaternionFromEulers = computeQuaternionFromEulers;\nfunction quaternionFromAxisAngle(x, y, z, angle) {\n    const q = {};\n    const halfAngle = angle / 2;\n    q.x = x * Math.sin(halfAngle);\n    q.y = y * Math.sin(halfAngle);\n    q.z = z * Math.sin(halfAngle);\n    q.w = Math.cos(halfAngle);\n    return q;\n}\nexports.quaternionFromAxisAngle = quaternionFromAxisAngle;\nfunction inverseQuaternion(quaternion) {\n    return makeQuaternion(quaternion.x, quaternion.y, quaternion.z, -quaternion.w);\n}\nexports.inverseQuaternion = inverseQuaternion;\nfunction conjugateQuaternion(quaternion) {\n    return makeQuaternion(-quaternion.x, -quaternion.y, -quaternion.z, quaternion.w);\n}\nexports.conjugateQuaternion = conjugateQuaternion;\nfunction quaternionMultiply(quaternionArray) {\n    const temporaryQuaternion = quaternionArray[0];\n    const copyQuaternion = {\n        x: temporaryQuaternion.x,\n        y: temporaryQuaternion.y,\n        z: temporaryQuaternion.z,\n        w: temporaryQuaternion.w,\n    };\n    for (let i = 1; i < quaternionArray.length; i++) {\n        const secondaryTemporaryQuaternion = quaternionArray[i];\n        const nextQuaternion = {\n            x: secondaryTemporaryQuaternion.x,\n            y: secondaryTemporaryQuaternion.y,\n            z: secondaryTemporaryQuaternion.z,\n            w: secondaryTemporaryQuaternion.w,\n        };\n        const w = copyQuaternion.w * nextQuaternion.w -\n            copyQuaternion.x * nextQuaternion.x -\n            copyQuaternion.y * nextQuaternion.y -\n            copyQuaternion.z * nextQuaternion.z;\n        const x = copyQuaternion.x * nextQuaternion.w +\n            copyQuaternion.w * nextQuaternion.x +\n            copyQuaternion.y * nextQuaternion.z -\n            copyQuaternion.z * nextQuaternion.y;\n        const y = copyQuaternion.y * nextQuaternion.w +\n            copyQuaternion.w * nextQuaternion.y +\n            copyQuaternion.z * nextQuaternion.x -\n            copyQuaternion.x * nextQuaternion.z;\n        const z = copyQuaternion.z * nextQuaternion.w +\n            copyQuaternion.w * nextQuaternion.z +\n            copyQuaternion.x * nextQuaternion.y -\n            copyQuaternion.y * nextQuaternion.x;\n        copyQuaternion.x = x;\n        copyQuaternion.y = y;\n        copyQuaternion.z = z;\n        copyQuaternion.w = w;\n    }\n    return copyQuaternion;\n}\nexports.quaternionMultiply = quaternionMultiply;\nfunction rotatePointViaQuaternion(pointRotate, quaternion) {\n    const temporaryQuaternion = {\n        x: pointRotate[0],\n        y: pointRotate[1],\n        z: pointRotate[2],\n        w: 0,\n    };\n    const rotatedPoint = quaternionMultiply([quaternion, temporaryQuaternion, conjugateQuaternion(quaternion)]);\n    return {\n        x: rotatedPoint.x,\n        y: rotatedPoint.y,\n        z: rotatedPoint.z,\n        w: rotatedPoint.w,\n    };\n}\nexports.rotatePointViaQuaternion = rotatePointViaQuaternion;\nfunction makeRotationMatrixFromQuaternion(quaternion) {\n    const num = quaternion.x * 2;\n    const num2 = quaternion.y * 2;\n    const num3 = quaternion.z * 2;\n    const num4 = quaternion.x * num;\n    const num5 = quaternion.y * num2;\n    const num6 = quaternion.z * num3;\n    const num7 = quaternion.x * num2;\n    const num8 = quaternion.x * num3;\n    const num9 = quaternion.y * num3;\n    const num10 = quaternion.w * num;\n    const num11 = quaternion.w * num2;\n    const num12 = quaternion.w * num3;\n    return [\n        1 - (num5 + num6), num7 - num12, num8 + num11, 0,\n        num7 + num12, 1 - (num4 + num6), num9 - num10, 0,\n        num8 - num11, num9 + num10, 1 - (num4 + num5), 0,\n        0, 0, 0, 1,\n    ];\n}\nexports.makeRotationMatrixFromQuaternion = makeRotationMatrixFromQuaternion;\nfunction degToRad(deg) {\n    return deg * Math.PI / 180;\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/quaternion.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/reflections.ts":
/*!*************************************************!*\
  !*** ./src/ts/source/core/logic/reflections.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction setReflections(pluridSheet, sheetHeight, ground, top = 0) {\n    const reflectGround = ground + 1 - sheetHeight - top;\n    // console.log('ground', ground);\n    // console.log('sheetHeight', sheetHeight);\n    // console.log('top', top);\n    // const reflectGround = ground - sheetHeight + 1;\n    pluridSheet.style.webkitBoxReflect = `below ${reflectGround}px linear-gradient(to top, rgba(0,0,0,0.2) 0%, rgba(30,30,30,0.1) 20%, rgba(60,60,60,0) 40%)`;\n}\nexports.setReflections = setReflections;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/reflections.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/shadows.ts":
/*!*********************************************!*\
  !*** ./src/ts/source/core/logic/shadows.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction setShadows(pluridRoot, pluridSheet, sheetHeight, ground) {\n    const pluridShadow = document.createElement('plurid-shadow');\n    pluridRoot.appendChild(pluridShadow);\n    pluridShadow.sheet = pluridSheet.id;\n    // console.log('sheetHeight', sheetHeight);\n    const computedShadowHeight = sheetHeight * 0.3 < 500 ? sheetHeight * 0.3 : 500;\n    // let computedShadowHeight = 500;\n    // console.log('computedShadowHeight', computedShadowHeight);\n    pluridShadow.style.height = computedShadowHeight + \"px\";\n    // console.log('ground', ground);\n    const groundPosition = ground - computedShadowHeight;\n    pluridShadow.style.transform = `translateX(0px) translateY(${groundPosition}px) translateZ(0px) rotateX(90deg) rotateY(0deg) rotateZ(0deg) scale(1) skew(-10deg)`;\n}\nexports.setShadows = setShadows;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/shadows.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/shortcuts.ts":
/*!***********************************************!*\
  !*** ./src/ts/source/core/logic/shortcuts.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// import { closePlurid } from \"../../elements/controls/controls-core\";\nconst get_plurid_1 = __webpack_require__(/*! ./get-plurid */ \"./src/ts/source/core/logic/get-plurid.ts\");\nconst transforms_1 = __webpack_require__(/*! ./transforms */ \"./src/ts/source/core/logic/transforms.ts\");\nfunction initShortcuts() {\n    document.addEventListener(\"keydown\", (event) => {\n        shortcuts(event);\n    });\n}\nexports.initShortcuts = initShortcuts;\nfunction shortcuts(event) {\n    // const activePluridID = getPlurid.sheet\n    // const activePluridElement = document.getElementById(activePluridID);\n    const activePluridElement = get_plurid_1.getPlurid().sheet;\n    const activePlurid = document.getElementById(window.pluridScene.meta.activePlurid);\n    const ultimateKey = event.which;\n    // ROTATE\n    // Shift + arrow-left\n    if (event.shiftKey && ultimateKey === 37) {\n        // console.log(\"Rotate Left\");\n        event.preventDefault();\n        const direction = 'left';\n        transforms_1.rotatePlurid(event, activePlurid, direction);\n    }\n    // Shift + arrow-right\n    if (event.shiftKey && ultimateKey === 39) {\n        // console.log(\"Rotate Right\");\n        event.preventDefault();\n        const direction = 'right';\n        transforms_1.rotatePlurid(event, activePlurid, direction);\n    }\n    // Shift + arrow-up\n    if (event.shiftKey && ultimateKey === 38) {\n        // console.log(\"Rotate Up\");\n        event.preventDefault();\n        const direction = 'up';\n        transforms_1.rotatePlurid(event, activePlurid, direction);\n    }\n    // Shift + arrow-down\n    if (event.shiftKey && ultimateKey === 40) {\n        // console.log(\"Rotate Down\");\n        event.preventDefault();\n        const direction = 'down';\n        transforms_1.rotatePlurid(event, activePlurid, direction);\n    }\n    // TRANSLATE\n    // Alt/Opt + arrow-left\n    if (event.altKey && ultimateKey === 37) {\n        // console.log(\"Translate Left\");\n        event.preventDefault();\n        const direction = 'left';\n        transforms_1.translatePlurid(event, activePlurid, direction);\n    }\n    // Alt/Opt + arrow-right\n    if (event.altKey && ultimateKey === 39) {\n        // console.log(\"Translate Right\");\n        event.preventDefault();\n        const direction = 'right';\n        transforms_1.translatePlurid(event, activePlurid, direction);\n    }\n    // Alt/Opt + arrow-up\n    if (event.altKey && ultimateKey === 38) {\n        // console.log(\"Translate Up\");\n        event.preventDefault();\n        const direction = 'up';\n        transforms_1.translatePlurid(event, activePlurid, direction);\n    }\n    // Alt/Opt + arrow-down\n    if (event.altKey && ultimateKey === 40) {\n        // console.log(\"Translate Down\");\n        event.preventDefault();\n        const direction = 'down';\n        transforms_1.translatePlurid(event, activePlurid, direction);\n    }\n    // SCALE\n    // Cltr/Cmd + arrow-up\n    if ((event.metaKey || event.ctrlKey) && ultimateKey === 38) {\n        // console.log(\"Scale Up\");\n        event.preventDefault();\n        const direction = 'up';\n        transforms_1.scalePlurid(event, activePlurid, direction);\n    }\n    // Cltr/Cmd + arrow-down\n    if ((event.metaKey || event.ctrlKey) && ultimateKey === 40) {\n        // console.log(\"Scale Down\");\n        event.preventDefault();\n        const direction = 'down';\n        transforms_1.scalePlurid(event, activePlurid, direction);\n    }\n    // VIEW\n    // alt/opt + 1\n    if (event.altKey && ultimateKey === 49) {\n        console.log(\"transform to normal view front plane\");\n    }\n    // alt/opt + 2\n    if (event.altKey && ultimateKey === 50) {\n        console.log(\"transform to normal view right plane\");\n    }\n    // alt/opt + 3\n    if (event.altKey && ultimateKey === 51) {\n        console.log(\"transform to normal view back plane\");\n    }\n    // alt/opt + 4\n    if (event.altKey && ultimateKey === 52) {\n        console.log(\"transform to normal view left plane\");\n    }\n    // THE REST OF THE SHORTCUTS\n    // alt/opt + p\n    if (event.altKey && ultimateKey === 80) {\n        console.log(\"bring the parent of the current plurid to normal view\");\n    }\n    // alt/opt + m\n    if (event.altKey && ultimateKey === 77) {\n        console.log(\"minimize current plurid\");\n    }\n    // alt/opt + h\n    if (event.altKey && ultimateKey === 72) {\n        console.log(\"reduce height of current plurid\");\n    }\n    // alt/opt + r\n    if (event.altKey && ultimateKey === 82) {\n        console.log(\"reload current plurid\");\n    }\n    // alt/opt + e\n    if (event.altKey && ultimateKey === 69 && !event.shiftKey) {\n        console.log(\"extend positive the <plurid-bridge> of the current plurid\");\n    }\n    // shift + e\n    if (event.shiftKey && ultimateKey === 69 && !event.altKey) {\n        console.log(\"extend negative the <plurid-bridge> of the current plurid\");\n    }\n    // alt/opt + x\n    if (event.altKey && ultimateKey === 88) {\n        if (activePluridElement.parentElement.nodeName === \"PLURID-ROOT\") {\n            activePluridElement.parentElement.style.display = \"none\";\n        }\n        if (activePluridElement.parentElement.nodeName === \"PLURID-SCION\") {\n            activePluridElement.parentElement.parentElement.style.display = \"none\";\n        }\n        // console.log(activePluridElement.parentElement.parentElement.nodeName);\n        // console.log(`close current plurid with ID: ${activePluridID}`);\n    }\n    // alt/opt + i\n    if (event.altKey && ultimateKey === 73) {\n        console.log(\"isolate current plurid\");\n    }\n    // alt/opt + a\n    if (event.altKey && ultimateKey === 65) {\n        console.log(\"back to the previous web page within the same plurid\");\n    }\n    // alt/opt + z\n    if (event.altKey && ultimateKey === 90) {\n        console.log(\"forward to the next web page within the same plurid\");\n    }\n    // alt/opt + s\n    if (event.altKey && ultimateKey === 83) {\n        console.log(\"activate the plurid URL input\");\n    }\n    // alt/opt + t\n    if (event.altKey && ultimateKey === 84) {\n        console.log(\"extract the current plurid to a separate <plurid-root>\");\n    }\n    // alt/opt + n\n    if (event.altKey && ultimateKey === 78) {\n        console.log(\"open current plurid in new tab\");\n    }\n    // alt/opt + f\n    if (event.altKey && ultimateKey === 70) {\n        console.log(\"flip the <plurid-branch> to the other side of the <plurid-insertion>\");\n    }\n    // alt/opt + v\n    if (event.altKey && ultimateKey === 86) {\n        console.log(\"flip the content to the other side\");\n    }\n    // console.log(ultimateKey);\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/shortcuts.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/transforms-core.ts":
/*!*****************************************************!*\
  !*** ./src/ts/source/core/logic/transforms-core.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst matrix = __importStar(__webpack_require__(/*! ./matrix */ \"./src/ts/source/core/logic/matrix.ts\"));\nfunction getTransformRotate(element) {\n    const values = getRotationMatrix(element);\n    // console.log(\"values Matrix\", values);\n    let rotateX;\n    let rotateY;\n    const pi = Math.PI;\n    if (values.length === 6) {\n        const cosa = parseFloat(values[0]);\n        const sina = parseFloat(values[1]);\n        // console.log(\"cos A\", cosa);\n        // console.log(\"sin A\", sina);\n        if (cosa === 1 && sina === 0) {\n            rotateX = Math.asin(sina);\n            rotateY = Math.acos(cosa);\n        }\n    }\n    if (values.length === 16) {\n        const cosaX1 = parseFloat(values[5]);\n        const sinaX2 = parseFloat(values[6]);\n        const sinaX3 = parseFloat(values[9]);\n        const cosaX4 = parseFloat(values[10]);\n        // console.log(\"----------------------\")\n        // console.log(\"cos A X 1\", cosaX1);\n        // console.log(\"cos A X 1\", cosaX1 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arccos A X 1\", Math.acos(cosaX1)*180/pi);\n        // console.log(\"sin A X 2\", sinaX2);\n        // console.log(\"sin A X 2\", sinaX2 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arcsin A X 2\", Math.asin(sinaX2)*180/pi);\n        // console.log(\"sin A X 3\", sinaX3);\n        // console.log(\"sin A X 3\", sinaX3 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arcsin A X 3\", Math.asin(sinaX3)*180/pi);\n        // console.log(\"cos A X 4\", cosaX4);\n        // console.log(\"cos A X 4\", cosaX4 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arccos A X 4\", Math.acos(cosaX4)*180/pi);\n        // rotateX = 0;\n        // 0-180\n        if (sinaX3 <= 0) {\n            rotateX = Math.acos(cosaX1);\n            // console.log(\"ONE X\");\n            // console.log(\"++++++\");\n        }\n        // // 181-360\n        if (sinaX3 > 0) {\n            rotateX = 2 * pi - Math.acos(cosaX1);\n            // console.log(\"TWO X\");\n            // console.log(\"++++++\");\n        }\n        // console.log(\"rotateX in Radians\", rotateX);\n        // console.log(\"rotateX in Degrees\", rotateX*180/pi);\n        // console.log(\"-------------\")\n        // var cosaY = parseFloat(values[0]);\n        // var sinaY = parseFloat(values[2]);\n        // console.log(\"cos A Y\", cosaY);\n        // console.log(\"sin A Y\", sinaY);\n        const cosaY1 = parseFloat(values[0]);\n        const sinaY2 = parseFloat(values[2]);\n        const sinaY3 = parseFloat(values[8]);\n        const cosaY4 = parseFloat(values[10]);\n        // console.log(\"cos A Y 1\", cosaY1);\n        // console.log(\"cos A Y 1\", cosaY1 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arccos A Y 1\", Math.acos(cosaY1));\n        // console.log(\"arccos A Y 1 in degs\", Math.acos(cosaY1)*180/pi);\n        // console.log(\"sin A Y 2\", sinaY2);\n        // console.log(\"sin A Y 2\", sinaY2 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arcsin A Y 2\", Math.asin(sinaY2)*180/pi);\n        // console.log(\"sin A Y 3\", sinaY3);\n        // console.log(\"sin A Y 3\", sinaY3 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arcsin A Y 3\", Math.asin(sinaY3)*180/pi);\n        // console.log(\"cos A Y 4\", cosaY4);\n        // console.log(\"cos A Y 4\", cosaY4 > 0 ? \"POSITIVE\" : \"NEGATIVE\");\n        // console.log(\"arccos A Y 4\", Math.acos(cosaY4)*180/pi);\n        // rotateY = 0\n        if (sinaY2 <= 0) {\n            rotateY = Math.acos(cosaY1);\n            // console.log(\"ONE Y\");\n            // console.log(\"++++++\");\n        }\n        if (sinaY2 > 0) {\n            rotateY = 2 * pi - Math.acos(cosaY1);\n            // console.log(\"TWO Y\");\n            // console.log(\"++++++\");\n        }\n    }\n    return {\n        rotateX,\n        rotateY,\n    };\n}\nexports.getTransformRotate = getTransformRotate;\nfunction getTransformTranslate(element) {\n    const values = getTranslationMatrix(element);\n    let translateX;\n    let translateY;\n    translateX = parseFloat(values[0]);\n    translateY = parseFloat(values[1]);\n    return {\n        translateX,\n        translateY,\n    };\n}\nexports.getTransformTranslate = getTransformTranslate;\nfunction getTransformScale(element) {\n    const scale = getScaleMatrix(element);\n    // console.log(scale);\n    return {\n        scale,\n    };\n}\nexports.getTransformScale = getTransformScale;\nfunction getMatrixValues(element) {\n    const transformValues = window.getComputedStyle(element, null).getPropertyValue(\"transform\");\n    // console.log(\"transformValues Matrix\", transformValues);\n    const matrixValues = transformValues.split('(')[1].split(')')[0].split(',');\n    const matrixValuesInt = [];\n    // console.log(\"matrixValues Matrix\", matrixValues);\n    for (let i = 0; i < matrixValues.length; i++) {\n        matrixValuesInt[i] = parseFloat(matrixValues[i]);\n    }\n    return matrixValuesInt;\n}\nexports.getMatrixValues = getMatrixValues;\nfunction getRotationMatrix(element) {\n    const valuesMatrix = getMatrixValues(element);\n    // console.log(\"getMatrixValues Matrix\", valuesMatrix);\n    const scale = getScaleMatrix(element);\n    // console.log(\"getScaleMatrix Matrix\", scale);\n    if (valuesMatrix.length === 16) {\n        for (let i = 0; i < 11; i++) {\n            valuesMatrix[i] /= scale;\n        }\n    }\n    else if (valuesMatrix.length === 6) {\n        for (let i = 0; i < 4; i++) {\n            valuesMatrix[i] /= scale;\n        }\n    }\n    const rotationMatrix = valuesMatrix;\n    // console.log(\"rotationMatrix Matrix\", rotationMatrix);\n    return rotationMatrix;\n}\nexports.getRotationMatrix = getRotationMatrix;\nfunction getTranslationMatrix(element) {\n    const valuesMatrix = getMatrixValues(element);\n    let translationMatrix;\n    if (valuesMatrix.length === 16) {\n        translationMatrix = getMatrixValues(element).slice(12, 15);\n    }\n    else if (valuesMatrix.length === 6) {\n        translationMatrix = getMatrixValues(element).slice(4);\n    }\n    return translationMatrix;\n}\nexports.getTranslationMatrix = getTranslationMatrix;\nfunction getScaleMatrix(element) {\n    const valuesMatrix = getMatrixValues(element);\n    let temp = 0;\n    let scale;\n    if (valuesMatrix.length === 16) {\n        const scaleMatrix = getMatrixValues(element).slice(0, 4);\n        scale = 0;\n        // for (let i = 0; i < scaleMatrix.length; i++) {\n        //     scale += parseFloat(scaleMatrix[i]) * parseFloat(scaleMatrix[i]);\n        // }\n        for (const el of scaleMatrix) {\n            scale += parseFloat(el) * parseFloat(el);\n        }\n        scale = parseFloat(Math.sqrt(scale).toPrecision(4));\n    }\n    else if (valuesMatrix.length === 6) {\n        temp = valuesMatrix[0] * valuesMatrix[0] + valuesMatrix[1] * valuesMatrix[1];\n        scale = parseFloat(Math.sqrt(temp).toPrecision(4));\n    }\n    return scale;\n}\nexports.getScaleMatrix = getScaleMatrix;\nfunction setTransform(element, rotateMatrix, translateMatrix, scaleMatrix, yPos = 0) {\n    const transformMatrix = matrix.multiplyArrayOfMatrices([\n        translateMatrix,\n        rotateMatrix,\n        scaleMatrix,\n    ]);\n    // console.log(\"Transform Matrix\", transformMatrix);\n    // window.addEventListener('wheel', event => {\n    // console.log(event);\n    // console.log(event.clientX, event.clientY);\n    // var transformOriginRule = `${event.x}px ${yPos}px`;\n    // element.style.transformOrigin = transformOriginRule;\n    // })\n    // console.log(element);\n    // Set the transform\n    const transformOriginRule = \"50% \" + yPos + \"px\";\n    element.style.transformOrigin = transformOriginRule;\n    // Returns a a matrix3d() CSS string\n    const matrix3dRule = matrix.matrixArrayToCssMatrix(transformMatrix);\n    // console.log(\"CSS Rule\", matrix3dRule);\n    element.style.transform = matrix3dRule;\n}\nexports.setTransform = setTransform;\nfunction setCursor(mode) {\n    switch (mode) {\n        case \"rotate\":\n            document.body.style.cursor = \"ew-resize\";\n            break;\n        case \"translate\":\n            document.body.style.cursor = \"move\";\n            break;\n        case \"scale\":\n            document.body.style.cursor = \"nesw-resize\";\n            break;\n        default:\n            document.body.style.cursor = \"default\";\n    }\n}\nexports.setCursor = setCursor;\nfunction getyPos(event = null, plurid) {\n    const yCenter = window.innerHeight / 2;\n    const translateY = getTransformTranslate(plurid).translateY;\n    const yPos = translateY * -1 + yCenter;\n    return yPos;\n}\nexports.getyPos = getyPos;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/transforms-core.ts?");

/***/ }),

/***/ "./src/ts/source/core/logic/transforms.ts":
/*!************************************************!*\
  !*** ./src/ts/source/core/logic/transforms.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst viewcube_core_1 = __webpack_require__(/*! ../../elements/viewcube/viewcube-core */ \"./src/ts/source/elements/viewcube/viewcube-core.ts\");\nconst directions_1 = __webpack_require__(/*! ./directions */ \"./src/ts/source/core/logic/directions.ts\");\n// import { getPlurid } from \"./get-plurid\";\nconst matrix = __importStar(__webpack_require__(/*! ./matrix */ \"./src/ts/source/core/logic/matrix.ts\"));\n// import { getTransformRotate } from './transforms-core';\nconst transcore = __importStar(__webpack_require__(/*! ./transforms-core */ \"./src/ts/source/core/logic/transforms-core.ts\"));\nlet rotateX = 0.5;\nlet rotateY = 0.5;\nfunction rotation(transform) {\n    const event = transform.event;\n    const plurid = transform.plurid;\n    const direction = transform.direction ? transform.direction : directions_1.getDirection(event);\n    // let rotX = transform.rotateX ? transform.rotateX : rotateX;\n    // let rotY = transform.rotateY ? transform.rotateY : rotateY;\n    // let rotateX = transform.rotateX ? transform.rotateX : getTransformRotate(plurid).rotateX;\n    // let rotateY = transform.rotateY ? transform.rotateY : getTransformRotate(plurid).rotateY;\n    // console.log(rotateX);\n    // console.log(rotateY);\n    // rotatePlurid(event, plurid, direction, rotX, rotY);\n    rotatePlurid(event, plurid, direction);\n    if (plurid.nodeName === 'PLURID-ROOTS') {\n        viewcube_core_1.rotateViewcube(event, plurid, rotateX, rotateY);\n    }\n}\nexports.rotation = rotation;\nfunction rotatePlurid(event, plurid, direction = null) {\n    let angleIncrement;\n    // console.log(\"ROTATE\");\n    // console.log(\"Event\", event);\n    // console.log(\"----------------------------------\")\n    // var rotateX = -1 * transcore.getTransformRotate(plurid).rotateX * 180 / Math.PI;\n    // var rotateY = -1 * transcore.getTransformRotate(plurid).rotateY * 180 / Math.PI;\n    const translateX = transcore.getTransformTranslate(plurid).translateX;\n    const translateY = transcore.getTransformTranslate(plurid).translateY;\n    const translateZ = 0;\n    const scale = transcore.getTransformScale(plurid).scale;\n    let valRotationMatrix = matrix.rotateMatrix(rotateX, rotateY);\n    const valtranslationMatrix = matrix.translateMatrix(translateX, translateY, 0);\n    const valscaleMatrix = matrix.scaleMatrix(scale);\n    const yPos = transcore.getyPos(event, plurid);\n    if (scale < 0.5) {\n        angleIncrement = 4.5;\n    }\n    else {\n        angleIncrement = 4.5;\n    }\n    // console.log(\"----------------------------------\")\n    // console.log(\"Rotate X\", rotateX);\n    // console.log(\"Rotate Y\",rotateY);\n    // console.log(\"Translate X\", translateX);\n    // console.log(\"Translate Y\", translateY);\n    // console.log(\"Scale\", scale);\n    plurid.style.transition = \"0ms ease-in-out\";\n    if (direction === \"left\") {\n        rotateY -= angleIncrement;\n        valRotationMatrix = matrix.rotateMatrix(rotateX, rotateY);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n    if (direction === \"right\") {\n        rotateY += angleIncrement;\n        valRotationMatrix = matrix.rotateMatrix(rotateX, rotateY);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n    if (direction === \"up\") {\n        rotateX += angleIncrement;\n        valRotationMatrix = matrix.rotateMatrix(rotateX, rotateY);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n    if (direction === \"down\") {\n        rotateX -= angleIncrement;\n        valRotationMatrix = matrix.rotateMatrix(rotateX, rotateY);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n}\nexports.rotatePlurid = rotatePlurid;\nfunction translatePlurid(event, plurid, direction = null) {\n    let linearIncrement;\n    // console.log(\"TRANSLATE\");\n    // console.log(\"Event\", event);\n    // let plurid = getPlurid(event);\n    // console.log(\"Plurid\", plurid);\n    if (direction == null) {\n        direction = directions_1.getDirection(event);\n    }\n    // console.log(\"Direction\", direction);\n    // var rotateX = -1 * transcore.getTransformRotate(plurid).rotateX * 180 / Math.PI;\n    // var rotateY = -1 * transcore.getTransformRotate(plurid).rotateY * 180 / Math.PI;\n    let translateX = transcore.getTransformTranslate(plurid).translateX;\n    let translateY = transcore.getTransformTranslate(plurid).translateY;\n    const translateZ = 0;\n    const scale = transcore.getTransformScale(plurid).scale;\n    const valRotationMatrix = matrix.rotateMatrix(rotateX, rotateY);\n    let valtranslationMatrix = matrix.translateMatrix(translateX, translateY, 0);\n    const valscaleMatrix = matrix.scaleMatrix(scale);\n    const yPos = transcore.getyPos(event, plurid);\n    if (scale < 0.5) {\n        linearIncrement = 50;\n    }\n    else {\n        linearIncrement = 30;\n    }\n    // console.log(\"----------------------------------\")\n    // console.log(\"Rotate X\", rotateX);\n    // console.log(\"Rotate Y\",rotateY);\n    // console.log(\"Translate X\", translateX);\n    // console.log(\"Translate Y\", translateY);\n    // console.log(\"Scale\", scale);\n    // console.log(\"getRotateXMatrix\", getRotateXMatrix);\n    // console.log(\"getRotateYMatrix\", getRotateYMatrix);\n    // console.log(\"getTranslateMatrix\", getTranslateMatrix);\n    // console.log(\"getScaleMatrix\", getScaleMatrix);\n    plurid.style.transition = \"20ms ease-in-out\";\n    if (direction === \"left\") {\n        translateX += linearIncrement;\n        valtranslationMatrix = matrix.translateMatrix(translateX, translateY, translateZ);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n    if (direction === \"right\") {\n        translateX -= linearIncrement;\n        valtranslationMatrix = matrix.translateMatrix(translateX, translateY, translateZ);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n    if (direction === \"up\") {\n        translateY += linearIncrement;\n        valtranslationMatrix = matrix.translateMatrix(translateX, translateY, translateZ);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n    if (direction === \"down\") {\n        translateY -= linearIncrement;\n        valtranslationMatrix = matrix.translateMatrix(translateX, translateY, translateZ);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n}\nexports.translatePlurid = translatePlurid;\nfunction scalePlurid(event, plurid, direction = null) {\n    // console.log(\"SCALE\");\n    // console.log(\"Event\", event);\n    // let plurid = getPlurid(event);\n    // console.log(\"Plurid\", plurid);\n    if (direction == null) {\n        direction = directions_1.getDirection(event);\n    }\n    // console.log(\"Direction\", direction);\n    // var rotateX = -1 * transcore.getTransformRotate(plurid).rotateX * 180 / Math.PI;\n    // var rotateY = -1 * transcore.getTransformRotate(plurid).rotateY * 180 / Math.PI;\n    const translateX = transcore.getTransformTranslate(plurid).translateX;\n    const translateY = transcore.getTransformTranslate(plurid).translateY;\n    const translateZ = 0;\n    let scale = transcore.getTransformScale(plurid).scale;\n    const valRotationMatrix = matrix.rotateMatrix(rotateX, rotateY);\n    const valtranslationMatrix = matrix.translateMatrix(translateX, translateY, 0);\n    let valscaleMatrix = matrix.scaleMatrix(scale);\n    const yPos = transcore.getyPos(event, plurid);\n    const scaleIncrement = 0.05;\n    // console.log(\"----------------------------------\")\n    // console.log(\"Rotate X\", rotateX);\n    // console.log(\"Rotate Y\",rotateY);\n    // console.log(\"Translate X\", translateX);\n    // console.log(\"Translate Y\", translateY);\n    // console.log(\"Scale\", scale);\n    // console.log(\"getRotateXMatrix\", getRotateXMatrix);\n    // console.log(\"getRotateYMatrix\", getRotateYMatrix);\n    // console.log(\"getTranslateMatrix\", getTranslateMatrix);\n    // console.log(\"getScaleMatrix\", getScaleMatrix);\n    plurid.style.transition = \"20ms ease-in-out\";\n    if (direction === \"up\" || direction === \"upright\" || direction === \"upleft\") {\n        scale += scaleIncrement;\n        if (scale > 4) {\n            scale = 4;\n        }\n        valscaleMatrix = matrix.scaleMatrix(scale);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n    if (direction === \"down\" || direction === \"downleft\" || direction === \"downright\") {\n        scale -= scaleIncrement;\n        if (scale < 0.1) {\n            scale = 0.1;\n        }\n        valscaleMatrix = matrix.scaleMatrix(scale);\n        transcore.setTransform(plurid, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n    }\n}\nexports.scalePlurid = scalePlurid;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/logic/transforms.ts?");

/***/ }),

/***/ "./src/ts/source/core/state/plurid-scene.ts":
/*!**************************************************!*\
  !*** ./src/ts/source/core/state/plurid-scene.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst scene_core_1 = __webpack_require__(/*! ./scene-core */ \"./src/ts/source/core/state/scene-core.ts\");\nconst pluridScene = {\n    meta: {\n        activePlurid: '',\n        activeSheet: '',\n        containers: 0,\n        ground: 0,\n        multiPageGap: 50,\n        pages: 0,\n        previousActiveSheet: '',\n        reflections: false,\n        rootPages: [],\n        rootSheets: [],\n        shadows: false,\n        theme: 'dusk',\n        themes: ['night', 'dusk', 'dawn', 'light'],\n        transformOrigin: {\n            maxPositiveX: 0,\n            maxNegativeX: 0,\n            maxPositiveY: 0,\n            maxNegativeY: 0,\n            maxPositiveZ: 0,\n            maxNegativeZ: 0,\n            transformOriginX: 0,\n            transformOriginY: 0,\n            transformOriginZ: 0,\n        },\n    },\n    content: [],\n    getBranchById: scene_core_1.getBranchById,\n    getChildrenBySheetId: scene_core_1.getChildrenBySheetId,\n    setTheme: scene_core_1.setNewTheme,\n};\nwindow.pluridScene = pluridScene;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/state/plurid-scene.ts?");

/***/ }),

/***/ "./src/ts/source/core/state/scene-core.ts":
/*!************************************************!*\
  !*** ./src/ts/source/core/state/scene-core.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst theme_1 = __webpack_require__(/*! ../themes/theme */ \"./src/ts/source/core/themes/theme.ts\");\n/**\n * Gets <plurid-branch> based on branch.id\n *\n * @param {string} branchId\n * @return {Object}\n */\nfunction getBranchById(branchId) {\n    for (const rootElement of window.pluridScene.content) {\n        for (const child of rootElement.children) {\n            if (child.branchId === branchId) {\n                return child;\n            }\n            else if (child.children !== []) {\n                const result = getChild(branchId, child.children);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n    /**\n     * Recursively gets <plurid-branch> within a children array\n     * if child.id and branchId match.\n     *\n     * @param {string} branchId\n     * @param {Array} children\n     * @return {Object}\n     */\n    function getChild(_branchId, children) {\n        for (const child of children) {\n            if (child.branchId === _branchId) {\n                return child;\n            }\n            else if (child.children !== []) {\n                const result = getChild(_branchId, child.children);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n}\nexports.getBranchById = getBranchById;\n/**\n * Gets children <plurid-branch> IDs based on sheet.id\n *\n * @param {string} sheetId\n * @return {Array}\n */\nfunction getChildrenBySheetId(sheetId) {\n    const childrenBranch = [];\n    for (const rootElement of window.pluridScene.content) {\n        if (rootElement.sheetId === sheetId) {\n            pushChildrenOfChildren(childrenBranch, rootElement.children);\n        }\n        else {\n            checkChildren(sheetId, childrenBranch, rootElement.children);\n        }\n    }\n    function pushChildrenOfChildren(_childrenBranch, children) {\n        for (const child of children) {\n            _childrenBranch.push(child.branchId);\n            pushChildrenOfChildren(_childrenBranch, child.children);\n        }\n    }\n    function checkChildren(_sheetId, _childrenBranch, _children) {\n        for (const child of _children) {\n            if (child.sheetId === _sheetId) {\n                pushChildrenOfChildren(_childrenBranch, child.children);\n            }\n            else {\n                checkChildren(_sheetId, _childrenBranch, child.children);\n            }\n        }\n    }\n    return childrenBranch;\n}\nexports.getChildrenBySheetId = getChildrenBySheetId;\n/**\n * Set theme\n *\n * @param {string} theme\n */\nfunction setNewTheme(theme) {\n    window.pluridScene.meta.theme = theme;\n    theme_1.setTheme(theme);\n}\nexports.setNewTheme = setNewTheme;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/state/scene-core.ts?");

/***/ }),

/***/ "./src/ts/source/core/themes/theme.ts":
/*!********************************************!*\
  !*** ./src/ts/source/core/themes/theme.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sets plurid-theme-dusk as default theme on <body>\n * if no theme class currently in use.\n */\n(() => {\n    const bodyClassList = document.body.classList;\n    let themeSet = false;\n    for (const bodyClass of bodyClassList) {\n        if (/plurid-theme/.test(bodyClass)) {\n            themeSet = true;\n        }\n    }\n    if (!themeSet) {\n        const defaultTheme = 'dusk';\n        setTheme(defaultTheme);\n    }\n})();\nfunction setTheme(theme) {\n    const bodyClassList = document.body.classList;\n    const possibleThemes = [\n        'night',\n        'dusk',\n        'dawn',\n        'light',\n    ];\n    possibleThemes.map((possibleTheme) => {\n        theme === possibleTheme ? bodyClassList.add(`plurid-theme-${theme}`) : possibleThemes.map(possibleTheme => {\n            theme !== possibleTheme ? bodyClassList.remove(`plurid-theme-${possibleTheme}`) : '';\n        });\n    });\n}\nexports.setTheme = setTheme;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/themes/theme.ts?");

/***/ }),

/***/ "./src/ts/source/core/utils/complex.ts":
/*!*********************************************!*\
  !*** ./src/ts/source/core/utils/complex.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Closure to set id variables to 0\n * and return counting function setting id to HTMLElement\n * and return id number\n *\n * @return {function}\n */\nexports.setId = (() => {\n    const id = {};\n    id.containerNumber = 0;\n    id.rootsNumber = 0;\n    id.rootNumber = 0;\n    id.optionsNumber = 0;\n    id.sheetNumber = 0;\n    id.linkNumber = 0;\n    id.anchorNumber = 0;\n    id.branchNumber = 0;\n    id.shadowNumber = 0;\n    id.viewcubeNumber = 0;\n    /**\n     * Counter, sets id to element, returns id number.\n     *\n     * @param {HTMLElement} element\n     * @param {string} type                 String type of the element, e.g. 'link'\n     * @return {number}\n     */\n    return (element, type) => {\n        const set = (_element, _type, idNumber) => {\n            idNumber += 1;\n            _element.id = `plurid-${_type}-${idNumber}`;\n            return idNumber;\n        };\n        switch (type) {\n            case 'container':\n                return id.containerNumber = set(element, type, id.containerNumber);\n            case 'roots':\n                return id.rootsNumber = set(element, type, id.rootsNumber);\n            case 'root':\n                return id.rootNumber = set(element, type, id.rootNumber);\n            case 'options':\n                return id.optionsNumber = set(element, type, id.optionsNumber);\n            case 'sheet':\n                return id.sheetNumber = set(element, type, id.sheetNumber);\n            case 'link':\n                return id.linkNumber = set(element, type, id.linkNumber);\n            case 'anchor':\n                return id.anchorNumber = set(element, type, id.anchorNumber);\n            case 'branch':\n                return id.branchNumber = set(element, type, id.branchNumber);\n            case 'shadow':\n                return id.shadowNumber = set(element, type, id.shadowNumber);\n            case 'viewcube':\n                return id.viewcubeNumber = set(element, type, id.viewcubeNumber);\n        }\n    };\n})();\n\n\n//# sourceURL=webpack:///./src/ts/source/core/utils/complex.ts?");

/***/ }),

/***/ "./src/ts/source/core/utils/simple.ts":
/*!********************************************!*\
  !*** ./src/ts/source/core/utils/simple.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Gets a string and returns it with capitalized first letter.\n *\n * @param {string} str\n * @return {string}\n */\nfunction capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nexports.capitalize = capitalize;\n\n\n//# sourceURL=webpack:///./src/ts/source/core/utils/simple.ts?");

/***/ }),

/***/ "./src/ts/source/dev.ts":
/*!******************************!*\
  !*** ./src/ts/source/dev.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reflections_1 = __webpack_require__(/*! ./core/logic/reflections */ \"./src/ts/source/core/logic/reflections.ts\");\nconst shadows_1 = __webpack_require__(/*! ./core/logic/shadows */ \"./src/ts/source/core/logic/shadows.ts\");\n/**\n * Checks document if it contains the HTML tag <plurid-container>.\n *\n * @return {boolean}\n */\nfunction checkForContainers() {\n    return !!document.getElementsByTagName('plurid-container')[0];\n}\n/**\n * Checks recursively if the parents of the given pluridElement\n * have the nodeName 'PLURID-PAGE'.\n *\n * @param {object} pluridElement            Given <plurid-page> element.\n * @return {boolean}                        True if pluridElement should be a <plurid-root>.\n */\nfunction checkPluridParent(pluridElement) {\n    if (pluridElement.nodeName !== 'HTML') {\n        if (pluridElement.parentElement.nodeName === 'PLURID-PAGE') {\n            // console.log('is NOT a plurid root');\n            return false;\n        }\n        else {\n            return checkPluridParent(pluridElement.parentElement);\n        }\n    }\n    else {\n        // console.log('is a plurid-root');\n        return true;\n    }\n}\n/**\n * Given an adequately plurid-formatted HTML document,\n * generates the plurid structure.\n */\nfunction setContainer() {\n    if (!checkForContainers()) {\n        // console.log(checkForContainers());\n        const body = document.body;\n        // console.log(body);\n        // console.log('-----');\n        const pluridPages = document.getElementsByTagName('plurid-page');\n        const pluridPagesRoots = [];\n        const pluridLinks = document.getElementsByTagName('plurid-link');\n        for (const pluridPage of pluridPages) {\n            // console.log(pluridPage.name);\n            // console.log(pluridPage.visible);\n            if (checkPluridParent(pluridPage)) {\n                pluridPagesRoots.push(pluridPage);\n            }\n        }\n        // console.log(pluridPagesRoots);\n        const container = document.createElement(\"plurid-container\");\n        const pluridSpace = document.createElement(\"plurid-space\");\n        // const div = document.createElement('div');\n        // div.classList.add('testing');\n        const pluridRoots = document.createElement(\"plurid-roots\");\n        pluridSpace.appendChild(pluridRoots);\n        container.appendChild(pluridSpace);\n        // div.appendChild(pluridRoots);\n        // container.appendChild(div);\n        const scripts = document.getElementsByTagName('script');\n        // body.insertBefore(container, scripts[0]);\n        // cypress error\n        body.appendChild(container);\n        for (const pluridPage of pluridPagesRoots) {\n            const pluridRoot = document.createElement(\"plurid-root\");\n            const html = pluridPage.innerHTML;\n            const pluridSheet = document.createElement('plurid-sheet');\n            const pluridContent = document.createElement('plurid-content');\n            pluridSheet.appendChild(pluridContent);\n            if (pluridPage.visible) {\n                pluridSheet.visible = pluridPage.visible;\n            }\n            pluridContent.innerHTML = html;\n            pluridRoot.appendChild(pluridSheet);\n            pluridRoots.appendChild(pluridRoot);\n            // console.log('----------');\n            const sheetHeight = pluridSheet.offsetHeight;\n            let ground = window.pluridScene.meta.ground;\n            if (sheetHeight > ground) {\n                window.pluridScene.meta.ground = sheetHeight;\n                ground = window.pluridScene.meta.ground;\n            }\n            const shadows = window.pluridScene.meta.shadows;\n            if (shadows === true) {\n                shadows_1.setShadows(pluridRoot, pluridSheet, sheetHeight, ground);\n            }\n            const reflections = window.pluridScene.meta.reflections;\n            if (reflections === true) {\n                reflections_1.setReflections(pluridSheet, sheetHeight, ground);\n            }\n        }\n        for (let i = pluridPages.length - 1; i >= 0; i--) {\n            // console.log(pluridPages[i]);\n            pluridPages[i].parentNode.removeChild(pluridPages[i]);\n        }\n        // setLink();\n        // console.log(container);\n    }\n    else {\n        const containers = document.getElementsByTagName('plurid-container');\n    }\n}\nsetContainer();\nfunction setTransformOriginCoordinates() {\n    const elementPositiveX = 200;\n    const elementNegativeX = -210;\n    const elementPositiveY = 231;\n    const elementNegativeY = -211;\n    const elementPositiveZ = 131;\n    const elementNegativeZ = -1231;\n    const transformOrigin = window.pluridScene.meta.transformOrigin;\n    if (elementPositiveX > transformOrigin.maxPositiveX) {\n        transformOrigin.maxPositiveX = elementPositiveX;\n    }\n    if (elementNegativeX < transformOrigin.maxNegativeX) {\n        transformOrigin.maxNegativeX = elementNegativeX;\n    }\n    if (elementPositiveY > transformOrigin.maxPositiveY) {\n        transformOrigin.maxPositiveY = elementPositiveY;\n    }\n    if (elementNegativeY < transformOrigin.maxNegativeY) {\n        transformOrigin.maxNegativeY = elementNegativeY;\n    }\n    if (elementPositiveZ > transformOrigin.maxPositiveZ) {\n        transformOrigin.maxPositiveZ = elementPositiveZ;\n    }\n    if (elementNegativeZ < transformOrigin.maxNegativeZ) {\n        transformOrigin.maxNegativeZ = elementNegativeZ;\n    }\n}\nsetTransformOriginCoordinates();\nfunction calculateTransformOriginCenters() {\n    const transformOrigin = window.pluridScene.meta.transformOrigin;\n    const positiveX = transformOrigin.maxPositiveX;\n    const negativeX = transformOrigin.maxNegativeX;\n    const positiveY = transformOrigin.maxPositiveY;\n    const negativeY = transformOrigin.maxNegativeY;\n    const positiveZ = transformOrigin.maxPositiveZ;\n    const negativeZ = transformOrigin.maxNegativeZ;\n    transformOrigin.transformOriginX = (positiveX + negativeX) / 2;\n    transformOrigin.transformOriginY = (positiveY + negativeY) / 2;\n    transformOrigin.transformOriginZ = (positiveZ + negativeZ) / 2;\n}\ncalculateTransformOriginCenters();\n\n\n//# sourceURL=webpack:///./src/ts/source/dev.ts?");

/***/ }),

/***/ "./src/ts/source/elements/branch/branch-define.ts":
/*!********************************************************!*\
  !*** ./src/ts/source/elements/branch/branch-define.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nclass PluridBranch extends HTMLElement {\n    constructor() {\n        super();\n    }\n    get link() {\n        return this.getAttribute('link');\n    }\n    set link(newLink) {\n        this.setAttribute('link', newLink);\n    }\n}\ncustomElements.define('plurid-branch', PluridBranch);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/branch/branch-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/bridge/bridge-define.ts":
/*!********************************************************!*\
  !*** ./src/ts/source/elements/bridge/bridge-define.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nclass PluridBridge extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-bridge', PluridBridge);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/bridge/bridge-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/container/container-core.ts":
/*!************************************************************!*\
  !*** ./src/ts/source/elements/container/container-core.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst get_plurid_1 = __webpack_require__(/*! ../../core/logic/get-plurid */ \"./src/ts/source/core/logic/get-plurid.ts\");\n// import { stylePlurid as style } from \"../../core/logic/style-plurid\";\nconst transforms_1 = __webpack_require__(/*! ../../core/logic/transforms */ \"./src/ts/source/core/logic/transforms.ts\");\nconst sheet_core_1 = __webpack_require__(/*! ../sheet/sheet-core */ \"./src/ts/source/elements/sheet/sheet-core.ts\");\n// import { rotateViewcube } from \"../viewcube/viewcube-core\";\n// transform receives the selected plurid\nfunction transform(container) {\n    // let pluridStack = new Set();\n    let plurid = container.getElementsByTagName('plurid-roots')[0];\n    const _transform = {\n        plurid,\n        container,\n    };\n    let direction = \"\";\n    let oldX = 0;\n    let oldY = 0;\n    function getDirection(event) {\n        return ((_event) => {\n            if (oldX < _event.clientX) {\n                direction = \"right\";\n            }\n            else if (oldX > _event.clientX) {\n                direction = \"left\";\n            }\n            // issues with transforms\n            // if (oldY < event.clientY) {\n            //     direction = \"down\";\n            // } else if (oldY > event.clientY) {\n            //     direction = \"up\";\n            // }\n            oldX = _event.clientX;\n            oldY = _event.clientY;\n            return direction;\n        })(event);\n    }\n    function rotatePluridClickThree(event) {\n        if (event.shiftKey) {\n            event.preventDefault();\n            const _direction = getDirection(event);\n            transforms_1.rotatePlurid(event, plurid, _direction);\n            // rotateViewcube(event, plurid);\n        }\n    }\n    function translatePluridClickThree(event) {\n        if (event.altKey) {\n            event.preventDefault();\n            const _direction = getDirection(event);\n            transforms_1.translatePlurid(event, plurid, _direction);\n        }\n    }\n    container.addEventListener('mousedown', (event) => {\n        if (event.which === 2 || event.button === 4) {\n            if (event.shiftKey) {\n                event.preventDefault();\n                container.addEventListener('mousemove', rotatePluridClickThree);\n            }\n            if (event.altKey) {\n                event.preventDefault();\n                container.addEventListener('mousemove', translatePluridClickThree);\n            }\n        }\n    });\n    container.addEventListener('mouseup', (event) => {\n        if (event.which === 2 || event.button === 4) {\n            container.removeEventListener('mousemove', rotatePluridClickThree);\n            container.removeEventListener('mousemove', translatePluridClickThree);\n        }\n    });\n    container.addEventListener(\"click\", (event) => {\n        // cross-browsers eventPath\n        const eventPath = event.path || (event.composedPath && event.composedPath());\n        const currentPluridRoot = checkCurrentPluridRoot(eventPath);\n        if (eventPath[0].id === container.id || !currentPluridRoot) {\n            window.pluridScene.meta.activePlurid = 'plurid-roots-1';\n            window.pluridScene.meta.previousActiveSheet = window.pluridScene.meta.activeSheet;\n            window.pluridScene.meta.activeSheet = \"\";\n            sheet_core_1.removeActiveSheetShadow(window.pluridScene.meta.previousActiveSheet, 'plurid-sheet-active');\n            sheet_core_1.removeActiveSheetShadow(window.pluridScene.meta.previousActiveSheet, 'plurid-sheet-active-transform');\n        }\n        plurid = get_plurid_1.getPlurid(event).root;\n    });\n    container.addEventListener('wheel', (event) => {\n        if (event.shiftKey) {\n            event.preventDefault();\n            _transform.event = event;\n            transforms_1.rotation(_transform);\n        }\n        if (event.altKey) {\n            event.preventDefault();\n            transforms_1.translatePlurid(event, plurid);\n        }\n        if (event.metaKey || event.ctrlKey) {\n            event.preventDefault();\n            transforms_1.scalePlurid(event, plurid);\n        }\n    });\n}\nexports.transform = transform;\nfunction checkCurrentPluridRoot(eventPath) {\n    // console.log('eventPath', eventPath);\n    let pluridSheet;\n    let pluridSheetId = '';\n    // let pluridBranch;\n    // let pluridBranchId = '';\n    // let pluridBranchScene;\n    for (const eventPathElement of eventPath) {\n        if (eventPathElement.classList) {\n            if (eventPathElement.classList.contains('plurid-controls-select')) {\n                return true;\n            }\n        }\n        if (eventPathElement.nodeName === 'PLURID-SHEET') {\n            pluridSheet = eventPathElement;\n            pluridSheetId = eventPathElement.id;\n        }\n    }\n    for (const pluridSceneContent of window.pluridScene.content) {\n        // console.log(pluridSceneContent.id);\n        for (const child of pluridSceneContent.children) {\n            if (child.sheetId === pluridSheetId) {\n                return verifyChild(pluridSceneContent.id);\n            }\n            else {\n                return recursiveCheck(child.children, pluridSceneContent.id);\n            }\n        }\n        if (pluridSceneContent.sheetId === pluridSheetId) {\n            return verifyChild(pluridSceneContent.id);\n        }\n    }\n    function verifyChild(verifyId) {\n        if (verifyId === window.pluridScene.meta.activePlurid) {\n            // console.log(verifyId);\n            // console.log(pluridScene.meta.activePlurid);\n            return true;\n        }\n    }\n    function recursiveCheck(children, verifyId) {\n        for (const child of children) {\n            if (child.sheetId === pluridSheetId) {\n                return verifyChild(verifyId);\n            }\n            else {\n                return recursiveCheck(child.children, verifyId);\n            }\n        }\n    }\n    return false;\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/container/container-core.ts?");

/***/ }),

/***/ "./src/ts/source/elements/container/container-define.ts":
/*!**************************************************************!*\
  !*** ./src/ts/source/elements/container/container-define.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst shortcuts_1 = __webpack_require__(/*! ../../core/logic/shortcuts */ \"./src/ts/source/core/logic/shortcuts.ts\");\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\nconst container_core_1 = __webpack_require__(/*! ./container-core */ \"./src/ts/source/elements/container/container-core.ts\");\nconst options_define_1 = __webpack_require__(/*! ../options/options-define */ \"./src/ts/source/elements/options/options-define.ts\");\nconst viewcube_define_1 = __webpack_require__(/*! ../viewcube/viewcube-define */ \"./src/ts/source/elements/viewcube/viewcube-define.ts\");\nclass PluridContainer extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        complex_1.setId(this, 'container');\n        container_core_1.transform(this);\n        options_define_1.initOptions(this);\n        viewcube_define_1.initViewcube(this);\n        shortcuts_1.initShortcuts();\n    }\n}\ncustomElements.define('plurid-container', PluridContainer);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/container/container-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/content/content-define.ts":
/*!**********************************************************!*\
  !*** ./src/ts/source/elements/content/content-define.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nclass PluridContent extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-content', PluridContent);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/content/content-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/controls/controls-core.ts":
/*!**********************************************************!*\
  !*** ./src/ts/source/elements/controls/controls-core.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// import { activePlurid } from \"../../core/logic/get-plurid\";\nconst sheet_core_1 = __webpack_require__(/*! ../sheet/sheet-core */ \"./src/ts/source/elements/sheet/sheet-core.ts\");\nfunction renderControls(element, id) {\n    const controls = document.createElement(\"plurid-controls\");\n    controls.id = `plurid-controls-${id}`;\n    element.appendChild(controls);\n}\nexports.renderControls = renderControls;\nfunction contentControls() {\n    const content = `<div class=\"plurid-container-controls-content\">\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-select\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 715.45 731.22\">\n                                <defs></defs>\n                                <title>Select</title>\n                                <g>\n                                    <g id=\"Select\">\n                                        <path class=\"plurid-button-icon-svg\" d=\"M354.25,731.22,340.3,363.64,0,316.45,715.45,0ZM181,291.07l207.7,28.81,8.06,212.42L609.53,101.52Z\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-parent\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 878.5 880.44\">\n                                <defs></defs>\n                                <title>Parent</title>\n                                <g>\n                                    <g id=\"Parent\">\n                                        <path class=\"plurid-button-icon-svg\" d=\"M521.28,838.25V386.06L334.86,406.83V250.66L878.5,193.4V787.71Zm44-501.32V787.64l269.31-38.1V242.22l-455.74,48v67.48Z\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"0.44 0.68 0.44 696.24 405.19 879.75 405.19 182.91 0.44 0.68\"/>\n                                        <path class=\"plurid-button-icon-svg\" d=\"M405.63,880.44,0,696.52V0L405.63,182.63ZM.88,696,404.75,879.07V183.2L.88,1.36Z\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-minimize\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 874.5 50\">\n                                <defs></defs>\n                                <title>Minimize</title>\n                                <g>\n                                    <g id=\"Minimize\">\n                                        <line class=\"plurid-button-icon-svg\" y1=\"25\" x2=\"874.5\" y2=\"25\"/><rect class=\"plurid-button-icon-svg\" width=\"874.5\" height=\"50\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-reduce-height\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 869.91 326\">\n                                <defs></defs>\n                                <title>Reduce</title>\n                                <g>\n                                    <g id=\"Reduce_Height\" data-name=\"Reduce Height\">\n                                        <path class=\"plurid-button-icon-svg\" d=\"M869.91,326H228.37V43.58H0V0H869.91ZM272,282.42H826.33V43.58H272Z\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-extend\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 866 375.89\">\n                                <defs></defs>\n                                <title>Extend</title>\n                                <g>\n                                    <g id=\"Extend\">\n                                        <rect class=\"plurid-button-icon-svg\" x=\"31.02\" y=\"165.42\" width=\"796.17\" height=\"43.32\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"192.59 375.81 0 187 192.67 0 222.84 31.08 62.03 187.16 222.91 344.88 192.59 375.81\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"673.33 375.89 643.16 344.8 803.97 188.73 643.09 31.01 673.41 0.08 866 188.89 673.33 375.89\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-reset-transforms\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 866 870.97\">\n                                <defs></defs>\n                                <title>Reset Transforms</title>\n                                <g>\n                                    <g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Reset_Transforms\" data-name=\"Reset Transforms\">\n                                        <rect class=\"plurid-button-icon-svg\" x=\"31.05\" y=\"418.97\" width=\"796.17\" height=\"43.32\" transform=\"translate(-185.88 432.5) rotate(-45)\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"395.35 741.32 125.66 743.99 129.66 475.53 172.97 476.18 169.63 700.24 394.92 698.01 395.35 741.32\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"735.34 401.44 692.02 400.79 695.37 176.73 470.08 178.96 469.65 135.65 739.35 132.97 735.34 401.44\"/>\n                                        <path class=\"plurid-button-icon-svg\" d=\"M865.5,870.47H.5V.5h865ZM44,827H822V44H44Z\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-isolate\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 562 869.97\">\n                                <defs></defs>\n                                <title>Isolate</title>\n                                <g>\n                                    <g id=\"Isolate\"><path class=\"plurid-button-icon-svg\" d=\"M562,870H0V0H562ZM43.5,826.47h475V43.5H43.5Z\"/>\n                                        <rect class=\"plurid-button-icon-svg\" x=\"259.25\" y=\"166.16\" width=\"43.5\" height=\"537.64\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-close\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 875.09 875.82\">\n                                <defs></defs>\n                                <title>Close</title>\n                                <g>\n                                    <g id=\"Close\"><rect class=\"plurid-button-icon-svg\" x=\"415.36\" y=\"-158.88\" width=\"44.45\" height=\"1193.58\" transform=\"translate(-181.48 437.37) rotate(-44.97)\"/>\n                                        <rect class=\"plurid-button-icon-svg\" x=\"-160.45\" y=\"415.69\" width=\"1187.63\" height=\"44.45\" transform=\"translate(-182.73 438.11) rotate(-45.32)\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-reload\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 872.67 701\">\n                                <defs></defs>\n                                <title>Reload</title>\n                                <g>\n                                    <g id=\"Reload\">\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"794 701 0 701 0 0 775 0 775 50 50 50 50 651 744 651 744 239 794 239 794 701\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"707.31 455.04 660.69 436.96 773.57 145.79 872.67 437.97 825.33 454.03 770.43 292.21 707.31 455.04\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-back\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 874.8 394.66\">\n                                <defs></defs>\n                                <title>Back</title>\n                                <g>\n                                    <g id=\"Back\">\n                                        <rect class=\"plurid-button-icon-svg\" x=\"46.8\" y=\"173.72\" width=\"828\" height=\"45.49\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"202.25 394.66 0 196.38 202.33 0 234.01 32.64 65.15 196.54 234.1 362.18 202.25 394.66\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-forward\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 871.97 361.91\">\n                                <defs></defs>\n                                <title>Forward</title>\n                                <g>\n                                    <g id=\"Next\">\n                                        <rect class=\"plurid-button-icon-svg\" y=\"159.23\" width=\"842.93\" height=\"41.72\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"686.43 361.91 657.38 331.98 812.23 181.68 657.3 29.79 686.5 0 871.97 181.83 686.43 361.91\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-controls-url\">\n                            <div class=\"plurid-controls-url-container\">\n                                <div class=\"plurid-button plurid-button-icon plurid-button-icon-url plurid-controls-search\" tabindex=\"1\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 748.89 755.57\">\n                                        <defs></defs>\n                                        <title>Search</title>\n                                        <g>\n                                            <g id=\"Search\"><line class=\"plurid-button-icon-svg\" x1=\"17.83\" y1=\"738.05\" x2=\"359.83\" y2=\"390.05\"/>\n                                                <rect class=\"plurid-button-icon-svg\" x=\"-55.13\" y=\"539.05\" width=\"487.92\" height=\"50\" transform=\"translate(-345.89 303.51) rotate(-45.51)\"/>\n                                                <path class=\"plurid-button-icon-svg\"\n                                                    d=\"M496.33,50A41.62,41.62,0,0,1,526,62.27L686.62,222.92a42,42,0,0,1,0,59.26L526,\n                                                    442.83a41.87,41.87,0,0,1-59.25,0L306.05,282.18a42,42,0,0,1,0-59.26L466.71,62.27A41.62,\n                                                    41.62,0,0,1,496.33,50m0-50a91.61,91.61,0,0,0-65,26.92L270.7,187.57a91.9,91.9,0,0,0,0,\n                                                    130L431.35,478.19a91.9,91.9,0,0,0,130,0L722,317.54a91.9,91.9,0,0,0,0-130L561.32,26.92A91.62,91.62,0,0,0,496.33,0Z\"/>\n                                            </g>\n                                            </g>\n                                        </svg>\n                                </div>\n                                <input class=\"plurid-controls-url-input\" type=\"text\" tabindex=\"1\" placeholder=\"Search\">\n                                <div class=\"plurid-button plurid-button-icon plurid-button-icon-url plurid-controls-cancel\" tabindex=\"1\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 875.09 875.82\">\n                                        <defs></defs>\n                                        <title>Cancel</title>\n                                        <g>\n                                            <g id=\"Close\"><rect class=\"plurid-button-icon-svg\" x=\"415.36\" y=\"-158.88\" width=\"44.45\" height=\"1193.58\" transform=\"translate(-181.48 437.37) rotate(-44.97)\"/>\n                                                <rect class=\"plurid-button-icon-svg\" x=\"-160.45\" y=\"415.69\" width=\"1187.63\" height=\"44.45\" transform=\"translate(-182.73 438.11) rotate(-45.32)\"/>\n                                            </g>\n                                        </g>\n                                    </svg>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-extract\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 697.49 878\">\n                                <defs></defs>\n                                <title>Extract</title>\n                                <g>\n                                    <g id=\"Extract_Root\" data-name=\"Extract Root\">\n                                        <path class=\"plurid-button-icon-svg\" d=\"M503,878H0V148.09H503ZM43.81,834.19H459.15V191.9H43.81Z\"/>\n                                        <polygon class=\"plurid-button-icon-svg\" points=\"697.49 782.49 487.19 782.49 487.19 738.68 653.68 738.68 653.68 43.81 223.41 43.81 223.26 161.26 179.45 161.2 179.66 0 697.49 0 697.49 782.49\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-opacity\" tabindex=\"1\">\n                            100\n                        </div>\n\n                        <div class=\"plurid-button plurid-button-icon plurid-controls-more\" tabindex=\"1\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 622.51 130.1\">\n                                <defs>\n                                </defs>\n                                <title>More</title>\n                                <g id=\"Layer_2\" data-name=\"Layer 2\">\n                                    <g id=\"More\"><rect class=\"plurid-button-icon-svg\" x=\"20.2\" y=\"20.2\" width=\"89.69\" height=\"89.69\"/>\n                                        <path class=\"plurid-button-icon-svg\" d=\"M130.1,130.1H0V0H130.1ZM40.4,89.69H89.69V40.4H40.4Z\"/>\n                                        <rect class=\"plurid-button-icon-svg\" x=\"266.21\" y=\"20.2\" width=\"89.69\" height=\"89.69\"/>\n                                        <path class=\"plurid-button-icon-svg\" d=\"M376.11,130.1H246V0h130.1Zm-89.7-40.41H335.7V40.4H286.41Z\"/>\n                                        <rect class=\"plurid-button-icon-svg\" x=\"512.62\" y=\"20.2\" width=\"89.69\" height=\"89.69\"/><path class=\"plurid-button-icon-svg\" d=\"M622.51,130.1H492.42V0H622.51ZM532.82,89.69h49.29V40.4H532.82Z\"/>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n\n                        <plurid-link page=\"./ads.html\">\n                            <div class=\"plurid-button plurid-button-icon\" tabindex=\"1\">\n                                Ads\n                            </div>\n                        </plurid-link>\n                    </div>\n\n                    <div class=\"plurid-controls-open-close\">\n                        <div class=\"plurid-button plurid-controls-open-close-character\">\n                            <!-- White up-pointing triangle: &#9651; White down-pointing triangle: &#9661; -->\n                            &#9651;\n                        </div>\n                    </div>\n\n                    <div class=\"plurid-controls-message\">\n                        <div class=\"plurid-controls-message-close\">✕</div>\n                        <div class=\"plurid-controls-message-content\">\n                        </div>\n                    </div>\n\n                    <div class=\"plurid-controls-more-container\">\n                        <ul>\n                            <li>\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Open in New Tab\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut\">\n                                    &#8997; &#8984; T\n                                </span>\n                            </li>\n                            <li>\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Open in New Window\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut\">\n                                    &#8997; &#8984; N\n                                </span>\n                            </li>\n                            <li>\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Open in New Incognito Window\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut\">\n                                    &#8679; &#8997; &#8984; N\n                                </span>\n                            </li>\n\n                            <hr>\n\n                            <li>\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Flip Branch\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut\">\n                                    &#8997; F\n                                </span>\n                            </li>\n                            <li>\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Flip Content\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut\">\n                                    &#8997; V\n                                </span>\n                            </li>\n                            <li class=\"plurid-controls-more-sheet-history\">\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Sheet History\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut\">\n                                    &#9654;\n                                </span>\n                                <div class=\"plurid-controls-sheet-history-container\">\n                                    <ul>\n                                        <li>\n                                            https://plurid.com/\n                                        </li>\n                                        <li>\n                                            https://deview.plurid.com/3kagndleoa\n                                        </li>\n                                        <li>\n                                            https://plurid.com/\n                                        </li>\n                                        <li>\n                                            https://deview.plurid.com/jdpiar1nra\n                                        </li>\n                                        <li>\n                                            https://plurid.com/\n                                        </li>\n                                        <li>\n                                            https://deview.plurid.com/dkpaosn11z\n                                        </li>\n                                    </ul>\n                                </div>\n                            </li>\n\n                            <hr>\n\n                            <label class=\"plurid-controls-more-checkmark-container\">\n                                <li>\n                                    <span class=\"plurid-controls-more-container-text\">\n                                        Opaque Back\n                                    </span>\n                                    <span class=\"plurid-controls-more-container-shortcut\">\n                                        <input type=\"checkbox\">\n                                        <span class=\"plurid-controls-more-checkmark\"></span>\n                                    </span>\n                                </li>\n                            </label>\n                            <li class=\"plurid-controls-more-back-color\">\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Back Background Color\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut plurid-controls-more-back-color-input\">\n                                    <input type=\"text\" value=\"#ff0000\">\n                                </span>\n                                <div class=\"plurid-controls-more-back-color-container\">\n                                    <div class=\"plurid-controls-more-selected-color\">\n                                    </div>\n                                    <div class=\"plurid-controls-more-select-color\">\n                                        <div class=\"plurid-controls-more-select-color-group\">\n                                            <div class=\"plurid-controls-more-select-color-group-element\">\n                                                <div>\n                                                    Hue\n                                                </div>\n                                                <div>\n                                                    <input type=\"text\">\n                                                </div>\n                                            </div>\n                                            <input type=\"range\">\n                                        </div>\n                                        <div class=\"plurid-controls-more-select-color-group\">\n                                            <div class=\"plurid-controls-more-select-color-group-element\">\n                                                <div>\n                                                    Saturation\n                                                </div>\n                                                <div>\n                                                    <input type=\"text\"> %\n                                                </div>\n                                            </div>\n                                            <input type=\"range\">\n                                        </div>\n                                        <div class=\"plurid-controls-more-select-color-group\">\n                                            <div class=\"plurid-controls-more-select-color-group-element\">\n                                                <div>\n                                                    Lightness\n                                                </div>\n                                                <div>\n                                                    <input type=\"text\"> %\n                                                </div>\n                                            </div>\n                                            <input type=\"range\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </li>\n                            <li class=\"plurid-controls-more-front-color\">\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Front Background Color\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut plurid-controls-more-front-color-input\">\n                                    <input type=\"text\" value=\"#ff0000\">\n                                </span>\n                                <div class=\"plurid-controls-more-front-color-container\">\n                                    <div class=\"plurid-controls-more-selected-color\">\n                                    </div>\n                                    <div class=\"plurid-controls-more-select-color\">\n                                        <div class=\"plurid-controls-more-select-color-group\">\n                                            <div class=\"plurid-controls-more-select-color-group-element\">\n                                                <div>\n                                                    Hue\n                                                </div>\n                                                <div>\n                                                    <input type=\"text\">\n                                                </div>\n                                            </div>\n                                            <input type=\"range\">\n                                        </div>\n                                        <div class=\"plurid-controls-more-select-color-group\">\n                                            <div class=\"plurid-controls-more-select-color-group-element\">\n                                                <div>\n                                                    Saturation\n                                                </div>\n                                                <div>\n                                                    <input type=\"text\"> %\n                                                </div>\n                                            </div>\n                                            <input type=\"range\">\n                                        </div>\n                                        <div class=\"plurid-controls-more-select-color-group\">\n                                            <div class=\"plurid-controls-more-select-color-group-element\">\n                                                <div>\n                                                    Lightness\n                                                </div>\n                                                <div>\n                                                    <input type=\"text\"> %\n                                                </div>\n                                            </div>\n                                            <input type=\"range\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </li>\n                            <label class=\"plurid-controls-more-checkmark-container\">\n                                <li>\n                                    <span class=\"plurid-controls-more-container-text\">\n                                        Transparent Sheet\n                                    </span>\n                                    <span class=\"plurid-controls-more-container-shortcut\">\n                                        <input type=\"checkbox\">\n                                        <span class=\"plurid-controls-more-checkmark\"></span>\n                                    </span>\n                                </li>\n                            </label>\n                            <li>\n                                Reset Colors\n                            </li>\n\n                            <hr>\n\n                            <li class=\"plurid-controls-more-branch-angle\">\n                                <span class=\"plurid-controls-more-container-text\">\n                                    <span class=\"plurid-controls-more-branch-angle-span-text\">\n                                        Branch Angle\n                                    </span>\n                                    <span class=\"plurid-controls-more-branch-angle-span-range\">\n                                        <input type=\"range\" min=\"1\" max=\"180\" value=\"90\">\n                                    </span>\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut plurid-controls-more-branch-angle-input\">\n                                    <input type=\"text\" value=\"90\"> °\n                                </span>\n                            </li>\n\n                            <li class=\"plurid-controls-more-bridge-opacity\">\n                                <span class=\"plurid-controls-more-container-text\">\n                                    <span class=\"plurid-controls-more-bridge-opacity-span-text\">\n                                        Bridge Opacity\n                                    </span>\n                                    <span class=\"plurid-controls-more-bridge-opacity-span-range\">\n                                        <input type=\"range\" min=\"1\" max=\"100\" value=\"90\">\n                                    </span>\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut plurid-controls-more-bridge-opacity-input\">\n                                    <input type=\"text\" value=\"90\">\n                                </span>\n                            </li>\n\n                            <hr>\n\n                            <li>\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Sheet Width\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut plurid-controls-more-sheet-width-input\">\n                                    <input type=\"text\" value=\"1440\"> px\n                                </span>\n                            </li>\n                            <li>\n                                <span class=\"plurid-controls-more-container-text\">\n                                    Sheet Height\n                                </span>\n                                <span class=\"plurid-controls-more-container-shortcut plurid-controls-more-sheet-height-input\">\n                                    <input type=\"text\" value=\"950\"> px\n                                </span>\n                            </li>\n\n                            <label class=\"plurid-controls-more-checkmark-container\">\n                                <li>\n                                    <span class=\"plurid-controls-more-container-text\">\n                                        Lock Sheet Size\n                                    </span>\n                                    <span class=\"plurid-controls-more-container-shortcut\">\n                                        <input type=\"checkbox\">\n                                        <span class=\"plurid-controls-more-checkmark\"></span>\n                                    </span>\n                                </li>\n                            </label>\n                            <li>Reset Sheet Size</li>\n\n                            <hr>\n\n                            <li>\n                                Controls Position\n                                <form>\n                                    <fieldset>\n                                        <div>\n                                            <input type=\"radio\" name=\"plurid-controls-follows-translate-side\" checked>\n                                            <label>Top</label>\n                                        </div>\n\n                                        <div>\n                                            <input type=\"radio\" name=\"plurid-controls-follows-translate-side\">\n                                            <label>Right</label>\n                                        </div>\n\n                                        <div>\n                                            <input type=\"radio\" name=\"plurid-controls-follows-translate-side\">\n                                            <label>Left</label>\n                                        </div>\n                                    </fieldset>\n                                </form>\n                            </li>\n\n                            <label class=\"plurid-controls-more-checkmark-container\">\n                                <li>\n                                    <span class=\"plurid-controls-more-container-text\">\n                                        Controls Follow Translate on Side\n                                    </span>\n                                    <span class=\"plurid-controls-more-container-shortcut\">\n                                        <input type=\"checkbox\">\n                                        <span class=\"plurid-controls-more-checkmark\"></span>\n                                    </span>\n                                </li>\n                            </label>\n\n                            <hr>\n\n                            <label class=\"plurid-controls-more-checkmark-container\">\n                                <li>\n                                    <span class=\"plurid-controls-more-container-text\">\n                                        Show Icons Tooltips\n                                    </span>\n                                    <span class=\"plurid-controls-more-container-shortcut\">\n                                        <input type=\"checkbox\">\n                                        <span class=\"plurid-controls-more-checkmark\"></span>\n                                    </span>\n                                </li>\n                            </label>\n\n                            <li>Shortcuts</li>\n                            <li>Edit Buttons</li>\n                            <li>Reset to Default</li>\n\n                            <hr>\n\n                            <li>About Plurid</li>\n                        </ul>\n                    </div>\n                    `;\n    return content;\n}\nexports.contentControls = contentControls;\nfunction setControls(element) {\n    setActivePlurid(element);\n    goToParent(element);\n    minimizeSelectedSheet(element);\n    reduceSelectedSheet(element);\n    reloadPlurid(element);\n    extendBridge(element);\n    closePlurid(element);\n    isolatePlurid(element);\n    backPlurid(element);\n    forwardPlurid(element);\n    searchPlurid(element);\n    extractRoot(element);\n    opacityPlurid(element);\n    morePlurid(element);\n    openCloseControls(element);\n    setControlsMessageClose(element);\n}\nexports.setControls = setControls;\nfunction setActivePlurid(element) {\n    const pluridSelect = element.getElementsByClassName(\"plurid-controls-select\")[0];\n    pluridSelect.addEventListener(\"click\", (event) => {\n        const pluridRoot = sheet_core_1.getSpecifiedParent(pluridSelect, 'PLURID-ROOT');\n        window.pluridScene.meta.activePlurid = pluridRoot.id;\n        window.pluridScene.meta.previousActiveSheet = window.pluridScene.meta.activeSheet;\n        window.pluridScene.meta.activeSheet = element.parentElement.id;\n        sheet_core_1.removeActiveSheetShadow(window.pluridScene.meta.previousActiveSheet, 'plurid-sheet-active-transform');\n        sheet_core_1.addActiveSheetShadow(window.pluridScene.meta.activeSheet, 'plurid-sheet-active-transform');\n    });\n    // pluridSelect.addEventListener(\"dblclick\", (event) => {\n    //     // console.log('dblclick', pluridSelect);\n    //     // console.log(pluridSelect.parentElement.parentElement.parentElement);\n    //     activePlurid.selected = pluridSelect.parentElement.parentElement.parentElement;\n    //     let activeRoot = document.getElementById(activePlurid.selected.id).parentElement;\n    //     let activeRoots = document.getElementById(activePlurid.selected.id).parentElement.parentElement;\n    //     // console.log(active);\n    //     activeRoot.style.transform = \"translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1)\";\n    //     activeRoots.style.transform = \"translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1)\";\n    // });\n}\nfunction goToParent(element) {\n    const pluridParent = element.getElementsByClassName(\"plurid-controls-parent\")[0];\n    const bridge = element.parentElement.parentElement.parentElement.children[0];\n    const scion = element.parentElement.parentElement.parentElement.children[1];\n    const controls = pluridParent.parentElement;\n    if (bridge.nodeName === \"PLURID-BRIDGE\") {\n        pluridParent.addEventListener('click', (event) => {\n            console.log('Plurid Parent');\n        });\n    }\n    else {\n        pluridParent.classList.add(\"plurid-button-disabled\");\n    }\n}\nfunction minimizeSelectedSheet(element) {\n    const pluridMinimize = element.getElementsByClassName(\"plurid-controls-minimize\")[0];\n    const pluridReduce = element.getElementsByClassName(\"plurid-controls-reduce-height\")[0];\n    pluridMinimize.addEventListener('click', (event) => {\n        const sheet = element.parentElement;\n        const sheetChildren = window.pluridScene.getChildrenBySheetId(sheet.id);\n        if (pluridReduce.classList.contains(\"plurid-button-active\")) {\n            pluridReduce.classList.remove(\"plurid-button-active\");\n        }\n        if (sheet.classList.contains(\"plurid-sheet-reduce-height\")) {\n            sheet.classList.remove(\"plurid-sheet-reduce-height\");\n            toggleChildren(sheetChildren);\n        }\n        sheet.classList.toggle(\"plurid-sheet-minimize\");\n        pluridMinimize.classList.toggle(\"plurid-button-active\");\n        toggleChildren(sheetChildren);\n    });\n}\nfunction reduceSelectedSheet(element) {\n    const pluridReduce = element.getElementsByClassName(\"plurid-controls-reduce-height\")[0];\n    const pluridMinimize = element.getElementsByClassName(\"plurid-controls-minimize\")[0];\n    pluridReduce.addEventListener('click', (event) => {\n        const sheet = element.parentElement;\n        const sheetChildren = window.pluridScene.getChildrenBySheetId(sheet.id);\n        let sheetHeight = window.getComputedStyle(sheet, null).getPropertyValue(\"height\");\n        sheetHeight = parseInt(sheetHeight, 0);\n        if (sheetHeight > 699 && sheetHeight > 60) {\n            if (sheet.classList.contains(\"plurid-sheet-minimize\")) {\n                sheet.classList.remove(\"plurid-sheet-minimize\");\n                toggleChildren(sheetChildren);\n            }\n            sheet.classList.toggle(\"plurid-sheet-reduce-height\");\n            pluridReduce.classList.toggle(\"plurid-button-active\");\n            toggleChildren(sheetChildren);\n        }\n        if (sheetHeight <= 60) {\n            pluridMinimize.classList.remove(\"plurid-button-active\");\n            if (sheet.classList.contains(\"plurid-sheet-minimize\")) {\n                sheet.classList.remove(\"plurid-sheet-minimize\");\n                toggleChildren(sheetChildren);\n            }\n            sheet.classList.add(\"plurid-sheet-reduce-height\");\n            pluridReduce.classList.add(\"plurid-button-active\");\n            toggleChildren(sheetChildren);\n        }\n    });\n}\n/**\n * Helper function to toggle show/hide of plurid branches.\n *\n * @param {Array} sheetChildren\n */\nfunction toggleChildren(sheetChildren) {\n    for (const child of sheetChildren) {\n        const branch = document.getElementById(child);\n        if (branch.style.display === \"none\") {\n            branch.style.display = \"block\";\n        }\n        else {\n            branch.style.display = \"none\";\n        }\n    }\n}\nfunction closePlurid(element) {\n    const pluridParentClose = element.getElementsByClassName(\"plurid-controls-close\")[0];\n    pluridParentClose.addEventListener(\"click\", (event) => {\n        const sheet = element.parentElement;\n        const sheetChildren = window.pluridScene.getChildrenBySheetId(sheet.id);\n        if (sheet.parentElement.nodeName === \"PLURID-ROOT\") {\n            const pluridRoot = sheet.parentElement;\n            pluridRoot.removeChild(sheet);\n            removeChildren(pluridRoot, sheetChildren);\n        }\n        else {\n            const pluridRoot = sheet.parentElement.parentElement.parentElement;\n            if (pluridRoot.nodeName === \"PLURID-ROOT\") {\n                const branch = sheet.parentElement.parentElement;\n                pluridRoot.removeChild(branch);\n                removeChildren(pluridRoot, sheetChildren);\n            }\n        }\n        window.pluridScene.meta.activePlurid = 'plurid-roots-1';\n    });\n}\n/**\n * Helper function to remove plurid branches.\n *\n * @param {HTMLElement} pluridRoot\n * @param {Array} sheetChildren\n */\nfunction removeChildren(pluridRoot, children) {\n    if (children) {\n        for (const child of children) {\n            const branch = document.getElementById(child);\n            if (branch) {\n                pluridRoot.removeChild(branch);\n            }\n        }\n    }\n}\nfunction reloadPlurid(element) {\n    const pluridReload = element.getElementsByClassName(\"plurid-controls-reload\")[0];\n    const sheet = element.parentElement;\n    const pluridSearchInput = element.getElementsByClassName(\"plurid-controls-url-input\")[0];\n    let url = pluridSearchInput.value;\n    if (!url) {\n        pluridReload.classList.add(\"plurid-button-disabled\");\n    }\n    pluridReload.addEventListener('click', (event) => {\n        url = pluridSearchInput.value;\n        if (url) {\n            pluridReload.classList.add(\"rotate-button\");\n            getPage(url, sheet, element);\n            setTimeout(() => {\n                pluridReload.classList.remove(\"rotate-button\");\n            }, 600);\n        }\n    });\n}\nfunction extendBridge(element) {\n    const bridgeExtend = element.getElementsByClassName(\"plurid-controls-extend\")[0];\n    const bridge = element.parentElement.parentElement.parentElement.children[0];\n    const scion = element.parentElement.parentElement.parentElement.children[1];\n    const controls = bridgeExtend.parentElement;\n    if (bridge.nodeName === \"PLURID-BRIDGE\") {\n        bridgeExtend.addEventListener('mousedown', () => {\n            document.body.style.cursor = \"-webkit-grabbing\";\n            document.body.style.cursor = \"grabbing\";\n            bridgeExtend.style.cursor = \"-webkit-grabbing\";\n            bridgeExtend.style.cursor = \"grabbing\";\n            window.addEventListener('mousemove', extend);\n            window.addEventListener('mouseup', () => {\n                document.body.style.cursor = \"default\";\n                bridgeExtend.style.cursor = \"-webkit-grab\";\n                bridgeExtend.style.cursor = \"grab\";\n                window.removeEventListener('mousemove', extend);\n            });\n        });\n    }\n    else {\n        bridgeExtend.classList.add(\"plurid-button-disabled\");\n    }\n    function extend(event) {\n        let width = parseInt(bridge.style.width, 0) || 100;\n        let right = parseInt(scion.style.right, 0) || -100;\n        // console.log('bridge.style.width', bridge.style.width);\n        // console.log('scion.style.right', scion.style.right);\n        // console.log(width);\n        width = width + event.movementX + \"px\";\n        right = right - event.movementX + \"px\";\n        if (parseInt(bridge.style.width, 0) <= 0) {\n            // console.log(parseInt(width));\n            // if (parseInt(width) > 0) {\n            bridge.style.width = \"100px\";\n            scion.style.right = \"-100px\";\n            // }\n        }\n        else {\n            bridge.style.width = width;\n            scion.style.right = right;\n        }\n        // TODO\n        // update <plurid-branch>es currently open\n        // with the appropriate length of the <plurid-bridge>\n    }\n}\nfunction isolatePlurid(element) {\n    const pluridIsolate = element.getElementsByClassName(\"plurid-controls-isolate\")[0];\n    pluridIsolate.addEventListener('click', (event) => {\n        console.log('Plurid Isolate');\n    });\n}\nfunction backPlurid(element) {\n    const pluridBack = element.getElementsByClassName(\"plurid-controls-back\")[0];\n    pluridBack.addEventListener('click', (event) => {\n        console.log('Plurid Back');\n    });\n}\nfunction forwardPlurid(element) {\n    const pluridForward = element.getElementsByClassName(\"plurid-controls-forward\")[0];\n    pluridForward.addEventListener('click', (event) => {\n        console.log('Plurid Forward');\n    });\n}\nfunction searchPlurid(element) {\n    const pluridSearch = element.getElementsByClassName(\"plurid-controls-search\")[0];\n    const pluridSearchInput = element.getElementsByClassName(\"plurid-controls-url-input\")[0];\n    const pluridCancelSearch = element.getElementsByClassName(\"plurid-controls-cancel\")[0];\n    const sheet = element.parentElement;\n    if (sheet.parentElement.nodeName === \"PLURID-ROOT\") {\n        const pluridRoot = sheet.parentElement;\n    }\n    else {\n        const pluridRoot = sheet.parentElement.parentElement.parentElement;\n        if (pluridRoot.nodeName === \"PLURID-ROOT\") {\n            const branch = sheet.parentElement.parentElement;\n            setSearchLink(branch.link, pluridSearchInput);\n        }\n    }\n    function setSearchLink(branchLink, _pluridSearchInput) {\n        const link = document.getElementById(branchLink);\n        let linkHref;\n        if (link.nodeName === \"A\") {\n            linkHref = link.href;\n        }\n        if (link.nodeName === \"PLURID-LINK\") {\n            linkHref = link.page;\n            linkHref = new URL(linkHref, window.location.href).href;\n        }\n        _pluridSearchInput.value = linkHref;\n        const pluridReload = element.getElementsByClassName(\"plurid-controls-reload\")[0];\n        pluridReload.classList.remove(\"plurid-sheet-controls-disabled\");\n    }\n    pluridSearch.addEventListener('click', (event) => {\n        search(pluridSearchInput.value, sheet);\n    });\n    pluridCancelSearch.addEventListener('click', (event) => {\n        clearSearch(pluridSearchInput);\n    });\n    pluridSearchInput.addEventListener('keydown', (event) => {\n        if (event.key === \"Escape\") {\n            clearSearch(pluridSearchInput);\n        }\n        if (event.key === \"Enter\") {\n            search(pluridSearchInput.value, sheet);\n        }\n    });\n    function clearSearch(searchInput) {\n        searchInput.value = \"\";\n        searchInput.focus();\n    }\n    function search(url, _sheet) {\n        if (!url) {\n            const message = \"Nothing to search for.\";\n            setControlsMessage(element, message);\n        }\n        else {\n            const sheetChildren = window.pluridScene.getChildrenBySheetId(_sheet.id);\n            if (_sheet.parentElement.nodeName === \"PLURID-ROOT\") {\n                const pluridRoot = _sheet.parentElement;\n                pluridRoot.removeChild(_sheet);\n                removeChildren(pluridRoot, sheetChildren);\n            }\n            else {\n                const pluridRoot = _sheet.parentElement.parentElement.parentElement;\n                if (pluridRoot.nodeName === \"PLURID-ROOT\") {\n                    const branch = _sheet.parentElement.parentElement;\n                    removeChildren(pluridRoot, sheetChildren);\n                }\n            }\n            getPage(url, _sheet, element);\n        }\n    }\n}\nfunction getPage(url, sheet, element) {\n    const sheetContent = sheet.getElementsByTagName('plurid-content')[0];\n    const xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(this.responseText, \"text/html\");\n            sheetContent.innerHTML = doc.body.innerHTML;\n        }\n        if (this.status === 404) {\n            const message = `Page not found.`;\n            setControlsMessage(element, message);\n        }\n    };\n    xhttp.open(\"GET\", url, true);\n    xhttp.setRequestHeader(\"Cache-Control\", \"no-cache\");\n    xhttp.setRequestHeader(\"Pragma\", \"no-cache\");\n    xhttp.send();\n}\nfunction extractRoot(element) {\n    const pluridExtract = element.getElementsByClassName(\"plurid-controls-extract\")[0];\n    pluridExtract.addEventListener('click', (event) => {\n        console.log('Plurid Root Extract');\n    });\n}\nfunction opacityPlurid(element) {\n    const pluridOpacity = element.getElementsByClassName(\"plurid-controls-opacity\")[0];\n    const sheet = element.parentElement;\n    pluridOpacity.addEventListener('click', (event) => {\n        // MAYBE\n        // type into the opacity button text\n        // if (event.shiftKey) {\n        //     pluridOpacity.setAttribute(\"contenteditable\", \"true\");\n        //     pluridOpacity.addEventListener('keydown', event => {\n        //         // console.log(event.key);\n        //         const isNumber = isFinite(event.key);\n        //         if (!isNumber) {\n        //             if (event.key != \"Backspace\"\n        //                 && event.key != \"Delete\"\n        //                 && event.key != \"Enter\") {\n        //                 event.preventDefault();\n        //             }\n        //         }\n        //         pluridOpacity.addEventListener('input', event => {\n        //             let opacity = pluridOpacity.innerText;\n        //             // console.log(opacity);\n        //             sheet.style.opacity = opacity / 100;\n        //         })\n        //         if (event.key == \"Enter\") {\n        //             pluridOpacity.setAttribute(\"contenteditable\", \"false\");\n        //             pluridOpacity.blur();\n        //         }\n        //     });\n        // } else {\n        setOpacity(event, sheet, pluridOpacity);\n        // }\n    });\n    function setOpacity(event, _sheet, _pluridOpacity) {\n        const opacity = parseInt(_pluridOpacity.innerText, 0);\n        if (opacity === 100) {\n            _pluridOpacity.innerText = 70;\n            _sheet.style.opacity = 0.7;\n        }\n        else if (opacity === 70) {\n            _pluridOpacity.innerText = 35;\n            _sheet.style.opacity = .35;\n        }\n        else {\n            _pluridOpacity.innerText = 100;\n            _sheet.style.opacity = 1;\n        }\n    }\n}\nfunction morePlurid(element) {\n    const pluridMore = element.getElementsByClassName(\"plurid-controls-more\")[0];\n    const pluridMoreContainer = element.getElementsByClassName(\"plurid-controls-more-container\")[0];\n    const sheet = element.parentElement;\n    pluridMore.addEventListener('click', (event) => {\n        if (pluridMoreContainer.style.display === \"\" ||\n            pluridMoreContainer.style.display === \"none\") {\n            pluridMoreContainer.style.display = \"block\";\n            pluridMore.classList.add(\"plurid-sheet-control-active\");\n        }\n        else {\n            pluridMoreContainer.style.display = \"none\";\n            pluridMore.classList.remove(\"plurid-sheet-control-active\");\n        }\n    });\n}\nfunction openCloseControls(element) {\n    const pluridControlsContent = element.getElementsByClassName(\"plurid-container-controls-content\")[0];\n    const pluridControlsOpenClose = element.getElementsByClassName(\"plurid-controls-open-close\")[0];\n    const pluridControlsOpenCloseCharacter = element.getElementsByClassName(\"plurid-controls-open-close-character\")[0];\n    let pluridControlsOpenCloseState = 1;\n    pluridControlsOpenCloseCharacter.addEventListener(\"click\", (event) => {\n        const parentPlurid = element.parentElement;\n        if (pluridControlsOpenCloseState === 1) {\n            parentPlurid.style.paddingTop = \"50px\";\n            pluridControlsContent.style.display = \"none\";\n            element.style.height = \"11px\";\n            pluridControlsOpenClose.style.bottom = \"3px\";\n            pluridControlsOpenCloseCharacter.innerHTML = \"&#9661;\";\n        }\n        if (pluridControlsOpenCloseState === 0) {\n            parentPlurid.style.paddingTop = \"80px\";\n            pluridControlsContent.style.display = \"inline-flex\";\n            pluridControlsOpenClose.style.bottom = \"2px\";\n            element.style.height = \"50px\";\n            pluridControlsOpenCloseCharacter.innerHTML = \"&#9651;\";\n        }\n        pluridControlsOpenCloseState = pluridControlsOpenCloseState ? 0 : 1;\n    });\n}\nfunction setControlsMessageClose(element) {\n    const pluridMessage = element.getElementsByClassName(\"plurid-controls-message\")[0];\n    const pluridMessageClose = element.getElementsByClassName(\"plurid-controls-message-close\")[0];\n    const pluridMessageContent = element.getElementsByClassName(\"plurid-controls-message-content\")[0];\n    pluridMessageClose.addEventListener(\"click\", (event) => {\n        pluridMessage.style.display = \"none\";\n        pluridMessageContent.innerHTML = \"\";\n    });\n}\nfunction setControlsMessage(element, message) {\n    const pluridMessage = element.getElementsByClassName(\"plurid-controls-message\")[0];\n    const pluridMessageContent = element.getElementsByClassName(\"plurid-controls-message-content\")[0];\n    pluridMessageContent.innerHTML = message;\n    pluridMessage.style.display = \"block\";\n    const timeout = 1250;\n    setTimeout(() => {\n        pluridMessage.style.display = \"none\";\n        pluridMessageContent.innerHTML = \"\";\n    }, timeout);\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/controls/controls-core.ts?");

/***/ }),

/***/ "./src/ts/source/elements/controls/controls-define.ts":
/*!************************************************************!*\
  !*** ./src/ts/source/elements/controls/controls-define.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst controls_core_1 = __webpack_require__(/*! ./controls-core */ \"./src/ts/source/elements/controls/controls-core.ts\");\nclass PluridControls extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        this.innerHTML = controls_core_1.contentControls();\n        controls_core_1.setControls(this);\n    }\n}\nfunction initControls() {\n    customElements.define('plurid-controls', PluridControls);\n}\nexports.initControls = initControls;\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/controls/controls-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/link/link-core.ts":
/*!**************************************************!*\
  !*** ./src/ts/source/elements/link/link-core.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction setLinkContent(element) {\n    if (element.innerHTML === \"\") {\n        element.innerHTML = '&#9624;'; // ▘ 'QUADRANT UPPER LEFT' (U+2598)\n        // element.innerHTML = '&#9612;';   // ▌ 'LEFT HALF BLOCK' (U+258C)\n        // element.innerHTML = '&#9614;';   // ▎ 'LEFT ONE QUARTER BLOCK' (U+258E)\n    }\n}\nexports.setLinkContent = setLinkContent;\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/link/link-core.ts?");

/***/ }),

/***/ "./src/ts/source/elements/link/link-define.ts":
/*!****************************************************!*\
  !*** ./src/ts/source/elements/link/link-define.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\nconst link_core_1 = __webpack_require__(/*! ./link-core */ \"./src/ts/source/elements/link/link-core.ts\");\nclass PluridLink extends HTMLElement {\n    constructor() {\n        super();\n        complex_1.setId(this, 'link');\n        link_core_1.setLinkContent(this);\n    }\n    get page() {\n        return this.getAttribute('page');\n    }\n    set page(newPage) {\n        this.setAttribute('page', newPage);\n    }\n    get samepage() {\n        switch (this.getAttribute('samepage')) {\n            case \"\":\n                return true;\n            case \"true\":\n                return true;\n            case \"false\":\n                return false;\n            default:\n                return false;\n        }\n    }\n    set samepage(newSamepage) {\n        this.setAttribute('samepage', newSamepage);\n    }\n    get active() {\n        switch (this.getAttribute('active')) {\n            case \"\":\n                return true;\n            case \"true\":\n                return true;\n            case \"false\":\n                return false;\n            default:\n                return false;\n        }\n    }\n    set active(newActive) {\n        this.setAttribute('active', newActive);\n    }\n    getNamedPage(pageName) {\n        const pluridPages = document.getElementsByTagName('plurid-page');\n        for (const pluridPage of pluridPages) {\n            if (pluridPage.name === pageName) {\n                return pluridPage;\n            }\n        }\n    }\n}\ncustomElements.define('plurid-link', PluridLink);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/link/link-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/options/options-core.ts":
/*!********************************************************!*\
  !*** ./src/ts/source/elements/options/options-core.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst plurid = __importStar(__webpack_require__(/*! ../../core/logic/transforms */ \"./src/ts/source/core/logic/transforms.ts\"));\nfunction renderOptions(element) {\n    const options = document.createElement(\"plurid-options\");\n    element.appendChild(options);\n}\nexports.renderOptions = renderOptions;\nfunction displayOptions(element) {\n    // element.addEventListener(\"mousemove\", event => {\n    //     function pathContains(element, path) {\n    //         let contains = false;\n    //         path.map(el => { el.nodeName === element ? contains = true : ''; });\n    //         return contains;\n    //     }\n    //     // cross-browsers eventPath\n    //     let eventPath = event.path || (event.composedPath && event.composedPath());\n    //     let containsOptions = pathContains('PLURID-OPTIONS', eventPath);\n    //     let cursorYLocation = event.pageY;\n    //     let containerHeight = element.clientHeight;\n    //     let optionsDisplayLimitOn = 80;\n    //     let optionsDisplayLimitOff = 80;\n    //     let optionsTag = element.getElementsByTagName(\"plurid-options\")[0];\n    //     if (cursorYLocation > (containerHeight - optionsDisplayLimitOn)) {\n    //         optionsTag.style.display = \"block\";\n    //     }\n    //     if (cursorYLocation < (containerHeight - optionsDisplayLimitOff) && !containsOptions){\n    //         optionsTag.style.display = \"none\";\n    //     }\n    // });\n}\nexports.displayOptions = displayOptions;\nfunction contentOptions() {\n    const content = ` <div class=\"plurid-container-options-container\">\n                        <div class=\"plurid-container-options-content\">\n                            <div class=\"plurid-container-options-group\">\n                                <div class=\"plurid-button plurid-button-icon plurid-container-rotate-left\">\n                                    &#x25c0&#xFE0E;\n                                </div>\n\n                                <span class=\"plurid-button plurid-button-icon plurid-container-rotate-up\">&#x25B2;</span>\n                                <p>Rotation</p>\n                                <span class=\"plurid-button plurid-button-icon plurid-container-rotate-down\">&#x25BC;</span>\n                                <span class=\"plurid-button plurid-button-icon plurid-container-rotate-right\">&#x25b6&#xFE0E;</span>\n                            </div>\n\n                            <div class=\"plurid-container-options-group\">\n                                <span class=\"plurid-button plurid-button-icon plurid-container-translate-left\">&#x25c0&#xFE0E;</span>\n                                <span class=\"plurid-button plurid-button-icon plurid-container-translate-up\">&#x25B2;</span>\n                                <p>Translation</p>\n                                <span class=\"plurid-button plurid-button-icon plurid-container-translate-down\">&#x25BC;</span>\n                                <span class=\"plurid-button plurid-button-icon plurid-container-translate-right\">&#x25b6&#xFE0E;</span>\n                            </div>\n\n                            <div class=\"plurid-container-options-group\">\n                                <span class=\"plurid-button plurid-button-icon  plurid-container-scale-up\">&#x25B2;</span>\n                                <p>Scale</p>\n                                <span class=\"plurid-button plurid-button-icon  plurid-container-scale-down\">&#x25BC;</span>\n                            </div>\n\n                            <div class=\"plurid-container-options-group\">\n                                <span class=\"plurid-button plurid-button-icon plurid-container-button-center-everything\">\n                                    &#8281;\n                                </span>\n                            </div>\n\n                            <div class=\"plurid-container-options-group\">\n                                <span class=\"plurid-button plurid-button-icon plurid-container-button-add-root\">\n                                    &#10746;\n                                </span>\n                            </div>\n\n                            <div class=\"plurid-container-options-group\">\n                                <span class=\"plurid-button plurid-button-icon plurid-container-button-gyroscope\">\n                                    G\n                                </span>\n                            </div>\n\n                            <div class=\"plurid-container-options-group\">\n                                <span class=\"plurid-button plurid-button-icon plurid-container-button-more\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 622.51 130.1\">\n                                        <defs></defs>\n                                        <title>More</title>\n                                        <g id=\"Layer_2\" data-name=\"Layer 2\">\n                                            <g id=\"More\">\n                                                <rect class=\"plurid-button-icon-svg\" x=\"20.2\" y=\"20.2\" width=\"89.69\" height=\"89.69\"/>\n                                                <path class=\"plurid-button-icon-svg\" d=\"M130.1,130.1H0V0H130.1ZM40.4,89.69H89.69V40.4H40.4Z\"/>\n                                                <rect class=\"plurid-button-icon-svg\" x=\"266.21\" y=\"20.2\" width=\"89.69\" height=\"89.69\"/>\n                                                <path class=\"plurid-button-icon-svg\" d=\"M376.11,130.1H246V0h130.1Zm-89.7-40.41H335.7V40.4H286.41Z\"/>\n                                                <rect class=\"plurid-button-icon-svg\" x=\"512.62\" y=\"20.2\" width=\"89.69\" height=\"89.69\"/><path class=\"plurid-button-icon-svg\" d=\"M622.51,130.1H492.42V0H622.51ZM532.82,89.69h49.29V40.4H532.82Z\"/>\n                                            </g>\n                                        </g>\n                                    </svg>\n                                </span>\n                            </div>\n\n                            <div class=\"plurid-container-options-more\">\n                                <div class=\"plurid-container-options-more-group-transforms\">\n                                    <div class=\"plurid-button\">\n                                        <!-- <label class=\"plurid-container-options-group-more plurid-controls-more-checkmark-container\">\n                                            <span class=\"plurid-controls-more-container-text\">\n                                                Lock Rotation X\n                                            </span>\n                                            <span class=\"plurid-controls-more-container-shortcut\">\n                                                <input type=\"checkbox\">\n                                                <span class=\"plurid-controls-more-checkmark\"></span>\n                                            </span>\n                                        </label> -->\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-lock-rotation-x\">\n                                        <p>Lock Rotation X</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-lock-rotation-y\">\n                                        <p>Lock Rotation Y</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-scroll-translate\">\n                                        <p>Use Scroll to Translate</p>\n                                        <input type=\"checkbox\" class=\"plurid-container-use-scroll\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-lock-translation-x\">\n                                        <p>Lock Translation X</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-lock-translation-y\">\n                                        <p>Lock Translation Y</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-transform-sensitivity\">\n                                        <p>Transform Sensitivity</p>\n                                        <input type=\"text\">\n                                        <input type=\"range\">\n                                    </div>\n                                </div>\n\n                                <hr>\n\n                                <div class=\"plurid-container-options-more-group-colors\">\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-container-background\">\n                                        <p>Container Background</p>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-container-background-gradient\">\n                                        <p>Radial Background Gradient (performance intensive)</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-general-theme\">\n                                        <p>General Theme</p>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                        <span class=\"plurid-container-button plurid-container-color\"></span>\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-shadows\">\n                                        <p>Shadows (performance intensive)</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-reflections\">\n                                        <p>Reflections (performance intensive)</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n                                </div>\n\n                                <hr>\n\n                                <div class=\"plurid-container-options-more-group-opacity\">\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-opacity-after-click\">\n                                        <p>Parent Opacity After Click on Link</p>\n                                        <input type=\"text\">\n                                        <input type=\"range\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-opacity-after-doubleclick\">\n                                        <p>General Opacity After Double-Click on Select</p>\n                                        <input type=\"text\">\n                                        <input type=\"range\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-perspective\">\n                                        <p>Perspective</p>\n                                        <input type=\"text\">\n                                        <input type=\"range\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-link-click-transform\">\n                                        <p>Click on Link Transforms to Normal View</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n\n                                    <div class=\"plurid-container-options-group-more plurid-container-more-link-click-transform\">\n                                        <p>Responsive Sheet Width</p>\n                                        <input type=\"checkbox\">\n                                    </div>\n                                </div>\n\n                                <hr>\n\n                                <div class=\"plurid-container-options-group-more plurid-container-more-shortcuts\">\n                                    <p class=\"plurid-container-link-expand plurid-container-shortcuts-button\">Shortcuts</p>\n                                </div>\n                                <div class=\"plurid-container-options-group-more plurid-container-more-always-show-options\">\n                                    <p class=\"plurid-container-link-expand \">Always Show Options Bar</p>\n                                    <input type=\"checkbox\">\n                                </div>\n                                <div class=\"plurid-container-options-group-more plurid-container-more-show-viewcube\">\n                                    <p class=\"plurid-container-link-expand \">Show Viewcube</p>\n                                    <input type=\"checkbox\">\n                                </div>\n                                <div class=\"plurid-container-options-group-more plurid-container-more-carve-design\">\n                                    <p class=\"plurid-container-link-expand \">Carve Design</p>\n                                    <input type=\"checkbox\">\n                                </div>\n                                <div class=\"plurid-container-options-group-more plurid-container-more-reset\">\n                                    <p class=\"plurid-container-link-expand \">Reset to Default</p>\n                                </div>\n                            </div>\n\n                            <div class=\"plurid-container-options-shortcuts\">\n                                <div class=\"plurid-container-options-group-more\">\n                                    <p>Hold Button and Move Pointer:</p>\n                                </div>\n                                <div class=\"plurid-container-options-group-more\">\n                                    <p>Shift for Rotation</p>\n                                </div>\n                                <div class=\"plurid-container-options-group-more\">\n                                    <p>Alt/Option for Translation</p>\n                                </div>\n                                <div class=\"plurid-container-options-group-more\">\n                                    <p>Control/Command for Scale</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>`;\n    return content;\n}\nexports.contentOptions = contentOptions;\nfunction setButtons(container) {\n    transformButtons(container);\n    centerEverything(container);\n    addAnotherRoot(container);\n    moreOptions(container);\n    lockTransforms(container);\n    scrollTransform(container);\n    transformSensitivity(container);\n    containerBackground(container);\n    generalTheme(container);\n    linkTransformNormal(container);\n    parentOpacityAfterClick(container);\n    generalOpacityAfterDoubleClick(container);\n    shortcuts(container);\n    alwaysShowOptions(container);\n    resetDefault(container);\n}\nexports.setButtons = setButtons;\nfunction transformButtons(container) {\n    function setTransformButton(_transformPlurid, _container, type, direction) {\n        const button = _container.getElementsByClassName(`plurid-container-${type}-${direction}`)[0];\n        button.addEventListener('click', (event) => {\n            _transformPlurid = window.pluridScene.meta.activePlurid\n                ? _container.querySelector(`#${window.pluridScene.meta.activePlurid}`)\n                : _container.getElementsByTagName(\"plurid-roots\")[0];\n            if (type === 'rotate') {\n                plurid.rotatePlurid(event, _transformPlurid, direction);\n            }\n            if (type === 'translate') {\n                plurid.translatePlurid(event, _transformPlurid, direction);\n            }\n            if (type === 'scale') {\n                plurid.scalePlurid(event, _transformPlurid, direction);\n            }\n        });\n        let timer;\n        const rotatePlurid = (event, _direction) => {\n            plurid.rotatePlurid(event, _transformPlurid, _direction);\n            timer = setTimeout(rotatePlurid, 35, event, _direction);\n        };\n        const translatePlurid = (event, _direction) => {\n            plurid.translatePlurid(event, _transformPlurid, _direction);\n            timer = setTimeout(translatePlurid, 25, event, _direction);\n        };\n        const scalePlurid = (event, _direction) => {\n            plurid.scalePlurid(event, _transformPlurid, _direction);\n            timer = setTimeout(scalePlurid, 35, event, _direction);\n        };\n        button.addEventListener(\"mousedown\", (event) => {\n            _transformPlurid = window.pluridScene.meta.activePlurid ? container.querySelector(`#${window.pluridScene.meta.activePlurid}`) : container.getElementsByTagName(\"plurid-roots\")[0];\n            if (type === 'rotate') {\n                timer = setTimeout(rotatePlurid, 35, event, direction);\n            }\n            if (type === 'translate') {\n                timer = setTimeout(translatePlurid, 25, event, direction);\n            }\n            if (type === 'scale') {\n                timer = setTimeout(scalePlurid, 35, event, direction);\n            }\n        });\n        button.addEventListener(\"mouseup\", (event) => {\n            clearTimeout(timer);\n        });\n    }\n    const transformPlurid = window.pluridScene.meta.activePlurid\n        ? container.getElementById(window.pluridScene.meta.activePlurid)\n        : container.getElementsByTagName(\"plurid-roots\")[0];\n    const _transformButtons = [\n        {\n            type: \"rotate\",\n            direction: \"up\",\n        },\n        {\n            type: \"rotate\",\n            direction: \"down\",\n        },\n        {\n            type: \"rotate\",\n            direction: \"left\",\n        },\n        {\n            type: \"rotate\",\n            direction: \"right\",\n        },\n        {\n            type: \"translate\",\n            direction: \"up\",\n        },\n        {\n            type: \"translate\",\n            direction: \"down\",\n        },\n        {\n            type: \"translate\",\n            direction: \"left\",\n        },\n        {\n            type: \"translate\",\n            direction: \"right\",\n        },\n        {\n            type: \"scale\",\n            direction: \"up\",\n        },\n        {\n            type: \"scale\",\n            direction: \"down\",\n        },\n    ];\n    _transformButtons.map((button) => {\n        setTransformButton(transformPlurid, container, button.type, button.direction);\n    });\n}\nfunction centerEverything(container) {\n    const centerEverythingButton = container.getElementsByClassName('plurid-container-button-center-everything')[0];\n    centerEverythingButton.addEventListener('click', (event) => {\n        console.log('center everything');\n    });\n}\nfunction addAnotherRoot(container) {\n    const addAnotherRootButton = container.getElementsByClassName('plurid-container-button-add-root')[0];\n    addAnotherRootButton.addEventListener('click', (event) => {\n        // get extremities of the current pluridScene and add to the right/left\n        if (event.shiftKey) {\n            console.log('add root left');\n        }\n        else {\n            console.log('add root right');\n        }\n    });\n}\nfunction moreOptions(container) {\n    const moreButton = container.getElementsByClassName('plurid-container-button-more')[0];\n    const moreContainer = container.getElementsByClassName('plurid-container-options-more')[0];\n    moreButton.addEventListener('click', (event) => {\n        if (moreContainer.style.display === \"\"\n            || moreContainer.style.display === \"none\") {\n            moreButton.classList.add(\"plurid-sheet-control-active\");\n            moreContainer.style.display = \"block\";\n        }\n        else {\n            moreButton.classList.remove(\"plurid-sheet-control-active\");\n            moreContainer.style.display = \"none\";\n        }\n    });\n}\nfunction lockTransforms(container) {\n    function setLocks(type, axis) {\n        const button = container.getElementsByClassName(`plurid-container-more-lock-${type}-${axis}`)[0];\n        button.addEventListener('click', (event) => {\n            console.log('lock', type, axis);\n        });\n    }\n    const locks = [\n        {\n            type: \"rotation\",\n            axis: \"x\",\n        },\n        {\n            type: \"rotation\",\n            axis: \"y\",\n        },\n        {\n            type: \"translation\",\n            axis: \"x\",\n        },\n        {\n            type: \"translation\",\n            axis: \"y\",\n        },\n    ];\n    locks.map((button) => { setLocks(button.type, button.axis); });\n}\nfunction scrollTransform(container) {\n    const button = container.getElementsByClassName('plurid-container-more-scroll-translate')[0];\n    button.addEventListener('click', (event) => {\n        console.log('scroll transform');\n    });\n}\nfunction transformSensitivity(container) {\n    // console.log('a');\n}\nfunction containerBackground(container) {\n    const button = container.getElementsByClassName('plurid-container-more-container-background')[0];\n    button.addEventListener('click', (event) => {\n        console.log('change container background');\n    });\n}\nfunction generalTheme(container) {\n    const button = container.getElementsByClassName('plurid-container-more-general-theme')[0];\n    button.addEventListener('click', (event) => {\n        const bodyClassList = document.body.classList;\n        for (const bodyClass of bodyClassList) {\n            if (bodyClass === \"plurid-theme-light\") {\n                bodyClassList.add('plurid-theme-night');\n                bodyClassList.remove('plurid-theme-light');\n            }\n            if (bodyClass === \"plurid-theme-night\") {\n                bodyClassList.add('plurid-theme-dusk');\n                bodyClassList.remove('plurid-theme-night');\n            }\n            if (bodyClass === \"plurid-theme-dusk\") {\n                bodyClassList.add('plurid-theme-dawn');\n                bodyClassList.remove('plurid-theme-dusk');\n            }\n            if (bodyClass === \"plurid-theme-dawn\") {\n                bodyClassList.add('plurid-theme-light');\n                bodyClassList.remove('plurid-theme-dawn');\n            }\n        }\n    });\n}\nfunction linkTransformNormal(container) {\n    const button = container.getElementsByClassName('plurid-container-more-link-click-transform')[0];\n    button.addEventListener('click', (event) => {\n        console.log('linkTransformNormal');\n    });\n}\nfunction parentOpacityAfterClick(container) {\n    // console.log('a');\n}\nfunction generalOpacityAfterDoubleClick(container) {\n    // console.log('a');\n}\nfunction shortcuts(container) {\n    // console.log('a');\n}\nfunction alwaysShowOptions(container) {\n    const button = container.getElementsByClassName('plurid-container-more-always-show-options')[0];\n    button.addEventListener('click', (event) => {\n        console.log('alwaysShowOptions');\n    });\n}\nfunction resetDefault(container) {\n    // console.log('a');\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/options/options-core.ts?");

/***/ }),

/***/ "./src/ts/source/elements/options/options-define.ts":
/*!**********************************************************!*\
  !*** ./src/ts/source/elements/options/options-define.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\nconst options_core_1 = __webpack_require__(/*! ./options-core */ \"./src/ts/source/elements/options/options-core.ts\");\nfunction initOptions(container) {\n    // TO DO\n    // define only if multiple plurid-containers\n    // if (container.id == 'plurid-container-1') {\n    customElements.define('plurid-options', PluridOptions);\n    // }\n    options_core_1.renderOptions(container);\n    options_core_1.displayOptions(container);\n    options_core_1.setButtons(container);\n}\nexports.initOptions = initOptions;\nclass PluridOptions extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        complex_1.setId(this, 'options');\n        this.innerHTML = options_core_1.contentOptions();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/options/options-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/page/page-define.ts":
/*!****************************************************!*\
  !*** ./src/ts/source/elements/page/page-define.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// import { setLink } from \"./page-core\";\nclass PluridPage extends HTMLElement {\n    constructor() {\n        super();\n        // Count pages from the html document\n        window.pluridScene.meta.pages++;\n        const pageNo = window.pluridScene.meta.pages;\n        // Set id based on page count\n        // e.g. plurid-page-23\n        this.id = `plurid-page-${pageNo}`;\n        const pageId = this.id;\n        // Establish if the current plurid-page is a root page\n        const nodeName = this.parentNode.nodeName;\n        if (nodeName === 'BODY' || nodeName === 'PLURID-CONTAINER') {\n            window.pluridScene.meta.rootPages.push(pageId);\n        }\n    }\n    // connectedCallback() {\n    //     // console.log(this);\n    //     // setLink(this);\n    // }\n    get name() {\n        return this.getAttribute('name');\n    }\n    set name(newName) {\n        this.setAttribute('name', newName);\n    }\n    get title() {\n        return this.getAttribute('title');\n    }\n    set title(newTitle) {\n        this.setAttribute('title', newTitle);\n    }\n}\ncustomElements.define('plurid-page', PluridPage);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/page/page-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/root/root-define.ts":
/*!****************************************************!*\
  !*** ./src/ts/source/elements/root/root-define.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\nclass PluridRoots extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        complex_1.setId(this, 'roots');\n        if (this.id == 'plurid-roots-1') {\n            window.pluridScene.meta.activePlurid = 'plurid-roots-1';\n        }\n    }\n}\ncustomElements.define('plurid-roots', PluridRoots);\nclass PluridRoot extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        complex_1.setId(this, 'root');\n    }\n}\ncustomElements.define('plurid-root', PluridRoot);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/root/root-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/scion/scion-define.ts":
/*!******************************************************!*\
  !*** ./src/ts/source/elements/scion/scion-define.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nclass PluridScion extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-scion', PluridScion);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/scion/scion-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/shadow/shadow-define.ts":
/*!********************************************************!*\
  !*** ./src/ts/source/elements/shadow/shadow-define.ts ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\nclass PluridShadow extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        const sheetIdNumber = complex_1.setId(this, 'shadow');\n    }\n    get sheet() {\n        return this.getAttribute('sheet');\n    }\n    set sheet(newName) {\n        this.setAttribute('sheet', newName);\n    }\n}\ncustomElements.define('plurid-shadow', PluridShadow);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/shadow/shadow-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/sheet/sheet-core.ts":
/*!****************************************************!*\
  !*** ./src/ts/source/elements/sheet/sheet-core.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reflections_1 = __webpack_require__(/*! ../../core/logic/reflections */ \"./src/ts/source/core/logic/reflections.ts\");\n// import { setShadows } from '../../core/logic/shadows';\nconst transcore = __importStar(__webpack_require__(/*! ../../core/logic/transforms-core */ \"./src/ts/source/core/logic/transforms-core.ts\"));\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\n/**\n * Inserts newNode after the referenceNode.\n *\n * @param {HTMLElement} newNode\n * @param {HTMLElement} referenceNode\n */\nfunction insertAfter(newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n/**\n * Checks recursively if the parents of the given pluridElement\n * have the nodeName 'PLURID-PAGE'.\n *\n * @param {object} pluridElement            Given <plurid-page> element.\n * @return {boolean}                        True if pluridElement should be a <plurid-root>.\n */\nfunction checkPluridParent(pluridElement) {\n    if (pluridElement.nodeName !== 'HTML') {\n        if (pluridElement.parentElement.nodeName === 'PLURID-PAGE') {\n            // console.log('is NOT a plurid root');\n            return false;\n        }\n        else {\n            return checkPluridParent(pluridElement.parentElement);\n        }\n    }\n    else {\n        // console.log('is a plurid-root');\n        return true;\n    }\n}\n/**\n * Checks recursively if the parents of the given pluridElement\n * are the specifiedParent.\n *\n * @param {string} specifiedParent          HTMLElement.nodeName for a parent of the pluridElement.\n * @param {HTMLElement} pluridElement       plurid HTMLElement.\n * @return {HTMLElement}                    The specified parent element.\n */\nfunction getSpecifiedParent(pluridElement, specifiedParent) {\n    if (pluridElement.nodeName !== 'HTML') {\n        if (pluridElement.parentElement.nodeName === specifiedParent) {\n            return pluridElement.parentElement;\n        }\n        else {\n            return getSpecifiedParent(pluridElement.parentElement, specifiedParent);\n        }\n    }\n}\nexports.getSpecifiedParent = getSpecifiedParent;\n/**\n * Search recursively for children of children,\n * check if id matches,\n * push the sceneObject where it matches.\n *\n * @param {Array} childrenArray\n * @param {Object} sceneObject\n */\nfunction pushChildren(childrenArray, sceneObject) {\n    for (const child of childrenArray) {\n        if (child.branchId === sceneObject.linkParentId) {\n            child.children.push(sceneObject);\n        }\n        else {\n            pushChildren(child.children, sceneObject);\n        }\n    }\n}\n/**\n * Sends the XHR request given on the pluridLink page/href,\n * creates the plurid structure from the response,\n * renders the plurid element\n *\n *\n * @param {HTMLElement} pluridLink       plurid HTMLElement.\n */\nfunction setPluridLinks(pluridLink) {\n    const xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n        if (this.readyState === 4 && this.status === 200) {\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(this.responseText, \"text/html\");\n            const newBranch = document.createElement(\"plurid-branch\");\n            newBranch.innerHTML = `\n                                    <plurid-bridge></plurid-bridge>\n\n                                    <plurid-scion>\n                                        <plurid-sheet>\n                                            <plurid-content>\n                                                ${doc.body.innerHTML}\n                                                </plurid-content>\n                                        </plurid-sheet>\n                                    </plurid-scion>\n                                `;\n            newBranch.link = pluridLink.id;\n            complex_1.setId(newBranch, 'branch');\n            const right = pluridLink.offsetLeft + pluridLink.offsetWidth;\n            const top = pluridLink.offsetTop;\n            // console.log('pluridLink right -- X', right);\n            // console.log('pluridLink top ---- Y', top);\n            const pluridRoot = getSpecifiedParent(pluridLink, 'PLURID-ROOT');\n            const pluridSheet = getSpecifiedParent(pluridLink, 'PLURID-SHEET');\n            const pluridBranch = getSpecifiedParent(pluridLink, 'PLURID-BRANCH');\n            // console.log('link', pluridLink);\n            // console.log('root', pluridRoot);\n            // console.log('sheet', pluridSheet);\n            // console.log('branch', pluridBranch);\n            const angleDeg = 90;\n            let angleBranch;\n            let branchBridge;\n            let bridgeWidth;\n            if (pluridBranch) {\n                angleBranch = transcore.getTransformRotate(pluridBranch).rotateY;\n                angleBranch = angleBranch * 180 / Math.PI;\n                branchBridge = pluridBranch.children[0];\n                bridgeWidth = parseInt(branchBridge.style.width, 0) || 100;\n            }\n            // console.log(angleBranch);\n            const linkParentId = pluridBranch ? pluridBranch.id : pluridSheet.id;\n            // console.log(linkParentId, 'is the parent of', newBranch.id);\n            const parentBranch = window.pluridScene.getBranchById(linkParentId);\n            // console.log('the parentBranch is ', parentBranch);\n            // console.log(bridgeWidth);\n            const bridgeLength = bridgeWidth || 100;\n            let parentAngleY = parentBranch ? parentBranch.coordinates.angleY : 0;\n            // console.log('parentAngleY % 360', parentAngleY % 360)\n            parentAngleY = parentAngleY % 360;\n            // console.log('parentAngleY', parentAngleY)\n            const quadrant = getQuadrant(parentAngleY);\n            const quadrantCoefficients = getQuadrantCoefficients(quadrant);\n            const quadrantCoefX = quadrantCoefficients.X;\n            const quadrantCoefZ = quadrantCoefficients.Z;\n            // console.log('parent quadrant', quadrant);\n            // console.log('quadrantCoefX', quadrantCoefX);\n            // console.log('quadrantCoefZ', quadrantCoefZ);\n            const rotXbranch = angleDeg;\n            let prevLinkX;\n            let prevLinkY;\n            let prevTransX;\n            let prevTransY;\n            let prevTransZ;\n            if (parentBranch) {\n                // console.log('parentBranch', parentBranch);\n                prevLinkX = parentBranch.coordinates.linkX;\n                prevLinkY = parentBranch.coordinates.linkY;\n                prevTransX = parentBranch.coordinates.transX;\n                prevTransY = parentBranch.coordinates.transY ? parentBranch.coordinates.transY : parentBranch.coordinates.linkY;\n                prevTransZ = parentBranch.coordinates.transZ;\n            }\n            const clickTransX = right;\n            const clickTransY = top;\n            // console.log('prevTransX', prevTransX);\n            // console.log('prevTransY', prevTransY);\n            // console.log('prevTransZ', prevTransZ);\n            // console.log('clickTransX', clickTransX);\n            // console.log('clickTransY', clickTransY);\n            const path = generatePath(newBranch.id, linkParentId);\n            // console.log('path', path);\n            const translationData = {\n                prevLinkX,\n                prevLinkY,\n                prevTransX,\n                prevTransY,\n                prevTransZ,\n                clickTransX,\n                clickTransY,\n                bridgeLength,\n                quadrant,\n                quadrantCoefX,\n                quadrantCoefZ,\n                rotXbranch,\n                path,\n            };\n            const translations = getTranslations(translationData);\n            const transX = translations.X;\n            const transY = translations.Y;\n            const transZ = translations.Z;\n            // console.log('transX', transX);\n            // console.log('transY', transY);\n            // console.log('transZ', transZ);\n            // console.log('-----');\n            if (angleBranch !== undefined) {\n                angleBranch = angleBranch + 90;\n                newBranch.style.transform = `translateX(${transX}px) translateY(${transY}px) translateZ(${transZ}px) rotateX(0deg) rotateY(${angleBranch}deg) rotateZ(0deg) scale(1)`;\n            }\n            else {\n                newBranch.style.transform = `translateX(${right}px) translateY(${top}px) translateZ(0px) rotateX(0deg) rotateY(${angleDeg}deg) rotateZ(0deg) scale(1)`;\n            }\n            const lastChild = pluridRoot.lastChild;\n            insertAfter(newBranch, lastChild);\n            const angleRotY = angleBranch ? angleBranch : angleDeg;\n            const branchSheet = newBranch.getElementsByTagName('plurid-sheet')[0];\n            // let pluridShadow = document.createElement('plurid-shadow');\n            // lastChild = pluridRoot.lastChild;\n            // insertAfter(pluridShadow, lastChild);\n            // pluridShadow.sheet = branchSheet.id;\n            // // console.log('--------');\n            // // console.log(branchSheet.offsetHeight);\n            const computedShadowHeight = 500;\n            // pluridShadow.style.height = computedShadowHeight + \"px\";\n            const branchSheetHeight = branchSheet.offsetHeight;\n            const branchSheetWidth = branchSheet.offsetWidth;\n            // // console.log('branchSheetWidth', branchSheetWidth);\n            // pluridShadow.style.width = branchSheetWidth + \"px\";\n            const ground = window.pluridScene.meta.ground;\n            // console.log(ground);\n            // if (branchSheetHeight > ground) {\n            //     pluridScene.meta.ground = branchSheetHeight - computedShadowHeight;\n            //     ground = pluridScene.meta.ground;\n            // }\n            // pluridShadow.style.transform = `translateX(0px) translateY(0px) translateZ(0px) rotateX(90deg) rotateY(0deg) rotateZ(90deg) scale(1) skew(0deg)`;\n            const reflectionY = transY ? transY : top;\n            const reflections = window.pluridScene.meta.reflections;\n            if (reflections === true) {\n                reflections_1.setReflections(branchSheet, branchSheetHeight, ground, reflectionY);\n            }\n            const sceneObject = {\n                linkParentId,\n                link: newBranch.link,\n                branchId: newBranch.id,\n                sheetId: branchSheet.id,\n                coordinates: {\n                    prevLinkX,\n                    prevLinkY,\n                    linkX: right,\n                    linkY: top,\n                    prevTransX,\n                    prevTransY,\n                    prevTransZ,\n                    transX,\n                    transY,\n                    transZ,\n                    angleY: angleRotY,\n                },\n                children: [],\n                path,\n            };\n            for (const rootScene of window.pluridScene.content) {\n                if (rootScene.id === pluridRoot.id) {\n                    if (sceneObject.linkParentId.includes('branch')) {\n                        pushChildren(rootScene.children, sceneObject);\n                    }\n                    else {\n                        rootScene.children.push(sceneObject);\n                    }\n                }\n            }\n        }\n    };\n    let href = '';\n    if (pluridLink.page) {\n        href = pluridLink.page;\n    }\n    else {\n        href = pluridLink.href;\n    }\n    xhttp.open(\"GET\", href, true);\n    xhttp.setRequestHeader(\"Cache-Control\", \"no-cache\");\n    xhttp.setRequestHeader(\"Pragma\", \"no-cache\");\n    xhttp.send();\n}\n/**\n * For all the anchorTags <a> and pluridLinks <plurid-link>\n * adds event listeners on click to generate the plurid structure.\n */\nfunction setLink(pluridPage) {\n    const pluridPageId = pluridPage.id;\n    const pageAnchorTags = document.querySelectorAll(`#${pluridPageId} a`);\n    const pagePluridLinks = document.querySelectorAll(`#${pluridPageId} plurid-link`);\n    for (const anchorTag of pageAnchorTags) {\n        anchorTag.addEventListener('click', (event) => {\n            event.preventDefault();\n            if (!checkBranchExistence(anchorTag.id)) {\n                setPluridLinks(anchorTag);\n            }\n            else {\n                // TODO\n                // translate into view of the new plurid-branch\n                // console.log('anchorTag already set');\n            }\n        });\n    }\n    for (const pluridLink of pagePluridLinks) {\n        pluridLink.addEventListener('click', () => {\n            if (!checkBranchExistence(pluridLink.id)) {\n                setPluridLinks(pluridLink);\n            }\n            else {\n                // TODO\n                // translate into view of the new plurid-branch\n                // console.log('pluridLink already set');\n            }\n        });\n    }\n}\nexports.setLink = setLink;\n/**\n * Checks recursively if the parents of the given pluridElement\n * are the specifiedParent.\n *\n * @param {string} specifiedParent          HTMLElement.nodeName for a parent of the pluridElement.\n * @param {HTMLElement} pluridElement       plurid HTMLElement.\n * @return {HTMLElement}                    The specified parent element.\n */\nfunction checkBranchExistence(linkId) {\n    const branches = document.getElementsByTagName('plurid-branch');\n    let count = 0;\n    for (const branch of branches) {\n        if (branch.link === linkId) {\n            count++;\n            if (count >= 1) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**\n * Sets the id on all the <a> anchor tags within a certain <plurid-sheet>\n *\n * @param {string} sheetId          Id of a <plurid-sheet>\n */\nfunction setAnchorTagsId(sheetId) {\n    const pageAnchorTags = document.querySelectorAll(`#${sheetId} a`);\n    for (const anchorTag of pageAnchorTags) {\n        complex_1.setId(anchorTag, 'anchor');\n    }\n}\nexports.setAnchorTagsId = setAnchorTagsId;\n/**\n * Pushes the current <plurid-sheet> to pluridScene global\n * if element is direct child of <plurid-root>.\n *\n * @param {HTMLElement} pluridSheet\n */\nfunction setPluridRoots(pluridSheet) {\n    if (pluridSheet.parentElement.nodeName === 'PLURID-ROOT') {\n        const sheet = {\n            id: pluridSheet.parentElement.id,\n            sheetId: pluridSheet.id,\n            meta: [],\n            children: [],\n        };\n        window.pluridScene.meta.rootSheets.push(pluridSheet.id);\n        window.pluridScene.content.push(sheet);\n    }\n}\nexports.setPluridRoots = setPluridRoots;\n/**\n * Based on angle returns the specific quadrant.\n *\n * @param {number} angle        Angle value between 0 and 360 degrees.\n * @return {string}\n */\nfunction getQuadrant(angle) {\n    let quadrant;\n    if (angle >= 0 && angle <= 90) {\n        return quadrant = 'quadrantA';\n    }\n    if (angle > 90 && angle <= 180) {\n        return quadrant = 'quadrantB';\n    }\n    if (angle > 180 && angle <= 270) {\n        return quadrant = 'quadrantC';\n    }\n    if (angle > 270 && angle <= 360) {\n        return quadrant = 'quadrantD';\n    }\n}\n/**\n * Based on quadrant returns the specific quadrant coefficients.\n *\n * @param {string} quadrant\n * @return {object}\n */\nfunction getQuadrantCoefficients(quadrant) {\n    let quadrantCoefficientX;\n    let quadrantCoefficientZ;\n    switch (quadrant) {\n        case 'quadrantA':\n            quadrantCoefficientX = 1;\n            quadrantCoefficientZ = -1;\n            break;\n        case 'quadrantB':\n            quadrantCoefficientX = 1;\n            quadrantCoefficientZ = -1;\n            break;\n        case 'quadrantC':\n            quadrantCoefficientX = 1;\n            quadrantCoefficientZ = -1;\n            break;\n        case 'quadrantD':\n            quadrantCoefficientX = 1;\n            quadrantCoefficientZ = -1;\n            break;\n    }\n    return {\n        X: quadrantCoefficientX,\n        Z: quadrantCoefficientZ,\n    };\n}\n/**\n * Based on the parent branch with the linkParentId\n * of the branch with currentId, obtain the path\n * to the current branch.\n *\n * @param {string} currentId\n * @param {string} linkParentId\n * @return {Array}\n */\nfunction generatePath(currentId, linkParentId) {\n    const parent = window.pluridScene.getBranchById(linkParentId);\n    if (parent) {\n        const path = [];\n        const parentPath = parent.path;\n        for (const pathElement of parentPath) {\n            const pluridElement = window.pluridScene.getBranchById(pathElement);\n            if (pluridElement.linkParentId !== linkParentId) {\n                path.push(pathElement);\n            }\n        }\n        path.push(currentId);\n        return path;\n    }\n    else {\n        return [currentId];\n    }\n}\n/**\n * Calculate translations based on the translationData\n *\n * @param {Object} translationData\n * @return {Object}\n */\nfunction getTranslations(translationData) {\n    const prevLinkX = translationData.prevLinkX;\n    const prevLinkY = translationData.prevLinkY;\n    const prevTransX = translationData.prevTransX;\n    const prevTransY = translationData.prevTransY;\n    const prevTransZ = translationData.prevTransZ;\n    const clickTransX = translationData.clickTransX;\n    const clickTransY = translationData.clickTransY;\n    const bridgeLength = translationData.bridgeLength;\n    const quadrant = translationData.quadrant;\n    const quadrantCoefX = translationData.quadrantCoefX;\n    const quadrantCoefZ = translationData.quadrantCoefZ;\n    const rotXbranch = translationData.rotXbranch;\n    const path = translationData.path;\n    let penultimateRoot;\n    let penultimateRootTransX;\n    let penultimateRootTransZ;\n    let penultimateRootAngleY;\n    let penultimateRootAngleYRad;\n    const penultimate = path.length - 2;\n    let transX;\n    let transY;\n    let transZ;\n    if (penultimate > 0) {\n        penultimateRoot = window.pluridScene.getBranchById(path[penultimate]);\n        penultimateRootAngleY = penultimateRoot.coordinates.angleY;\n        // console.log(penultimateRootAngleY);\n        penultimateRootAngleYRad = penultimateRootAngleY * Math.PI / 180;\n        penultimateRootTransX = penultimateRoot.coordinates.transX;\n        penultimateRootTransZ = penultimateRoot.coordinates.transZ;\n    }\n    if (path.length === 2) {\n        transX = quadrantCoefX * (prevLinkX + (clickTransX + bridgeLength) * Math.cos(rotXbranch * Math.PI / 180));\n        transZ = quadrantCoefZ * (clickTransX + bridgeLength) * Math.sin(rotXbranch * Math.PI / 180);\n        // console.log('PATH LENGTH', path.length);\n    }\n    if (path.length > 2) {\n        transX = prevTransX + Math.cos(penultimateRootAngleYRad) * (clickTransX + bridgeLength);\n        transZ = prevTransZ - Math.sin(penultimateRootAngleYRad) * (clickTransX + bridgeLength);\n        // console.log('PATH LENGTH', path.length);\n    }\n    transY = prevTransY + clickTransY;\n    return {\n        X: transX,\n        Y: transY,\n        Z: transZ,\n    };\n}\n/**\n * Sets eventListener on window to detect active sheet.\n */\nfunction setActiveSheetListener() {\n    window.addEventListener('click', (event) => {\n        // cross-browsers eventPath\n        const eventPath = event.path || (event.composedPath && event.composedPath());\n        setActiveSheet(eventPath);\n    });\n}\nsetActiveSheetListener();\n/**\n * Set active sheet logic\n */\nfunction setActiveSheet(eventPath) {\n    const activeSheet = window.pluridScene.meta.activeSheet;\n    const currentSheet = checkSheet(eventPath);\n    if (currentSheet) {\n        if (currentSheet !== activeSheet) {\n            window.pluridScene.meta.previousActiveSheet = window.pluridScene.meta.activeSheet;\n            window.pluridScene.meta.activeSheet = currentSheet;\n            removeActiveSheetShadow(window.pluridScene.meta.previousActiveSheet, 'plurid-sheet-active-transform');\n            removeActiveSheetShadow(window.pluridScene.meta.previousActiveSheet, 'plurid-sheet-active');\n            addActiveSheetShadow(window.pluridScene.meta.activeSheet, 'plurid-sheet-active');\n        }\n    }\n}\n/**\n * Checks if the path contains a <plurid-sheet> element\n *\n * @param {Array} path\n * @return {string}\n */\nfunction checkSheet(path) {\n    for (const pathElement of path) {\n        if (pathElement.nodeName === 'PLURID-SHEET') {\n            return pathElement.id;\n        }\n    }\n}\n/**\n * Remove CSS class .plurid-sheet-active.\n *\n * @param {string} sheetId\n */\nfunction removeActiveSheetShadow(sheetId, activeSheetClass) {\n    const sheet = document.getElementById(sheetId);\n    if (sheet) {\n        sheet.classList.remove(activeSheetClass);\n    }\n}\nexports.removeActiveSheetShadow = removeActiveSheetShadow;\n/**\n * Add CSS class .plurid-sheet-active.\n *\n * @param {string} sheetId\n */\nfunction addActiveSheetShadow(sheetId, activeSheetClass) {\n    const sheet = document.getElementById(sheetId);\n    if (sheet) {\n        sheet.classList.add(activeSheetClass);\n    }\n}\nexports.addActiveSheetShadow = addActiveSheetShadow;\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/sheet/sheet-core.ts?");

/***/ }),

/***/ "./src/ts/source/elements/sheet/sheet-define.ts":
/*!******************************************************!*\
  !*** ./src/ts/source/elements/sheet/sheet-define.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\nconst controls_core_1 = __webpack_require__(/*! ../controls/controls-core */ \"./src/ts/source/elements/controls/controls-core.ts\");\nconst controls_define_1 = __webpack_require__(/*! ../controls/controls-define */ \"./src/ts/source/elements/controls/controls-define.ts\");\nconst sheet_core_1 = __webpack_require__(/*! ./sheet-core */ \"./src/ts/source/elements/sheet/sheet-core.ts\");\nclass PluridSheet extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        const sheetIdNumber = complex_1.setId(this, 'sheet');\n        if (sheetIdNumber === 1) {\n            controls_define_1.initControls();\n        }\n        controls_core_1.renderControls(this, sheetIdNumber);\n        setTimeout(() => {\n            sheet_core_1.setLink(this);\n        }, 2000);\n        sheet_core_1.setAnchorTagsId(this.id);\n        sheet_core_1.setPluridRoots(this);\n    }\n    get name() {\n        return this.getAttribute('name');\n    }\n    set name(newName) {\n        this.setAttribute('name', newName);\n    }\n    get visible() {\n        return this.getAttribute('visible');\n    }\n    set visible(newVisible) {\n        this.setAttribute('visible', newVisible);\n    }\n}\ncustomElements.define('plurid-sheet', PluridSheet);\n// To think about implementation\n// class PluridSheetDouble extends HTMLElement {\n//     constructor() {\n//         super();\n//     }\n// }\n// customElements.define('plurid-sheet-double', PluridSheetDouble);\n// class PluridSheetDoubleFront extends HTMLElement {\n//     constructor() {\n//         super();\n//     }\n// }\n// customElements.define('plurid-sheet-double-front', PluridSheetDoubleFront);\n// class PluridSheetDoubleBack extends HTMLElement {\n//     constructor() {\n//         super();\n//     }\n// }\n// customElements.define('plurid-sheet-double-back', PluridSheetDoubleBack);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/sheet/sheet-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/solid/solid-define.ts":
/*!******************************************************!*\
  !*** ./src/ts/source/elements/solid/solid-define.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nclass PluridSolid extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-solid', PluridSolid);\nclass PluridSolidFront extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-solid-front', PluridSolidFront);\nclass PluridSolidBack extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-solid-back', PluridSolidBack);\nclass PluridSolidTop extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-solid-top', PluridSolidTop);\nclass PluridSolidBottom extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-solid-bottom', PluridSolidBottom);\nclass PluridSolidRight extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-solid-right', PluridSolidRight);\nclass PluridSolidLeft extends HTMLElement {\n    constructor() {\n        super();\n    }\n}\ncustomElements.define('plurid-solid-left', PluridSolidLeft);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/solid/solid-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/space/space-define.ts":
/*!******************************************************!*\
  !*** ./src/ts/source/elements/space/space-define.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nclass PluridSpace extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        // let sheetIdNumber = setId(this, 'sheet');\n    }\n}\ncustomElements.define('plurid-space', PluridSpace);\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/space/space-define.ts?");

/***/ }),

/***/ "./src/ts/source/elements/viewcube/viewcube-core.ts":
/*!**********************************************************!*\
  !*** ./src/ts/source/elements/viewcube/viewcube-core.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst matrix = __importStar(__webpack_require__(/*! ../../core/logic/matrix */ \"./src/ts/source/core/logic/matrix.ts\"));\n// import { getTransformRotate } from \"../../core/logic/transforms-core\";\nconst transcore = __importStar(__webpack_require__(/*! ../../core/logic/transforms-core */ \"./src/ts/source/core/logic/transforms-core.ts\"));\nconst simple_1 = __webpack_require__(/*! ../../core/utils/simple */ \"./src/ts/source/core/utils/simple.ts\");\nfunction renderViewcube(container) {\n    const viewcube = document.createElement(\"plurid-viewcube\");\n    container.appendChild(viewcube);\n}\nexports.renderViewcube = renderViewcube;\nfunction contentViewcube(container) {\n    return `\n        <div class=\"plurid-viewcube-container\">\n            <div class=\"plurid-viewcube-controls plurid-viewcube-scale-container\">\n                <input type=\"range\">\n            </div>\n\n            <div class=\"plurid-viewcube-controls plurid-viewcube-rotate-left-container\">\n                <div class=\"plurid-viewcube-button\">\n                    &#x25c0&#xFE0E;\n                </div>\n            </div>\n\n            <div class=\"plurid-viewcube-controls plurid-viewcube-rotate-right-container\">\n                <div class=\"plurid-viewcube-button\">\n                    &#x25b6&#xFE0E;\n                </div>\n            </div>\n\n            <div class=\"plurid-viewcube-controls plurid-viewcube-rotate-up-container\">\n                <div class=\"plurid-viewcube-button\">\n                    &#x25B2;\n                </div>\n            </div>\n\n            <div class=\"plurid-viewcube-controls plurid-viewcube-rotate-down-container\">\n                <div class=\"plurid-viewcube-button\">\n                    &#x25BC;\n                </div>\n            </div>\n\n            <div class=\"plurid-viewcube-model-container\">\n                <div class=\"plurid-viewcube-model-transform-container\">\n                    <div class=\"plurid-viewcube-model-transform-cube\">\n                        <div class=\"plurid-viewcube-model-transform-face plurid-viewcube-model-transform-front\">\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-left plurid-viewcube-model-transform-front-top-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-center plurid-viewcube-model-transform-front-top-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-right plurid-viewcube-model-transform-front-top-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-left plurid-viewcube-model-transform-front-middle-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-center plurid-viewcube-model-transform-front-middle-center\">\n                                <div class=\"plurid-viewcube-model-transform-face-text\">\n                                    Front\n                                </div>\n                            </div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-right plurid-viewcube-model-transform-front-middle-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-left plurid-viewcube-model-transform-front-bottom-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-center plurid-viewcube-model-transform-front-bottom-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-right plurid-viewcube-model-transform-front-bottom-right\"></div>\n                        </div>\n\n                        <div class=\"plurid-viewcube-model-transform-face plurid-viewcube-model-transform-left\">\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-left plurid-viewcube-model-transform-left-top-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-center plurid-viewcube-model-transform-left-top-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-right plurid-viewcube-model-transform-left-top-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-left plurid-viewcube-model-transform-left-middle-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-center plurid-viewcube-model-transform-left-middle-center\">\n                                <div class=\"plurid-viewcube-model-transform-face-text\">\n                                    Left\n                                </div>\n                            </div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-right plurid-viewcube-model-transform-left-middle-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-left plurid-viewcube-model-transform-left-bottom-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-center plurid-viewcube-model-transform-left-bottom-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-right plurid-viewcube-model-transform-left-bottom-right\"></div>\n                        </div>\n\n                        <div class=\"plurid-viewcube-model-transform-face plurid-viewcube-model-transform-back\">\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-left plurid-viewcube-model-transform-back-top-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-center plurid-viewcube-model-transform-back-top-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-right plurid-viewcube-model-transform-back-top-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-left plurid-viewcube-model-transform-back-middle-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-center plurid-viewcube-model-transform-back-middle-center\">\n                                <div class=\"plurid-viewcube-model-transform-face-text\">\n                                    Back\n                                </div>\n                            </div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-right plurid-viewcube-model-transform-back-middle-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-left plurid-viewcube-model-transform-back-bottom-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-center plurid-viewcube-model-transform-back-bottom-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-right plurid-viewcube-model-transform-back-bottom-right\"></div>\n                        </div>\n\n                        <div class=\"plurid-viewcube-model-transform-face plurid-viewcube-model-transform-right\">\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-left plurid-viewcube-model-transform-right-top-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-center plurid-viewcube-model-transform-right-top-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-right plurid-viewcube-model-transform-right-top-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-left plurid-viewcube-model-transform-right-middle-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-center plurid-viewcube-model-transform-right-middle-center\">\n                                <div class=\"plurid-viewcube-model-transform-face-text\">\n                                    Right\n                                </div>\n                            </div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-right plurid-viewcube-model-transform-right-middle-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-left plurid-viewcube-model-transform-right-bottom-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-center plurid-viewcube-model-transform-right-bottom-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-right plurid-viewcube-model-transform-right-bottom-right\"></div>\n                        </div>\n\n                        <div class=\"plurid-viewcube-model-transform-face plurid-viewcube-model-transform-top\">\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-left plurid-viewcube-model-transform-top-top-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-center plurid-viewcube-model-transform-top-top-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-right plurid-viewcube-model-transform-top-top-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-left plurid-viewcube-model-transform-top-middle-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-center plurid-viewcube-model-transform-top-middle-center\">\n                                <div class=\"plurid-viewcube-model-transform-face-text\">\n                                    Top\n                                </div>\n                            </div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-right plurid-viewcube-model-transform-top-middle-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-left plurid-viewcube-model-transform-top-bottom-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-center plurid-viewcube-model-transform-top-bottom-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-right plurid-viewcube-model-transform-top-bottom-right\"></div>\n                        </div>\n\n                        <div class=\"plurid-viewcube-model-transform-face plurid-viewcube-model-transform-base\">\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-left plurid-viewcube-model-transform-base-top-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-center plurid-viewcube-model-transform-base-top-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-top-right plurid-viewcube-model-transform-base-top-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-left plurid-viewcube-model-transform-base-middle-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-center plurid-viewcube-model-transform-base-middle-center\">\n                                <div class=\"plurid-viewcube-model-transform-face-text\">\n                                    Base\n                                </div>\n                            </div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-middle-right plurid-viewcube-model-transform-base-middle-right\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-left plurid-viewcube-model-transform-base-bottom-left\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-center plurid-viewcube-model-transform-base-bottom-center\"></div>\n                            <div class=\"plurid-viewcube-model-transform-face-zone plurid-viewcube-model-transform-bottom-right plurid-viewcube-model-transform-base-bottom-right\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"plurid-viewcube-controls plurid-viewcube-translate-y-container\">\n                <input type=\"range\" orient=\"vertical\">\n            </div>\n\n            <div class=\"plurid-viewcube-controls plurid-viewcube-translate-x-container\">\n                <input type=\"range\">\n            </div>\n\n            <div class=\"plurid-viewcube-controls plurid-viewcube-fitview-container\">\n                <div class=\"plurid-viewcube-button\">\n                    &#8281;\n                </div>\n            </div>\n        </div>\n    `;\n}\nexports.contentViewcube = contentViewcube;\nfunction rotateViewcube(event, plurid, rotateX, rotateY) {\n    // let rotateX = getTransformRotate(plurid).rotateX;\n    // let rotateY = getTransformRotate(plurid).rotateY;\n    // let rotateXdeg = rotateX * 180 / Math.PI;\n    // let rotateYdeg = rotateY * 180 / Math.PI;\n    if (previousButtons) {\n        for (const previousButton of previousButtons) {\n            previousButton.classList.remove('plurid-viewcube-model-transform-face-selected');\n        }\n    }\n    const viewCube = document.getElementsByClassName('plurid-viewcube-model-transform-cube')[0];\n    // viewCube.style.transform = `translateX(32px) translateY(23px) rotateX(${rotateXdeg}deg) rotateY(${rotateYdeg}deg)`;\n    viewCube.style.transform = `translateX(32px) translateY(23px) rotateX(${-1 * rotateX}deg) rotateY(${-1 * rotateY}deg)`;\n}\nexports.rotateViewcube = rotateViewcube;\nfunction setModelZoneButtons(buttons, viewZone) {\n    const viewZoneSwitch = (_viewZone) => ({\n        'front-middle-center': { rotateX: 0, rotateY: 0 },\n        'front-top-left': { rotateX: -45, rotateY: 45 },\n        'front-top-center': { rotateX: -45, rotateY: 0 },\n        'right-top-left': { rotateX: -45, rotateY: -45 },\n        'front-middle-left': { rotateX: 0, rotateY: 45 },\n        'right-middle-left': { rotateX: 0, rotateY: 315 },\n        'front-bottom-left': { rotateX: 45, rotateY: 45 },\n        'front-bottom-center': { rotateX: 45, rotateY: 0 },\n        'right-bottom-left': { rotateX: 45, rotateY: -45 },\n        'left-middle-center': { rotateX: 0, rotateY: 90 },\n        'left-top-left': { rotateX: -45, rotateY: 135 },\n        'left-top-center': { rotateX: -45, rotateY: 90 },\n        'left-middle-left': { rotateX: 0, rotateY: 135 },\n        'left-bottom-left': { rotateX: 45, rotateY: 135 },\n        'left-bottom-center': { rotateX: 45, rotateY: 90 },\n        'back-middle-center': { rotateX: 0, rotateY: 180 },\n        'back-top-left': { rotateX: -45, rotateY: 225 },\n        'back-top-center': { rotateX: -45, rotateY: 180 },\n        'back-middle-left': { rotateX: 0, rotateY: 225 },\n        'back-bottom-left': { rotateX: 45, rotateY: 225 },\n        'back-bottom-center': { rotateX: 45, rotateY: 180 },\n        'right-middle-center': { rotateX: 0, rotateY: 270 },\n        'right-top-center': { rotateX: -45, rotateY: 270 },\n        'right-bottom-center': { rotateX: 45, rotateY: 270 },\n        'top-middle-center': { rotateX: -90, rotateY: 0 },\n        'base-middle-center': { rotateX: 90, rotateY: 0 },\n    }[viewZone]);\n    function position(transform) {\n        const pluridRoots = document.getElementsByTagName('plurid-roots')[0];\n        const viewCube = document.getElementsByClassName('plurid-viewcube-model-transform-cube')[0];\n        const rotationDeviation = 0.06;\n        const rotateX = transform.rotateX + rotationDeviation;\n        const rotateY = transform.rotateY + rotationDeviation;\n        const translateX = transcore.getTransformTranslate(pluridRoots).translateX;\n        const translateY = transcore.getTransformTranslate(pluridRoots).translateY;\n        const translateZ = 0;\n        const scale = transcore.getTransformScale(pluridRoots).scale;\n        const valRotationMatrix = matrix.rotateMatrix(-1 * rotateX, -1 * rotateY);\n        // const valrotationXMatrix = matrix.rotateXMatrix(-1 * rotateX);\n        // const valrotationYMatrix = matrix.rotateYMatrix(-1 * rotateY);\n        const valtranslationMatrix = matrix.translateMatrix(translateX, translateY, 0);\n        const valscaleMatrix = matrix.scaleMatrix(scale);\n        const yPos = transcore.getyPos(null, pluridRoots);\n        // transform = transform <= 180 ? transform : transform + 360;\n        // const rotateY = getTransformRotate(viewCube).rotateY;\n        // const rotateYdeg = rotateY * 180 / Math.PI;\n        // const angle = (rotateY + transform) <= 180 ? transform : 360 + transform;\n        // console.log('rotateYdeg', rotateYdeg);\n        // console.log('transform', transform);\n        // console.log('angle', angle);\n        pluridRoots.style.transition = \"transform 300ms\";\n        transcore.setTransform(pluridRoots, valRotationMatrix, valtranslationMatrix, valscaleMatrix, yPos);\n        viewCube.style.transition = \"transform 300ms\";\n        if (rotateX !== 0) {\n            viewCube.style.transform = `translateX(32px) translateY(23px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n        }\n        else {\n            viewCube.style.transform = `translateX(32px) translateY(23px) rotateY(${rotateY}deg)`;\n        }\n        setTimeout(() => {\n            viewCube.style.transition = \"\";\n            pluridRoots.style.transition = \"\";\n        }, 300);\n        // function rotateThis(el, nR) {\n        //     rot = rot || 0; // if rot undefined or 0, make 0, else rot\n        //     let aR = rot % 360;\n        //     if ( aR < 0 ) { aR += 360; }\n        //     if ( aR < 180 && (nR > (aR + 180)) ) { rot -= 360; }\n        //     if ( aR >= 180 && (nR <= (aR - 180)) ) { rot += 360; }\n        //     rot += (nR - aR);\n        //     // element.style.transform = (\"rotate( \" + rot + \"deg )\");\n        //     el.style.transition = \"transform 300ms\";\n        //     el.style.transform = `translateX(23px) translateY(16px) rotateY(${rot}deg)`;\n        //     setTimeout(() => {\n        //         el.style.transition = \"\";\n        //     }, 300);\n        // }\n        // rotateThis(viewCube, transform);\n        // console.log(transform);\n        // console.log(previousButtons);\n        if (previousButtons) {\n            for (const previousButton of previousButtons) {\n                previousButton.classList.remove('plurid-viewcube-model-transform-face-selected');\n            }\n        }\n        for (const button of buttons) {\n            button.classList.add('plurid-viewcube-model-transform-face-selected');\n        }\n        previousButtons = buttons;\n    }\n    buttons.map((button) => {\n        button.addEventListener('mouseover', () => {\n            buttons.map((btn) => btn.classList.add('plurid-viewcube-model-transform-face-zone-active'));\n        });\n        button.addEventListener('mouseout', () => {\n            buttons.map((btn) => btn.classList.remove('plurid-viewcube-model-transform-face-zone-active'));\n        });\n        button.addEventListener('click', () => {\n            position(viewZoneSwitch(viewZone));\n        });\n    });\n}\nlet previousButtons;\nfunction initViewcubeModelButtons(container) {\n    const faces = ['front', 'left', 'back', 'right', 'top', 'base'];\n    const rows = ['top', 'middle', 'bottom'];\n    const columns = ['left', 'center', 'right'];\n    const buttons = {};\n    const viewZones = {};\n    faces.map((face) => {\n        rows.map((row) => {\n            columns.map((column) => {\n                const key = face + simple_1.capitalize(row) + simple_1.capitalize(column);\n                const selectClass = `${face}-${row}-${column}`;\n                const buttonClass = `plurid-viewcube-model-transform-${selectClass}`;\n                buttons[key] = container.getElementsByClassName(buttonClass)[0];\n                viewZones[key] = selectClass;\n            });\n        });\n    });\n    // Index of viewZone and zoneButtons must remain in a one-to-one correpondence.\n    const viewZone = [\n        viewZones.frontMiddleCenter,\n        viewZones.leftMiddleCenter,\n        viewZones.backMiddleCenter,\n        viewZones.rightMiddleCenter,\n        viewZones.topMiddleCenter,\n        viewZones.baseMiddleCenter,\n        viewZones.frontMiddleLeft,\n        viewZones.leftMiddleLeft,\n        viewZones.backMiddleLeft,\n        viewZones.rightMiddleLeft,\n        viewZones.frontTopCenter,\n        viewZones.frontBottomCenter,\n        viewZones.leftTopCenter,\n        viewZones.leftBottomCenter,\n        viewZones.backTopCenter,\n        viewZones.backBottomCenter,\n        viewZones.rightTopCenter,\n        viewZones.rightBottomCenter,\n        viewZones.frontTopLeft,\n        viewZones.leftTopLeft,\n        viewZones.backTopLeft,\n        viewZones.rightTopLeft,\n        viewZones.frontBottomLeft,\n        viewZones.leftBottomLeft,\n        viewZones.backBottomLeft,\n        viewZones.rightBottomLeft,\n    ];\n    const zoneButtons = [\n        [buttons.frontMiddleCenter],\n        [buttons.leftMiddleCenter],\n        [buttons.backMiddleCenter],\n        [buttons.rightMiddleCenter],\n        [buttons.topMiddleCenter],\n        [buttons.baseMiddleCenter],\n        [buttons.frontMiddleLeft, buttons.leftMiddleRight],\n        [buttons.leftMiddleLeft, buttons.backMiddleRight],\n        [buttons.backMiddleLeft, buttons.rightMiddleRight],\n        [buttons.rightMiddleLeft, buttons.frontMiddleRight],\n        [buttons.frontTopCenter, buttons.topBottomCenter],\n        [buttons.frontBottomCenter, buttons.baseTopCenter],\n        [buttons.leftTopCenter, buttons.topMiddleLeft],\n        [buttons.leftBottomCenter, buttons.baseMiddleLeft],\n        [buttons.backTopCenter, buttons.topTopCenter],\n        [buttons.backBottomCenter, buttons.baseBottomCenter],\n        [buttons.rightTopCenter, buttons.topMiddleRight],\n        [buttons.rightBottomCenter, buttons.baseMiddleRight],\n        [buttons.frontTopLeft, buttons.leftTopRight, buttons.topBottomLeft],\n        [buttons.leftTopLeft, buttons.backTopRight, buttons.topTopLeft],\n        [buttons.backTopLeft, buttons.rightTopRight, buttons.topTopRight],\n        [buttons.rightTopLeft, buttons.frontTopRight, buttons.topBottomRight],\n        [buttons.frontBottomLeft, buttons.leftBottomRight, buttons.baseTopLeft],\n        [buttons.leftBottomLeft, buttons.backBottomRight, buttons.baseBottomLeft],\n        [buttons.backBottomLeft, buttons.rightBottomRight, buttons.baseBottomRight],\n        [buttons.rightBottomLeft, buttons.frontBottomRight, buttons.baseTopRight],\n    ];\n    zoneButtons.map((_buttons, index) => {\n        setModelZoneButtons(_buttons, viewZone[index]);\n    });\n}\nexports.initViewcubeModelButtons = initViewcubeModelButtons;\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/viewcube/viewcube-core.ts?");

/***/ }),

/***/ "./src/ts/source/elements/viewcube/viewcube-define.ts":
/*!************************************************************!*\
  !*** ./src/ts/source/elements/viewcube/viewcube-define.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst complex_1 = __webpack_require__(/*! ../../core/utils/complex */ \"./src/ts/source/core/utils/complex.ts\");\nconst viewcube_core_1 = __webpack_require__(/*! ./viewcube-core */ \"./src/ts/source/elements/viewcube/viewcube-core.ts\");\nfunction initViewcube(container) {\n    // TO DO\n    // define only if multiple plurid-containers\n    // if (container.id == 'plurid-container-1') {\n    customElements.define('plurid-viewcube', PluridViewcube);\n    // }\n    viewcube_core_1.renderViewcube(container);\n    viewcube_core_1.initViewcubeModelButtons(container);\n}\nexports.initViewcube = initViewcube;\nclass PluridViewcube extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        complex_1.setId(this, 'viewcube');\n        this.innerHTML = viewcube_core_1.contentViewcube(this);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/ts/source/elements/viewcube/viewcube-define.ts?");

/***/ }),

/***/ "./src/ts/source/main/branch.ts":
/*!**************************************!*\
  !*** ./src/ts/source/main/branch.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/branch/branch-define */ \"./src/ts/source/elements/branch/branch-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/branch.ts?");

/***/ }),

/***/ "./src/ts/source/main/bridge.ts":
/*!**************************************!*\
  !*** ./src/ts/source/main/bridge.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/bridge/bridge-define */ \"./src/ts/source/elements/bridge/bridge-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/bridge.ts?");

/***/ }),

/***/ "./src/ts/source/main/container.ts":
/*!*****************************************!*\
  !*** ./src/ts/source/main/container.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/container/container-define */ \"./src/ts/source/elements/container/container-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/container.ts?");

/***/ }),

/***/ "./src/ts/source/main/content.ts":
/*!***************************************!*\
  !*** ./src/ts/source/main/content.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/content/content-define */ \"./src/ts/source/elements/content/content-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/content.ts?");

/***/ }),

/***/ "./src/ts/source/main/link.ts":
/*!************************************!*\
  !*** ./src/ts/source/main/link.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/link/link-define */ \"./src/ts/source/elements/link/link-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/link.ts?");

/***/ }),

/***/ "./src/ts/source/main/logic.ts":
/*!*************************************!*\
  !*** ./src/ts/source/main/logic.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../core/logic/directions */ \"./src/ts/source/core/logic/directions.ts\");\n__webpack_require__(/*! ../core/logic/quaternion */ \"./src/ts/source/core/logic/quaternion.ts\");\n__webpack_require__(/*! ../core/logic/gyroscope */ \"./src/ts/source/core/logic/gyroscope.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/logic.ts?");

/***/ }),

/***/ "./src/ts/source/main/options.ts":
/*!***************************************!*\
  !*** ./src/ts/source/main/options.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/options/options-define */ \"./src/ts/source/elements/options/options-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/options.ts?");

/***/ }),

/***/ "./src/ts/source/main/page.ts":
/*!************************************!*\
  !*** ./src/ts/source/main/page.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/page/page-define */ \"./src/ts/source/elements/page/page-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/page.ts?");

/***/ }),

/***/ "./src/ts/source/main/root.ts":
/*!************************************!*\
  !*** ./src/ts/source/main/root.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/root/root-define */ \"./src/ts/source/elements/root/root-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/root.ts?");

/***/ }),

/***/ "./src/ts/source/main/scion.ts":
/*!*************************************!*\
  !*** ./src/ts/source/main/scion.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/scion/scion-define */ \"./src/ts/source/elements/scion/scion-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/scion.ts?");

/***/ }),

/***/ "./src/ts/source/main/shadow.ts":
/*!**************************************!*\
  !*** ./src/ts/source/main/shadow.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/shadow/shadow-define */ \"./src/ts/source/elements/shadow/shadow-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/shadow.ts?");

/***/ }),

/***/ "./src/ts/source/main/sheet.ts":
/*!*************************************!*\
  !*** ./src/ts/source/main/sheet.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/sheet/sheet-define */ \"./src/ts/source/elements/sheet/sheet-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/sheet.ts?");

/***/ }),

/***/ "./src/ts/source/main/solid.ts":
/*!*************************************!*\
  !*** ./src/ts/source/main/solid.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/solid/solid-define */ \"./src/ts/source/elements/solid/solid-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/solid.ts?");

/***/ }),

/***/ "./src/ts/source/main/space.ts":
/*!*************************************!*\
  !*** ./src/ts/source/main/space.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../elements/space/space-define */ \"./src/ts/source/elements/space/space-define.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/space.ts?");

/***/ }),

/***/ "./src/ts/source/main/state.ts":
/*!*************************************!*\
  !*** ./src/ts/source/main/state.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../core/state/plurid-scene */ \"./src/ts/source/core/state/plurid-scene.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/state.ts?");

/***/ }),

/***/ "./src/ts/source/main/themes.ts":
/*!**************************************!*\
  !*** ./src/ts/source/main/themes.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../core/themes/theme */ \"./src/ts/source/core/themes/theme.ts\");\n\n\n//# sourceURL=webpack:///./src/ts/source/main/themes.ts?");

/***/ })

/******/ });